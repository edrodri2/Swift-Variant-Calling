
# Generated by stc version 0.6.0
# date                    : 2016/11/02 15:22:05
# Turbine version         : 0.6.0
# Input filename          : /home/azza/swift-project/Swift-Variant-Calling/VCcallingPipeline.swift
# Output filename         : /home/azza/swift-project/Swift-Variant-Calling
# STC home                : /usr/local/src/swift-t-0.9.1/stc
# Turbine home            : /usr/local/src/swift-t-0.9.1/turbine
# Compiler settings:
# stc.auto-declare              : true
# stc.c_preprocess              : true
# stc.checkpointing             : true
# stc.compiler-debug            : true
# stc.debugging                 : COMMENTS
# stc.ic.output-file            : 
# stc.input_filename            : VCcallingPipeline.swift
# stc.log.file                  : 
# stc.log.trace                 : false
# stc.must_pass_wait_vars       : true
# stc.opt.algebra               : true
# stc.opt.array-build           : true
# stc.opt.batch-refcounts       : true
# stc.opt.cancel-refcounts      : true
# stc.opt.constant-fold         : true
# stc.opt.controlflow-fusion    : true
# stc.opt.dataflow-op-inline    : true
# stc.opt.dead-code-elim        : true
# stc.opt.demote-globals        : true
# stc.opt.disable-asserts       : false
# stc.opt.expand-loop-threshold-insts: 256
# stc.opt.expand-loop-threshold-iters: 16
# stc.opt.expand-loops          : false
# stc.opt.finalized-var         : true
# stc.opt.flatten-nested        : true
# stc.opt.full-function-inline  : false
# stc.opt.full-unroll           : false
# stc.opt.function-always-inline-threshold: 5
# stc.opt.function-inline       : true
# stc.opt.function-inline-threshold: 50
# stc.opt.function-signature    : true
# stc.opt.hoist                 : true
# stc.opt.hoist-refcounts       : true
# stc.opt.loop-simplify         : true
# stc.opt.max-iterations        : 10
# stc.opt.merge-refcounts       : true
# stc.opt.piggyback-refcounts   : true
# stc.opt.pipeline              : false
# stc.opt.propagate-aliases     : true
# stc.opt.reorder-insts         : false
# stc.opt.shared-constants      : true
# stc.opt.unroll-loop-threshold-insts: 192
# stc.opt.unroll-loop-threshold-iters: 8
# stc.opt.unroll-loops          : true
# stc.opt.value-number          : true
# stc.opt.wait-coalesce         : true
# stc.output_filename           : 
# stc.preproc.force-cpp         : false
# stc.preproc.force-gcc         : false
# stc.preprocess_only           : false
# stc.profile                   : false
# stc.refcounting               : true
# stc.rpath                     : 
# stc.stc_home                  : /usr/local/src/swift-t-0.9.1/stc
# stc.turbine.version           : 0.6.0
# stc.turbine_home              : /usr/local/src/swift-t-0.9.1/turbine
# stc.version                   : 0.6.0

# Metadata:

package require turbine 0.6.0
namespace import turbine::*


proc swift:constants {  } {
    turbine::c::log "function:swift:constants"
    global c:s_-3
    turbine::allocate_custom c:s_-3 string 1 1 1 1
    turbine::store_string ${c:s_-3} "\"\""
    global c:s__GATKCombi-2
    turbine::allocate_custom c:s__GATKCombi-2 string 1 1 2 1
    turbine::store_string ${c:s__GATKCombi-2} "*.GATKCombineGVCF.raw.vcf"
    global c:s_compressio
    turbine::allocate_custom c:s_compressio string 1 1 3 1
    turbine::store_string ${c:s_compressio} "--compression 1"
    global c:s_markDuplic
    turbine::allocate_custom c:s_markDuplic string 1 1 4 1
    turbine::store_string ${c:s_markDuplic} "--markDuplicates"
    global c:s_sknownSite
    turbine::allocate_custom c:s_sknownSite string 1 1 5 1
    turbine::store_string ${c:s_sknownSite} "s/^/--knownSites /g"
    global c:s_sknown_g
    turbine::allocate_custom c:s_sknown_g string 1 1 6 1
    turbine::store_string ${c:s_sknown_g} "s/^/-known /g"
    global c:s_svariant_g
    turbine::allocate_custom c:s_svariant_g string 1 1 7 1
    turbine::store_string ${c:s_svariant_g} "s/^/--variant /g"
    global c:s_u
    turbine::allocate_custom c:s_u string 1 1 8 1
    turbine::store_string ${c:s_u} "-u"
}


proc swift:main {  } {
    turbine::c::log "function: __entry"
    # Var: string t:7 EXPR_TEMPORARY VCcallingPipeline.swift:27:33
    # Var: string t:625 EXPR_TEMPORARY VCcallingPipeline.swift:218:16
    # Var: string t:626 EXPR_TEMPORARY VCcallingPipeline.swift:218:40
    # Var: string t:627 EXPR_TEMPORARY VCcallingPipeline.swift:218:23
    # Var: string t:629 EXPR_TEMPORARY VCcallingPipeline.swift:218:41
    # Var: string t:634 EXPR_TEMPORARY VCcallingPipeline.swift:219:27
    # Var: $string v:configFilename VALUE_OF [string:configFilename]
    # Var: $void v:t:623 VALUE_OF [void:__t:623]
    # Var: int u:samples_processing_done VCcallingPipeline.swift:29:0
    # Var: file u:jointVCF VCcallingPipeline.swift:218:80
    # Var: file u:configFile VCcallingPipeline.swift:22:0
    # Var: file u:sampleInfoFile VCcallingPipeline.swift:27:0
    # Var: string[string] u:vars VCcallingPipeline.swift:25:0
    # Var: file u:variantFiles VCcallingPipeline.swift:219:42
    # Var: string t:11 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():39:88
    # Var: string t:13 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():39:106
    # Var: string t:15 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():39:148
    # Var: string t:35 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():52:14
    # Var: string t:80 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():64:5
    # Var: string t:234 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():111:54
    # Var: string t:239 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():112:55
    # Var: string t:242 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():114:31
    # Var: string t:363 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():146:17
    # Var: $file v:configFile VALUE_OF [file:configFile]
    # Var: $file v:configFile:1 VALUE_OF [file:configFile]
    # Var: $string$[int] v:configFileData VALUE_OF [string[int]:configFileData]
    # Var: boolean t:79 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():64:32
    # Var: float t:262 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():124:17
    # Var: string[int] u:indices VCcallingPipeline.swift:__entry():146:9
    lassign [ adlb::multicreate [ list string 1 1 9 ] [ list string 1 1 10 ] [ list string 2 1 11 ] [ list string 2 1 12 ] [ list string 1 1 13 ] [ list string 2 1 14 ] [ list integer 1 1 15 ] [ list container string string 17 1 19 ] [ list string 1 1 21 ] [ list string 1 1 22 ] [ list string 1 1 23 ] [ list string 1 1 24 ] [ list string 2 1 25 ] [ list string 2 1 26 ] [ list string 1 1 27 ] [ list string 1 1 28 ] [ list string 1 1 29 ] [ list integer 1 1 30 ] [ list float 1 1 31 ] [ list container integer string 1 1 32 ] ] t:7 t:625 t:626 t:627 t:629 t:634 u:samples_processing_done u:vars t:11 t:13 t:15 t:35 t:80 t:234 t:239 t:242 t:363 t:79 t:262 u:indices
    turbine::c::log "allocated t:7=<${t:7}> t:625=<${t:625}> t:626=<${t:626}> t:627=<${t:627}> t:629=<${t:629}>"
    turbine::c::log "allocated t:634=<${t:634}> u:samples_processing_done=<${u:samples_processing_done}> u:vars=<${u:vars}> t:11=<${t:11}> t:13=<${t:13}>"
    turbine::c::log "allocated t:15=<${t:15}> t:35=<${t:35}> t:80=<${t:80}> t:234=<${t:234}> t:239=<${t:239}>"
    turbine::c::log "allocated t:242=<${t:242}> t:363=<${t:363}> t:79=<${t:79}> t:262=<${t:262}> u:indices=<${u:indices}>"
    lassign [ turbine::make_file_tds [ adlb::multicreate [ list file 0 1 16 ] [ list file 1 1 17 ] [ list file 1 1 18 ] [ list file 1 1 20 ] ] [ list 1 0 0 1 ] ] u:jointVCF u:configFile u:sampleInfoFile u:variantFiles
    turbine::argv_accept_impl [ list "runfile" ]
    set v:configFilename [ turbine::argv_get_impl "runfile" ]
    set tcltmp:init_rc 1
    set v:configFile [ turbine::create_local_file_ref "" ${tcltmp:init_rc} 0 ]
    turbine::input_file_local v:configFile ${v:configFilename}
    turbine::store_file ${u:configFile} v:configFile 1
    set v:configFile:1 [ turbine::retrieve_file ${u:configFile} CACHED 1 ]
    set v:configFileData [ turbine::file_lines_impl ${v:configFile:1} ]
    turbine::container_reference ${u:vars} "SAMPLEINFORMATION" ${t:7} string
    turbine::trace_impl "####    Now launching joint_genotyping script for all SAMPLEs: each 200 together        ##########"
    turbine::container_reference ${u:vars} "OUTPUTDIR" ${t:627} string
    turbine::container_reference ${u:vars} "DELIVERYFOLDER" ${t:629} string
    turbine::container_reference ${u:vars} "TMPDIR" ${t:634} string
    turbine::container_reference ${u:vars} "SAMPLELB" ${t:11} string
    turbine::container_reference ${u:vars} "SAMPLEPL" ${t:13} string
    turbine::container_reference ${u:vars} "SAMPLECN" ${t:15} string
    turbine::container_reference ${u:vars} "MARKDUPLICATESTOOL" ${t:80} string
    turbine::container_reference ${u:vars} "DUP_CUTOFF" ${t:234} string
    turbine::container_reference ${u:vars} "MAP_CUTOFF" ${t:239} string
    turbine::container_reference ${u:vars} "SAMTOOLSDIR" ${t:242} string
    turbine::container_reference ${u:vars} "CHRNAMES" ${t:363} string
    dict for {tcltmp:ignore v:line} ${v:configFileData} {
        # Var: string[int] u:keyValuePair RENAMED [string[int]:keyValuePair] ./pipelinefunctions/miscellaneous.swift:getConfigVariables():8:16
        # Var: $string$[int] v:keyValuePair VALUE_OF [string[int]:keyValuePair]
        # Var: $string v:alias:name VALUE_OF [string:__alias:name]
        # Var: $string v:alias:value VALUE_OF [string:__alias:value]
        lassign [ adlb::multicreate [ list container integer string 1 2 33 ] ] u:keyValuePair
        turbine::c::log "allocated u:keyValuePair=<${u:keyValuePair}>"
        set v:keyValuePair [ turbine::split_impl ${v:line} "=" ]
        turbine::build_rec ${u:keyValuePair} ${v:keyValuePair} [ list container integer string ] 0 1
        set a:name [ adlb::subscript_container ${u:keyValuePair} 0 ]
        set v:alias:name [ turbine::retrieve_string ${a:name} ]
        set a:value [ adlb::subscript_container ${u:keyValuePair} 1 ]
        set v:alias:value [ turbine::retrieve_string ${a:value} CACHED 1 ]
        turbine::container_insert ${u:vars} ${v:alias:name} ${v:alias:value} string 0
        adlb::write_refcount_decr ${u:keyValuePair} 1
    }
    turbine::rule [ list ${u:samples_processing_done} ] "__entry-explicit-wait4 ${t:625} ${t:626} {${u:jointVCF}} ${u:samples_processing_done} {${u:variantFiles}} ${u:vars}"
    turbine::rule [ list ${t:7} ] "__entry-call_foreign-input_file ${t:11} ${t:13} ${t:15} ${t:234} ${t:239} ${t:242} ${t:262} ${t:35} ${t:626} ${t:627} ${t:634} ${t:7} ${t:79} ${t:80} ${u:indices} {${u:sampleInfoFile}} ${u:samples_processing_done} ${u:vars}"
    turbine::rule [ list ${t:634} ] "__entry-async_op-strcat-11 ${t:634} {${u:variantFiles}}"
    turbine::rule [ list ${t:80} ] "__entry-async_op-eq_string-2 ${t:79} ${t:80}"
    turbine::rule [ list ${t:234} ] "__entry-async_op-parse_float-4 ${t:234} ${t:262}"
    turbine::rule [ list ${t:363} ] "__entry-call_foreign-split-3 ${t:363} ${u:indices}"
    turbine::rule [ list ${t:627} ${t:629} ] "__entry-optmerged-8 ${t:35} ${t:625} ${t:626} ${t:627} ${t:629} {${u:jointVCF}}"
    turbine::decr_local_file_refcount v:configFile
    adlb::write_refcount_decr ${u:vars} 1
}


proc __entry-explicit-wait4 { t:625 t:626 u:jointVCF u:samples_processing_done u:variantFiles u:vars } {
    # Var: string c:s__GATKCombi-2 OPT_TEMPORARY
    global c:s__GATKCombi-2
    # Var: string[int] u:varlist VCcallingPipeline.swift:__entry():223:1
    lassign [ adlb::multicreate [ list container integer string 1 1 34 ] ] u:varlist
    turbine::c::log "allocated u:varlist=<${u:varlist}>"
    f:find_files ${u:variantFiles} ${t:626} ${c:s__GATKCombi-2} -100 "HARD" "RANK"
    turbine::rule [ list [ turbine::get_file_td ${u:variantFiles} ] ] "__entry-chain15 ${t:625} {${u:jointVCF}} {${u:variantFiles}} ${u:varlist} ${u:vars}"
    turbine::read_refcount_decr ${u:samples_processing_done} 1
    turbine::read_refcount_decr ${t:626} 1
}


proc __entry-chain15 { t:625 u:jointVCF u:variantFiles u:varlist u:vars } {
    # Var: string c:s_svariant_g OPT_TEMPORARY
    global c:s_svariant_g
    # Var: file t:655 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():223:48
    lassign [ turbine::make_file_tds [ adlb::multicreate [ list file 1 1 35 ] ] [ list 0 ] ] t:655
    f:sed ${t:655} ${u:variantFiles} ${c:s_svariant_g} -100 "HARD" "RANK"
    turbine::rule [ list [ turbine::get_file_td ${t:655} ] ] "__entry-call_foreign-read ${t:625} {${t:655}} {${u:jointVCF}} ${u:varlist} ${u:vars}"
    turbine::file_read_refcount_decr ${u:variantFiles} 1
}


proc __entry-call_foreign-read { t:625 t:655 u:jointVCF u:varlist u:vars } {
    # Var: $file v:t:655 VALUE_OF [file:__t:655]
    # Var: $string v:t:654 VALUE_OF [string:__t:654]
    # Var: $int v:n:4 RENAMED [$int:__v:n]
    # Var: $string v:t:653 VALUE_OF [string:__t:653]
    # Var: $string v:o:4 RENAMED [$string:__v:o]
    # Var: $string$[int] v:varlist VALUE_OF [string[int]:varlist]
    # Var: string t:661 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():224:27
    # Var: string t:665 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():224:51
    # Var: string t:669 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():224:92
    # Var: string t:671 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():224:113
    # Var: $string$[int] v:variants:1 RENAMED [$string$[int]:__v:variants] ./pipelinefunctions/joint_vcf.swift:GenotypeGVCFs():3:91
    lassign [ adlb::multicreate [ list string 1 1 36 ] [ list string 1 1 37 ] [ list string 1 1 38 ] [ list string 1 1 39 ] ] t:661 t:665 t:669 t:671
    turbine::c::log "allocated t:661=<${t:661}> t:665=<${t:665}> t:669=<${t:669}> t:671=<${t:671}>"
    set v:t:655 [ turbine::retrieve_file ${t:655} CACHED 1 ]
    set v:t:654 [ turbine::file_read_local ${v:t:655} ]
    set v:n:4 [ string length ${v:t:654} ]
    set v:t:653 [ turbine::replace_all_impl ${v:t:654} "\n" " " 0 ${v:n:4} ]
    set v:o:4 [ string trim ${v:t:653} ]
    set v:varlist [ turbine::split_impl ${v:o:4} " " ]
    turbine::build_rec ${u:varlist} ${v:varlist} [ list container integer string ] 0 1
    turbine::container_reference ${u:vars} "JAVADIR" ${t:661} string
    turbine::container_reference ${u:vars} "GATKDIR" ${t:665} string
    turbine::container_reference ${u:vars} "REFGENOMEDIR" ${t:669} string
    turbine::container_reference ${u:vars} "REFGENOME" ${t:671} string
    set v:variants:1 [ turbine::unpack_args ${u:varlist} 1 string ]
    turbine::rule [ list ${t:625} ${t:661} ${t:665} ${t:669} ${t:671} ] "__entry-async_op-dircat ${t:625} ${t:661} ${t:665} ${t:669} ${t:671} {${v:variants:1}} {${u:jointVCF}}"
    turbine::read_refcount_decr ${u:varlist} 1
}


proc __entry-async_op-dircat { t:625 t:661 t:665 t:669 t:671 v:variants:1 u:jointVCF } {
    # Var: $string v:t:669 VALUE_OF [string:__t:669]
    # Var: $string v:t:671 VALUE_OF [string:__t:671]
    # Var: $string v:t:668 VALUE_OF [string:__t:668]
    # Var: $string v:t:665 VALUE_OF [string:__t:665]
    # Var: $string v:t:664 VALUE_OF [string:__t:664]
    # Var: $string v:t:663 VALUE_OF [string:__t:663]
    # Var: $string v:javadir:7 RENAMED [$string:__v:javadir] ./pipelinefunctions/joint_vcf.swift:GenotypeGVCFs():3:91
    # Var: $string v:__filename:outputfile:7 RENAMED [$string:__v:__filename:outputfile] ./pipelinefunctions/joint_vcf.swift:GenotypeGVCFs():3:91
    # Var: $file v:outputfile:7 RENAMED [$file:__v:outputfile] ./pipelinefunctions/joint_vcf.swift:GenotypeGVCFs():3:91
    set v:t:669 [ turbine::retrieve_string ${t:669} CACHED 1 ]
    set v:t:671 [ turbine::retrieve_string ${t:671} CACHED 1 ]
    set v:t:668 "${v:t:669}/${v:t:671}"
    set v:t:665 [ turbine::retrieve_string ${t:665} CACHED 1 ]
    set v:t:664 "${v:t:665}/GenomeAnalysisTK.jar"
    set v:t:663 "${v:t:664}"
    set v:javadir:7 [ turbine::retrieve_string ${t:661} CACHED 1 ]
    set v:__filename:outputfile:7 [ turbine::retrieve_string ${t:625} CACHED 1 ]
    set tcltmp:init_rc 2
    set v:outputfile:7 [ turbine::create_local_file_ref ${v:__filename:outputfile:7} ${tcltmp:init_rc} 1 ]
    turbine::c::log [ list exec: __v:javadir:7 "-Xmx8g" "-jar" ${v:t:663} "-T" "GenotypeGVCFs" "-R" ${v:t:668} {*}${v:variants:1} "-o" ${v:__filename:outputfile:7} [ dict create ] ]
    turbine::exec_external ${v:javadir:7} [ dict create ] "-Xmx8g" "-jar" ${v:t:663} "-T" "GenotypeGVCFs" "-R" ${v:t:668} {*}${v:variants:1} "-o" ${v:__filename:outputfile:7}
    turbine::store_file ${u:jointVCF} v:outputfile:7 0
    turbine::decr_local_file_refcount v:outputfile:7
}


proc __entry-call_foreign-input_file { t:11 t:13 t:15 t:234 t:239 t:242 t:262 t:35 t:626 t:627 t:634 t:7 t:79 t:80 u:indices u:sampleInfoFile u:samples_processing_done u:vars } {
    # Var: $string v:t:7 VALUE_OF [string:__t:7]
    # Var: $file v:sampleInfoFile VALUE_OF [file:sampleInfoFile]
    # Var: $file v:sampleInfoFile:1 VALUE_OF [file:sampleInfoFile]
    # Var: $string$[int] v:sampleLines:1 VALUE_OF [string[int]:sampleLines]
    set v:t:7 [ turbine::retrieve_string ${t:7} CACHED 1 ]
    set tcltmp:init_rc 1
    set v:sampleInfoFile [ turbine::create_local_file_ref "" ${tcltmp:init_rc} 0 ]
    turbine::input_file_local v:sampleInfoFile ${v:t:7}
    turbine::store_file ${u:sampleInfoFile} v:sampleInfoFile 1
    set v:sampleInfoFile:1 [ turbine::retrieve_file ${u:sampleInfoFile} CACHED 1 ]
    set v:sampleLines:1 [ turbine::file_lines_impl ${v:sampleInfoFile:1} ]
    turbine::rule [ list ] "__entry-foreach-wait1 ${t:11} ${t:13} ${t:15} ${t:234} ${t:239} ${t:242} ${t:262} ${t:35} ${t:626} ${t:627} ${t:634} ${t:79} ${t:80} {${v:sampleLines:1}} ${u:indices} ${u:samples_processing_done} ${u:vars}"
    turbine::decr_local_file_refcount v:sampleInfoFile
}


proc __entry-foreach-wait1 { t:11 t:13 t:15 t:234 t:239 t:242 t:262 t:35 t:626 t:627 t:634 t:79 t:80 v:sampleLines:1 u:indices u:samples_processing_done u:vars } {
    set tcltmp:iters [ dict size ${v:sampleLines:1} ]
    turbine::read_refcount_incr ${t:242} [ expr { 4 * ${tcltmp:iters} } ]
    turbine::read_refcount_incr ${t:262} [ expr { ${tcltmp:iters} } ]
    turbine::read_refcount_incr ${t:35} [ expr { ${tcltmp:iters} } ]
    turbine::read_refcount_incr ${t:13} [ expr { ${tcltmp:iters} } ]
    turbine::read_refcount_incr ${t:79} [ expr { ${tcltmp:iters} } ]
    turbine::read_refcount_incr ${t:15} [ expr { ${tcltmp:iters} } ]
    turbine::read_refcount_incr ${t:234} [ expr { 3 * ${tcltmp:iters} } ]
    turbine::read_refcount_incr ${t:11} [ expr { ${tcltmp:iters} } ]
    turbine::read_refcount_incr ${t:80} [ expr { ${tcltmp:iters} } ]
    turbine::read_refcount_incr ${u:indices} [ expr { ${tcltmp:iters} } ]
    turbine::read_refcount_incr ${t:239} [ expr { 3 * ${tcltmp:iters} } ]
    turbine::read_refcount_incr ${u:vars} [ expr { 21 * ${tcltmp:iters} } ]
    turbine::read_refcount_incr ${t:634} [ expr { 5 * ${tcltmp:iters} } ]
    turbine::read_refcount_incr ${t:626} [ expr { 2 * ${tcltmp:iters} } ]
    turbine::read_refcount_incr ${t:627} [ expr { 3 * ${tcltmp:iters} } ]
    dict for {tcltmp:ignore v:sample} ${v:sampleLines:1} {
        # Var: string c:s_svariant_g OPT_TEMPORARY
        global c:s_svariant_g
        # Var: string[int] u:sampleInfo VCcallingPipeline.swift:__entry():34:1
        # Var: string u:read1 VCcallingPipeline.swift:__entry():36:1
        # Var: string u:read2 VCcallingPipeline.swift:__entry():37:1
        # Var: string u:rgheader VCcallingPipeline.swift:__entry():39:1
        # Var: string u:VarcallDir VCcallingPipeline.swift:__entry():43:1
        # Var: string u:RealignDir VCcallingPipeline.swift:__entry():44:1
        # Var: string t:26 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():48:22
        # Var: file u:dedupsortedbam VCcallingPipeline.swift:__entry():48:71
        # Var: string t:31 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():49:15
        # Var: file u:outbam VCcallingPipeline.swift:__entry():49:46
        # Var: string t:33 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():50:19
        # Var: file u:rawvariant VCcallingPipeline.swift:__entry():50:50
        # Var: file u:qcfile VCcallingPipeline.swift:__entry():52:69
        # Var: file u:mergedbam VCcallingPipeline.swift:__entry():53:78
        # Var: file u:mergedvariant VCcallingPipeline.swift:__entry():54:82
        # Var: file u:flagstats VCcallingPipeline.swift:__entry():57:87
        # Var: string t:64 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():60:18
        # Var: file u:alignedsam VCcallingPipeline.swift:__entry():60:63
        # Var: string t:70 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():61:45
        # Var: file u:chr_bamListfile VCcallingPipeline.swift:__entry():61:57
        # Var: file u:chr_vcfListfile VCcallingPipeline.swift:__entry():62:57
        # Var: string[int] u:stat VCcallingPipeline.swift:__entry():116:1
        # Var: string[int] t:244 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():117:14
        # Var: string[int] t:247 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():118:13
        # Var: string[int] t:250 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():119:12
        # Var: float u:perc_mapped VCcallingPipeline.swift:__entry():122:12
        # Var: float t:257 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():122:38
        # Var: int u:chromosomes_processing_done VCcallingPipeline.swift:__entry():147:1
        # Var: string[int] u:chr_bamList VCcallingPipeline.swift:__entry():201:1
        # Var: string[int] u:chr_vcfList VCcallingPipeline.swift:__entry():208:1
        # Var: file t:589 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():208:52
        # Var: $string$[int] v:sampleInfo VALUE_OF [string[int]:sampleInfo]
        # Var: $string v:alias:sampleName VALUE_OF [string:__alias:sampleName]
        # Var: $string v:alias:read1 VALUE_OF [string:__alias:read1]
        # Var: $string v:alias:read2 VALUE_OF [string:__alias:read2]
        # Var: $void v:t:227 VALUE_OF [void:__t:227]
        # Var: $void v:t:229 VALUE_OF [void:__t:229]
        # Var: $void v:t:361 VALUE_OF [void:__t:361]
        # Var: $string v:t:560 VALUE_OF [string:__t:560]
        # Var: $string v:t:559 VALUE_OF [string:__t:559]
        # Var: $void v:t:558 VALUE_OF [void:__t:558]
        # Var: $string v:t:583 VALUE_OF [string:__t:583]
        # Var: $string v:t:582 VALUE_OF [string:__t:582]
        # Var: $void v:t:581 VALUE_OF [void:__t:581]
        lassign [ adlb::multicreate [ list container integer string 1 2 40 ] [ list string 1 1 41 ] [ list string 1 1 42 ] [ list string 1 1 43 ] [ list string 1 1 44 ] [ list string 1 1 45 ] [ list string 1 1 46 ] [ list string 1 1 48 ] [ list string 1 1 50 ] [ list string 2 1 56 ] [ list string 1 1 58 ] [ list container integer string 3 1 61 ] [ list container integer string 1 1 62 ] [ list container integer string 1 1 63 ] [ list container integer string 1 1 64 ] [ list float 2 1 65 ] [ list float 1 1 66 ] [ list integer 1 1 67 ] [ list container integer string 1 1 68 ] [ list container integer string 1 1 69 ] ] u:sampleInfo u:read1 u:read2 u:rgheader u:VarcallDir u:RealignDir t:26 t:31 t:33 t:64 t:70 u:stat t:244 t:247 t:250 u:perc_mapped t:257 u:chromosomes_processing_done u:chr_bamList u:chr_vcfList
        turbine::c::log "allocated u:sampleInfo=<${u:sampleInfo}> u:read1=<${u:read1}> u:read2=<${u:read2}> u:rgheader=<${u:rgheader}> u:VarcallDir=<${u:VarcallDir}>"
        turbine::c::log "allocated u:RealignDir=<${u:RealignDir}> t:26=<${t:26}> t:31=<${t:31}> t:33=<${t:33}> t:64=<${t:64}>"
        turbine::c::log "allocated t:70=<${t:70}> u:stat=<${u:stat}> t:244=<${t:244}> t:247=<${t:247}> t:250=<${t:250}>"
        turbine::c::log "allocated u:perc_mapped=<${u:perc_mapped}> t:257=<${t:257}> u:chromosomes_processing_done=<${u:chromosomes_processing_done}> u:chr_bamList=<${u:chr_bamList}> u:chr_vcfList=<${u:chr_vcfList}>"
        lassign [ turbine::make_file_tds [ adlb::multicreate [ list file 4 1 47 ] [ list file 1 1 49 ] [ list file 1 1 51 ] [ list file 1 1 52 ] [ list file 1 1 53 ] [ list file 1 1 54 ] [ list file 1 1 55 ] [ list file 2 1 57 ] [ list file 1 1 59 ] [ list file 1 1 60 ] [ list file 1 1 70 ] ] [ list 1 1 1 1 1 1 1 1 1 1 0 ] ] u:dedupsortedbam u:outbam u:rawvariant u:qcfile u:mergedbam u:mergedvariant u:flagstats u:alignedsam u:chr_bamListfile u:chr_vcfListfile t:589
        set v:sampleInfo [ turbine::split_impl ${v:sample} " " ]
        turbine::build_rec ${u:sampleInfo} ${v:sampleInfo} [ list container integer string ] 0 1
        set a:sampleName [ adlb::subscript_container ${u:sampleInfo} 0 ]
        set v:alias:sampleName [ turbine::retrieve_string ${a:sampleName} ]
        set a:read1 [ adlb::subscript_container ${u:sampleInfo} 1 ]
        set v:alias:read1 [ turbine::retrieve_string ${a:read1} ]
        turbine::store_string ${u:read1} ${v:alias:read1}
        set a:read2 [ adlb::subscript_container ${u:sampleInfo} 2 ]
        set v:alias:read2 [ turbine::retrieve_string ${a:read2} CACHED 1 ]
        turbine::store_string ${u:read2} ${v:alias:read2}
        turbine::trace_impl "#############     END ALIGNMENT-DEDUPLICATION BLOCK                   ############"
        turbine::trace_impl "########   ALIGNMENT QC TEST   FOR SAMPLE" ${v:alias:sampleName} "             ###############"
        set a:t:245 [ adlb::subscript_container ${u:stat} 4 ]
        set a:tot_mapped [ adlb::subscript_container ${t:244} 0 ]
        set a:t:248 [ adlb::subscript_container ${u:stat} 0 ]
        set a:tot_reads [ adlb::subscript_container ${t:247} 0 ]
        set a:t:251 [ adlb::subscript_container ${u:stat} 3 ]
        set a:tot_dups [ adlb::subscript_container ${t:250} 0 ]
        turbine::trace_impl "#############   WRAP UP the align_dedup stage   ############"
        set v:t:560 "#######   MERGE BAMS BLOCK STARTS HERE  FOR             ${v:alias:sampleName}"
        set v:t:559 "${v:t:560}      ######"
        turbine::trace_impl ${v:t:559}
        set v:t:583 "#######   MERGE VCFs BLOCK STARTS HERE  FOR             ${v:alias:sampleName}"
        set v:t:582 "${v:t:583}       ######"
        turbine::trace_impl ${v:t:582}
        f:sed ${t:589} ${u:chr_vcfListfile} ${c:s_svariant_g} -100 "HARD" "RANK"
        turbine::rule [ list ${t:79} ] [ list __entry-if1 ${t:242} ${t:26} ${t:627} ${t:634} ${t:64} ${t:79} ${t:80} ${v:alias:read1} ${v:alias:read2} ${v:alias:sampleName} ${u:alignedsam} ${u:dedupsortedbam} ${u:read1} ${u:read2} ${u:rgheader} ${u:vars} ]
        turbine::rule [ list ${u:chromosomes_processing_done} ] [ list __entry-explicit-wait3 ${u:RealignDir} ${u:VarcallDir} ${t:31} ${t:634} ${v:alias:sampleName} ${u:chr_bamList} ${u:chr_bamListfile} ${u:chr_vcfListfile} ${u:chromosomes_processing_done} ${u:mergedbam} ${u:outbam} ${u:vars} ]
        turbine::rule [ list ${t:11} ${t:13} ${t:15} ] [ list __entry-async_op-sprintf ${t:11} ${t:13} ${t:15} ${v:alias:sampleName} ${u:rgheader} ]
        turbine::rule [ list ${t:35} ] "__entry-copy_in_filename ${t:35} {${u:qcfile}}"
        turbine::rule [ list ${t:626} ] [ list __entry-async_op-dircat-1 ${t:626} ${v:alias:sampleName} ${u:mergedbam} ${u:mergedvariant} ]
        turbine::rule [ list ${t:234} ] "__entry-call_foreign-trace ${t:234}"
        turbine::rule [ list ${t:239} ] "__entry-call_foreign-trace-1 ${t:239}"
        turbine::rule [ list ${a:t:245} ] "__entry-call_foreign-split {${a:t:245}} ${t:244}"
        turbine::rule [ list ${a:t:248} ] "__entry-call_foreign-split-1 {${a:t:248}} ${t:247}"
        turbine::rule [ list ${a:t:251} ] "__entry-call_foreign-split-2 {${a:t:251}} ${t:250}"
        turbine::rule [ list ${a:tot_reads} ] [ list __entry-async_op-parse_float ${a:tot_dups} ${a:tot_reads} ${t:234} ${t:239} ${t:257} ${t:262} ${v:alias:sampleName} ${u:perc_mapped} ${u:qcfile} ]
        turbine::rule [ list ${a:tot_mapped} ] "__entry-async_op-parse_float-3 {${a:tot_mapped}} ${t:257}"
        turbine::rule [ list [ turbine::get_file_td ${t:589} ] ] "__entry-call_foreign-read-2 ${t:33} {${t:589}} ${t:626} {${v:sampleLines:1}} ${u:chr_vcfList} {${u:mergedvariant}} {${u:rawvariant}} ${u:samples_processing_done} ${u:vars}"
        turbine::rule [ list ${t:627} ] [ list __entry-optmerged-3 ${u:RealignDir} ${u:VarcallDir} ${t:242} ${t:26} ${t:31} ${t:33} ${t:627} ${t:70} ${v:alias:sampleName} ${u:chromosomes_processing_done} ${u:dedupsortedbam} ${u:flagstats} ${u:indices} ${u:outbam} ${u:rawvariant} ${u:stat} ${u:vars} ]
        turbine::rule [ list ${t:634} ] [ list __entry-optmerged-7 ${t:634} ${t:64} ${t:70} ${v:alias:sampleName} ${u:alignedsam} ${u:chr_bamListfile} ${u:chr_vcfListfile} ]
        adlb::write_refcount_decr ${u:sampleInfo} 1
    }
    turbine::read_refcount_decr ${t:242} 1
    turbine::read_refcount_decr ${t:15} 1
    turbine::read_refcount_decr ${t:234} 1
    turbine::read_refcount_decr ${t:11} 1
    turbine::read_refcount_decr ${t:13} 1
    turbine::read_refcount_decr ${t:35} 1
    turbine::read_refcount_decr ${t:79} 1
    turbine::read_refcount_decr ${t:262} 1
    turbine::read_refcount_decr ${t:80} 1
    turbine::read_refcount_decr ${u:indices} 1
    turbine::read_refcount_decr ${t:626} 1
    turbine::read_refcount_decr ${t:634} 1
    turbine::read_refcount_decr ${t:239} 1
    turbine::read_refcount_decr ${u:vars} 1
    turbine::read_refcount_decr ${t:627} 1
}


proc __entry-if1 { t:242 t:26 t:627 t:634 t:64 t:79 t:80 v:alias:read1 v:alias:read2 v:alias:sampleName u:alignedsam u:dedupsortedbam u:read1 u:read2 u:rgheader u:vars } {
    # Var: $boolean v:__t:79 VALUE_OF [boolean:__t:79] VCcallingPipeline.swift:__entry():64:35
    set v:__t:79 [ turbine::retrieve_integer ${t:79} CACHED 1 ]
    if { ${v:__t:79} } {
        # Var: string t:85 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():66:17
        # Var: file u:dedupsam VCcallingPipeline.swift:__entry():66:63
        # Var: file u:dedupbam VCcallingPipeline.swift:__entry():67:66
        # Var: string t:95 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():69:23
        # Var: string t:97 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():69:53
        # Var: string t:99 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():69:71
        # Var: int t:101 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():69:93
        # Var: string t:102 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():69:104
        # Var: $void v:t:83 VALUE_OF [void:__t:83]
        lassign [ adlb::multicreate [ list string 1 1 71 ] [ list string 1 1 74 ] [ list string 1 1 75 ] [ list string 1 1 76 ] [ list integer 1 1 77 ] [ list string 1 1 78 ] ] t:85 t:95 t:97 t:99 t:101 t:102
        turbine::c::log "allocated t:85=<${t:85}> t:95=<${t:95}> t:97=<${t:97}> t:99=<${t:99}> t:101=<${t:101}>"
        turbine::c::log "allocated t:102=<${t:102}>"
        lassign [ turbine::make_file_tds [ adlb::multicreate [ list file 1 1 72 ] [ list file 1 1 73 ] ] [ list 1 1 ] ] u:dedupsam u:dedupbam
        turbine::trace_impl "##CASE1: dedup tool is ## SAMBLASTER ##. We use a single command for align-deduplication ##"
        turbine::container_reference ${u:vars} "BWADIR" ${t:95} string
        turbine::container_reference ${u:vars} "BWAINDEX" ${t:97} string
        turbine::container_reference ${u:vars} "BWAMEMPARAMS" ${t:99} string
        turbine::container_reference ${u:vars} "PBSCORES" ${t:102} string
        f:bwa_mem ${u:alignedsam} ${t:95} ${u:read1} ${u:read2} ${t:97} ${t:99} ${t:101} ${u:rgheader} -100 "HARD" "RANK"
        turbine::rule [ list [ turbine::get_file_td ${u:alignedsam} ] ] "__entry-chain1 ${t:101} ${t:242} ${t:634} ${t:64} ${t:85} {${u:alignedsam}} {${u:dedupbam}} {${u:dedupsam}} {${u:dedupsortedbam}} ${u:vars}"
        turbine::rule [ list ${t:634} ] [ list __entry-async_op-strcat-1 ${t:634} ${t:85} ${v:alias:sampleName} ${u:dedupsam} ]
        turbine::rule [ list ${t:627} ] [ list __entry-async_op-strcat-2 ${t:627} ${v:alias:sampleName} ${u:dedupbam} ]
        turbine::rule [ list ${t:102} ] "__entry-async_op-parse_int ${t:101} ${t:102}"
        turbine::read_refcount_decr ${t:99} 1
        turbine::read_refcount_decr ${t:95} 1
        turbine::read_refcount_decr ${t:97} 1
    } else {
        # Var: file u:alignedbam VCcallingPipeline.swift:__entry():80:67
        lassign [ turbine::make_file_tds [ adlb::multicreate [ list file 2 1 82 ] ] [ list 1 ] ] u:alignedbam
        turbine::read_refcount_incr ${t:627} 1
        turbine::read_refcount_incr ${u:rgheader} 1
        turbine::read_refcount_incr ${u:vars} 2
        turbine::file_read_refcount_incr ${u:alignedsam} 1
        turbine::read_refcount_incr ${t:80} 1
        turbine::read_refcount_incr ${u:read1} 1
        turbine::read_refcount_incr ${u:read2} 1
        turbine::read_refcount_incr ${t:26} 1
        turbine::read_refcount_incr ${t:242} 1
        turbine::rule [ list ${t:627} ] [ list __entry-async_op-strcat-3 ${t:627} ${v:alias:sampleName} ${u:alignedbam} ]
        turbine::rule [ list ${t:80} ] [ list __entry-async_op-eq_string ${t:242} ${t:26} ${t:627} ${t:634} ${t:64} ${t:80} ${v:alias:read1} ${v:alias:read2} ${v:alias:sampleName} ${u:alignedbam} ${u:alignedsam} ${u:dedupsortedbam} ${u:read1} ${u:read2} ${u:rgheader} ${u:vars} ]
    }
    turbine::read_refcount_decr ${t:242} 1
    turbine::read_refcount_decr ${t:26} 1
    turbine::file_read_refcount_decr ${u:dedupsortedbam} 1
    turbine::read_refcount_decr ${u:read2} 1
    turbine::read_refcount_decr ${t:64} 1
    turbine::read_refcount_decr ${u:read1} 1
    turbine::read_refcount_decr ${t:80} 1
    turbine::file_read_refcount_decr ${u:alignedsam} 1
    turbine::read_refcount_decr ${t:634} 1
    turbine::read_refcount_decr ${u:vars} 1
    turbine::read_refcount_decr ${u:rgheader} 1
    turbine::read_refcount_decr ${t:627} 1
}


proc __entry-chain1 { t:101 t:242 t:634 t:64 t:85 u:alignedsam u:dedupbam u:dedupsam u:dedupsortedbam u:vars } {
    # Var: string t:104 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():70:24
    lassign [ adlb::multicreate [ list string 1 1 79 ] ] t:104
    turbine::c::log "allocated t:104=<${t:104}>"
    turbine::container_reference ${u:vars} "SAMBLASTERDIR" ${t:104} string
    turbine::rule [ list ${t:104} ${t:64} ${t:85} ] "samblaster-app-leaf1 ${t:101} ${t:104} ${t:242} ${t:634} ${t:64} ${t:85} {${u:alignedsam}} {${u:dedupbam}} {${u:dedupsam}} {${u:dedupsortedbam}} ${u:vars}"
}


proc samblaster-app-leaf1 { t:101 t:104 t:242 t:634 t:64 t:85 u:alignedsam u:dedupbam u:dedupsam u:dedupsortedbam u:vars } {
    # Var: $string v:samblasterdir RENAMED [$string:__v:samblasterdir] ./pipelinefunctions/align_dedup.swift:samblaster():27:43
    # Var: $string v:__filename:inputFile RENAMED [$string:__v:__filename:inputFile] ./pipelinefunctions/align_dedup.swift:samblaster():27:43
    # Var: $string v:__filename:output RENAMED [$string:__v:__filename:output] ./pipelinefunctions/align_dedup.swift:samblaster():27:43
    # Var: $file v:inputFile RENAMED [$file:__v:inputFile] ./pipelinefunctions/align_dedup.swift:samblaster():27:43
    # Var: $file v:output RENAMED [$file:__v:output] ./pipelinefunctions/align_dedup.swift:samblaster():27:43
    set v:samblasterdir [ turbine::retrieve_string ${t:104} CACHED 1 ]
    set v:__filename:inputFile [ turbine::retrieve_string ${t:64} CACHED 1 ]
    set v:__filename:output [ turbine::retrieve_string ${t:85} CACHED 1 ]
    set v:inputFile [ turbine::retrieve_file ${u:alignedsam} CACHED 1 ]
    set tcltmp:init_rc 2
    set v:output [ turbine::create_local_file_ref ${v:__filename:output} ${tcltmp:init_rc} 1 ]
    turbine::c::log [ list exec: __v:samblasterdir "-M" "-i" ${v:__filename:inputFile} [ dict create "stdout" ${v:__filename:output} ] ]
    turbine::exec_external ${v:samblasterdir} [ dict create "stdout" ${v:__filename:output} ] "-M" "-i" ${v:__filename:inputFile}
    turbine::store_file ${u:dedupsam} v:output 0
    turbine::rule [ list ] "__entry-chain2 ${t:101} ${t:242} ${t:634} {${u:dedupbam}} {${u:dedupsam}} {${u:dedupsortedbam}} ${u:vars}"
    turbine::decr_local_file_refcount v:output
}


proc __entry-chain2 { t:101 t:242 t:634 u:dedupbam u:dedupsam u:dedupsortedbam u:vars } {
    # Var: string c:s_u OPT_TEMPORARY
    global c:s_u
    f:samtools_view ${u:dedupbam} ${t:242} ${u:dedupsam} ${t:101} ${c:s_u} -100 "HARD" "RANK"
    turbine::rule [ list [ turbine::get_file_td ${u:dedupbam} ] ] "__entry-chain3 ${t:101} ${t:634} {${u:dedupbam}} {${u:dedupsortedbam}} ${u:vars}"
    turbine::read_refcount_decr ${t:242} 1
    turbine::file_read_refcount_decr ${u:dedupsam} 1
}


proc __entry-chain3 { t:101 t:634 u:dedupbam u:dedupsortedbam u:vars } {
    # Var: string c:s_compressio OPT_TEMPORARY
    global c:s_compressio
    # Var: string t:112 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():76:28
    # Var: string t:113 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():76:35
    lassign [ adlb::multicreate [ list string 1 1 80 ] [ list string 1 1 81 ] ] t:112 t:113
    turbine::c::log "allocated t:112=<${t:112}> t:113=<${t:113}>"
    turbine::container_reference ${u:vars} "NOVOCRAFTDIR" ${t:113} string
    f:novosort ${u:dedupsortedbam} ${t:112} ${u:dedupbam} ${t:634} ${t:101} ${c:s_compressio} -100 "HARD" "RANK"
    turbine::rule [ list ${t:113} ] "__entry-async_op-strcat ${t:112} ${t:113}"
    turbine::read_refcount_decr ${t:101} 1
    turbine::read_refcount_decr ${t:112} 1
    turbine::file_read_refcount_decr ${u:dedupsortedbam} 1
    turbine::read_refcount_decr ${t:634} 1
    turbine::file_read_refcount_decr ${u:dedupbam} 1
}


proc __entry-async_op-strcat { t:112 t:113 } {
    # Var: $string v:t:113 VALUE_OF [string:__t:113]
    # Var: $string v:t:112 VALUE_OF [string:__t:112]
    set v:t:113 [ turbine::retrieve_string ${t:113} CACHED 1 ]
    set v:t:112 "${v:t:113}/novosort"
    turbine::store_string ${t:112} ${v:t:112}
}


proc __entry-async_op-strcat-1 { t:634 t:85 v:alias:sampleName u:dedupsam } {
    # Var: $string v:t:634:3 VALUE_OF [string:__t:634]
    # Var: $string v:t:85 VALUE_OF [string:__t:85]
    set v:t:634:3 [ turbine::retrieve_string ${t:634} CACHED 1 ]
    set v:t:85 "${v:t:634:3}/align/${v:alias:sampleName}.wdups.sam"
    turbine::store_string ${t:85} ${v:t:85}
    turbine::set_filename_val ${u:dedupsam} ${v:t:85}
}


proc __entry-async_op-strcat-2 { t:627 v:alias:sampleName u:dedupbam } {
    # Var: $string v:t:627:5 VALUE_OF [string:__t:627]
    # Var: $string v:t:90 VALUE_OF [string:__t:90]
    set v:t:627:5 [ turbine::retrieve_string ${t:627} CACHED 1 ]
    set v:t:90 "${v:t:627:5}/align/${v:alias:sampleName}.wdups.bam"
    turbine::set_filename_val ${u:dedupbam} ${v:t:90}
}


proc __entry-async_op-parse_int { t:101 t:102 } {
    # Var: $string v:t:102 VALUE_OF [string:__t:102]
    # Var: $int v:t:101 VALUE_OF [int:__t:101]
    set v:t:102 [ turbine::retrieve_string ${t:102} CACHED 1 ]
    set v:t:101 [ turbine::parse_int_impl ${v:t:102} 10 ]
    turbine::store_integer ${t:101} ${v:t:101}
}


proc __entry-async_op-strcat-3 { t:627 v:alias:sampleName u:alignedbam } {
    # Var: $string v:t:627:6 VALUE_OF [string:__t:627]
    # Var: $string v:t:123 VALUE_OF [string:__t:123]
    set v:t:627:6 [ turbine::retrieve_string ${t:627} CACHED 1 ]
    set v:t:123 "${v:t:627:6}/align/${v:alias:sampleName}.nodups.bam"
    turbine::set_filename_val ${u:alignedbam} ${v:t:123}
}


proc __entry-async_op-eq_string { t:242 t:26 t:627 t:634 t:64 t:80 v:alias:read1 v:alias:read2 v:alias:sampleName u:alignedbam u:alignedsam u:dedupsortedbam u:read1 u:read2 u:rgheader u:vars } {
    # Var: $string v:t:80:1 VALUE_OF [string:__t:80]
    # Var: $boolean v:t:128 VALUE_OF [boolean:__t:128]
    set v:t:80:1 [ turbine::retrieve_string ${t:80} CACHED 1 ]
    set v:t:128 [ string equal ${v:t:80:1} "PICARD" ]
    if { ${v:t:128} } {
        # Var: string t:134 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():83:26
        # Var: file u:alignedsortedbam VCcallingPipeline.swift:__entry():83:75
        # Var: string t:139 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():84:21
        # Var: file u:metricsfile VCcallingPipeline.swift:__entry():84:70
        # Var: string t:144 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():85:24
        # Var: string t:146 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():85:54
        # Var: string t:148 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():85:72
        # Var: int t:150 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():85:94
        # Var: string t:151 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():85:105
        # Var: $void v:t:132 VALUE_OF [void:__t:132]
        lassign [ adlb::multicreate [ list string 1 1 83 ] [ list string 1 1 85 ] [ list string 1 1 87 ] [ list string 1 1 88 ] [ list string 1 1 89 ] [ list integer 1 1 90 ] [ list string 1 1 91 ] ] t:134 t:139 t:144 t:146 t:148 t:150 t:151
        turbine::c::log "allocated t:134=<${t:134}> t:139=<${t:139}> t:144=<${t:144}> t:146=<${t:146}> t:148=<${t:148}>"
        turbine::c::log "allocated t:150=<${t:150}> t:151=<${t:151}>"
        lassign [ turbine::make_file_tds [ adlb::multicreate [ list file 1 1 84 ] [ list file 0 1 86 ] ] [ list 1 1 ] ] u:alignedsortedbam u:metricsfile
        turbine::read_refcount_incr ${t:627} 1
        turbine::read_refcount_incr ${t:26} 1
        turbine::trace_impl "##CASE 2: dedup tool is ## PICARD ##. One command for align, one for sort, one for dedup ##"
        turbine::container_reference ${u:vars} "BWADIR" ${t:144} string
        turbine::container_reference ${u:vars} "BWAINDEX" ${t:146} string
        turbine::container_reference ${u:vars} "BWAMEMPARAMS" ${t:148} string
        turbine::container_reference ${u:vars} "PBSCORES" ${t:151} string
        f:bwa_mem ${u:alignedsam} ${t:144} ${u:read1} ${u:read2} ${t:146} ${t:148} ${t:150} ${u:rgheader} -100 "HARD" "RANK"
        turbine::rule [ list [ turbine::get_file_td ${u:alignedsam} ] ] "__entry-chain4 ${t:134} ${t:139} ${t:150} ${t:242} ${t:26} ${t:634} {${u:alignedbam}} {${u:alignedsam}} {${u:alignedsortedbam}} {${u:dedupsortedbam}} {${u:metricsfile}} ${u:vars}"
        turbine::rule [ list ${t:151} ] "__entry-async_op-parse_int-1 ${t:150} ${t:151}"
        turbine::rule [ list ${t:627} ] [ list __entry-optmerged ${t:134} ${t:139} ${t:627} ${v:alias:sampleName} ${u:alignedsortedbam} ${u:metricsfile} ]
        turbine::read_refcount_decr ${t:144} 1
        turbine::read_refcount_decr ${t:148} 1
        turbine::read_refcount_decr ${t:146} 1
    } else {
        # Var: string t:179 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():94:7
        # Var: $void v:t:176 VALUE_OF [void:__t:176]
        lassign [ adlb::multicreate [ list string 1 1 96 ] ] t:179
        turbine::c::log "allocated t:179=<${t:179}>"
        turbine::read_refcount_incr ${u:read1} 1
        turbine::read_refcount_incr ${t:64} 1
        turbine::read_refcount_incr ${u:read2} 1
        turbine::read_refcount_incr ${u:rgheader} 1
        turbine::read_refcount_incr ${u:vars} 1
        turbine::file_read_refcount_incr ${u:alignedbam} 2
        turbine::file_read_refcount_incr ${u:alignedsam} 1
        turbine::file_read_refcount_incr ${u:dedupsortedbam} 1
        turbine::read_refcount_incr ${t:242} 1
        turbine::trace_impl "##CASE DEFAULT: dedup tool is ## NOVOSORT ##. We use one command for dup-sort ##"
        turbine::container_reference ${u:vars} "ALIGNERTOOL" ${t:179} string
        turbine::rule [ list [ turbine::get_file_td ${u:alignedbam} ] ] "__entry-explicit-wait1 ${t:634} {${u:alignedbam}} {${u:dedupsortedbam}} ${u:vars}"
        turbine::rule [ list ${t:179} ] [ list __entry-async_op-eq_string-1 ${t:179} ${t:242} ${t:64} ${v:alias:read1} ${v:alias:read2} ${u:alignedbam} ${u:alignedsam} ${u:read1} ${u:read2} ${u:rgheader} ${u:vars} ]
    }
    turbine::read_refcount_decr ${t:242} 1
    turbine::read_refcount_decr ${t:26} 1
    turbine::file_read_refcount_decr ${u:dedupsortedbam} 1
    turbine::file_read_refcount_decr ${u:alignedbam} 1
    turbine::read_refcount_decr ${u:read2} 1
    turbine::read_refcount_decr ${t:64} 1
    turbine::read_refcount_decr ${u:read1} 1
    turbine::file_read_refcount_decr ${u:alignedsam} 1
    turbine::read_refcount_decr ${t:634} 1
    turbine::read_refcount_decr ${u:vars} 1
    turbine::read_refcount_decr ${u:rgheader} 1
    turbine::read_refcount_decr ${t:627} 1
}


proc __entry-chain4 { t:134 t:139 t:150 t:242 t:26 t:634 u:alignedbam u:alignedsam u:alignedsortedbam u:dedupsortedbam u:metricsfile u:vars } {
    # Var: string c:s_u OPT_TEMPORARY
    global c:s_u
    f:samtools_view ${u:alignedbam} ${t:242} ${u:alignedsam} ${t:150} ${c:s_u} -100 "HARD" "RANK"
    turbine::rule [ list [ turbine::get_file_td ${u:alignedbam} ] ] "__entry-chain5 ${t:134} ${t:139} ${t:150} ${t:26} ${t:634} {${u:alignedbam}} {${u:alignedsortedbam}} {${u:dedupsortedbam}} {${u:metricsfile}} ${u:vars}"
    turbine::read_refcount_decr ${t:242} 1
    turbine::file_read_refcount_decr ${u:alignedsam} 1
}


proc __entry-chain5 { t:134 t:139 t:150 t:26 t:634 u:alignedbam u:alignedsortedbam u:dedupsortedbam u:metricsfile u:vars } {
    # Var: string c:s_-3 OPT_TEMPORARY
    global c:s_-3
    # Var: string t:159 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():88:31
    # Var: string t:160 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():88:38
    lassign [ adlb::multicreate [ list string 1 1 92 ] [ list string 1 1 93 ] ] t:159 t:160
    turbine::c::log "allocated t:159=<${t:159}> t:160=<${t:160}>"
    turbine::container_reference ${u:vars} "NOVOCRAFTDIR" ${t:160} string
    f:novosort ${u:alignedsortedbam} ${t:159} ${u:alignedbam} ${t:634} ${t:150} ${c:s_-3} -100 "HARD" "RANK"
    turbine::rule [ list [ turbine::get_file_td ${u:alignedsortedbam} ] ] "__entry-chain6 ${t:134} ${t:139} ${t:26} ${t:634} {${u:alignedsortedbam}} {${u:dedupsortedbam}} {${u:metricsfile}} ${u:vars}"
    turbine::rule [ list ${t:160} ] "__entry-async_op-strcat-4 ${t:159} ${t:160}"
    turbine::read_refcount_decr ${t:159} 1
    turbine::file_read_refcount_decr ${u:alignedbam} 1
    turbine::read_refcount_decr ${t:150} 1
}


proc __entry-chain6 { t:134 t:139 t:26 t:634 u:alignedsortedbam u:dedupsortedbam u:metricsfile u:vars } {
    # Var: string t:170 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():89:39
    # Var: string t:172 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():89:56
    lassign [ adlb::multicreate [ list string 1 1 94 ] [ list string 1 1 95 ] ] t:170 t:172
    turbine::c::log "allocated t:170=<${t:170}> t:172=<${t:172}>"
    turbine::container_reference ${u:vars} "JAVADIR" ${t:170} string
    turbine::container_reference ${u:vars} "PICARDDIR" ${t:172} string
    turbine::rule [ list ${t:134} ${t:139} ${t:170} ${t:172} ${t:26} ${t:634} ] "picard-app-leaf1 ${t:134} ${t:139} ${t:170} ${t:172} ${t:26} ${t:634} {${u:alignedsortedbam}} {${u:dedupsortedbam}} {${u:metricsfile}}"
}


proc picard-app-leaf1 { t:134 t:139 t:170 t:172 t:26 t:634 u:alignedsortedbam u:dedupsortedbam u:metricsfile } {
    # Var: $string v:javadir RENAMED [$string:__v:javadir] ./pipelinefunctions/align_dedup.swift:picard():45:145
    # Var: $string v:picarddir RENAMED [$string:__v:picarddir] ./pipelinefunctions/align_dedup.swift:picard():45:145
    # Var: $string v:__filename:inputFile:1 RENAMED [$string:__v:__filename:inputFile] ./pipelinefunctions/align_dedup.swift:picard():45:145
    # Var: $string v:__filename:outputfile RENAMED [$string:__v:__filename:outputfile] ./pipelinefunctions/align_dedup.swift:picard():45:145
    # Var: $string v:__filename:metricsfile RENAMED [$string:__v:__filename:metricsfile] ./pipelinefunctions/align_dedup.swift:picard():45:145
    # Var: $string v:tmpdir RENAMED [$string:__v:tmpdir] ./pipelinefunctions/align_dedup.swift:picard():45:145
    # Var: $file v:inputFile:1 RENAMED [$file:__v:inputFile] ./pipelinefunctions/align_dedup.swift:picard():45:145
    # Var: $file v:outputfile RENAMED [$file:__v:outputfile] ./pipelinefunctions/align_dedup.swift:picard():45:145
    # Var: $file v:metricsfile RENAMED [$file:__v:metricsfile] ./pipelinefunctions/align_dedup.swift:picard():45:145
    set v:javadir [ turbine::retrieve_string ${t:170} CACHED 1 ]
    set v:picarddir [ turbine::retrieve_string ${t:172} CACHED 1 ]
    set v:__filename:inputFile:1 [ turbine::retrieve_string ${t:134} CACHED 1 ]
    set v:__filename:outputfile [ turbine::retrieve_string ${t:26} CACHED 1 ]
    set v:__filename:metricsfile [ turbine::retrieve_string ${t:139} CACHED 1 ]
    set v:tmpdir [ turbine::retrieve_string ${t:634} CACHED 1 ]
    set v:inputFile:1 [ turbine::retrieve_file ${u:alignedsortedbam} CACHED 1 ]
    set tcltmp:init_rc 2
    set v:outputfile [ turbine::create_local_file_ref ${v:__filename:outputfile} ${tcltmp:init_rc} 1 ]
    set tcltmp:init_rc 2
    set v:metricsfile [ turbine::create_local_file_ref ${v:__filename:metricsfile} ${tcltmp:init_rc} 1 ]
    turbine::c::log [ list exec: __v:javadir "-Xmx8g" "-jar" ${v:picarddir} "MarkDuplicates" "INPUT=" ${v:__filename:inputFile:1} "OUTPUT=" ${v:__filename:outputfile} "METRICS_FILE=" ${v:__filename:metricsfile} "TMP_DIR=" ${v:tmpdir} "ASSUME_SORTED=true MAX_RECORDS_IN_RAM=null CREATE_INDEX=true VALIDATION_STRINGENCY=SILENT" [ dict create ] ]
    turbine::exec_external ${v:javadir} [ dict create ] "-Xmx8g" "-jar" ${v:picarddir} "MarkDuplicates" "INPUT=" ${v:__filename:inputFile:1} "OUTPUT=" ${v:__filename:outputfile} "METRICS_FILE=" ${v:__filename:metricsfile} "TMP_DIR=" ${v:tmpdir} "ASSUME_SORTED=true MAX_RECORDS_IN_RAM=null CREATE_INDEX=true VALIDATION_STRINGENCY=SILENT"
    turbine::store_file ${u:dedupsortedbam} v:outputfile 0
    turbine::store_file ${u:metricsfile} v:metricsfile 0
    turbine::decr_local_file_refcount v:outputfile
    turbine::decr_local_file_refcount v:metricsfile
}


proc __entry-async_op-strcat-4 { t:159 t:160 } {
    # Var: $string v:t:160 VALUE_OF [string:__t:160]
    # Var: $string v:t:159 VALUE_OF [string:__t:159]
    set v:t:160 [ turbine::retrieve_string ${t:160} CACHED 1 ]
    set v:t:159 "${v:t:160}/novosort"
    turbine::store_string ${t:159} ${v:t:159}
}


proc __entry-async_op-parse_int-1 { t:150 t:151 } {
    # Var: $string v:t:151 VALUE_OF [string:__t:151]
    # Var: $int v:t:150 VALUE_OF [int:__t:150]
    set v:t:151 [ turbine::retrieve_string ${t:151} CACHED 1 ]
    set v:t:150 [ turbine::parse_int_impl ${v:t:151} 10 ]
    turbine::store_integer ${t:150} ${v:t:150}
}


proc __entry-optmerged { t:134 t:139 t:627 v:alias:sampleName u:alignedsortedbam u:metricsfile } {
    # Var: $string v:t:627:7 VALUE_OF [string:__t:627]
    # Var: $string v:t:134 VALUE_OF [string:__t:134]
    # Var: $string v:t:139 VALUE_OF [string:__t:139]
    set v:t:627:7 [ turbine::retrieve_string ${t:627} CACHED 1 ]
    set v:t:134 "${v:t:627:7}/align/${v:alias:sampleName}.nodups.sorted.bam"
    turbine::store_string ${t:134} ${v:t:134}
    set v:t:139 "${v:t:627:7}/align/${v:alias:sampleName}.picard.metrics"
    turbine::store_string ${t:139} ${v:t:139}
    turbine::set_filename_val ${u:alignedsortedbam} ${v:t:134}
    turbine::set_filename_val ${u:metricsfile} ${v:t:139}
}


proc __entry-explicit-wait1 { t:634 u:alignedbam u:dedupsortedbam u:vars } {
    # Var: string c:s_markDuplic OPT_TEMPORARY
    global c:s_markDuplic
    # Var: string t:215 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():103:30
    # Var: string t:216 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():103:37
    # Var: int t:222 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():103:102
    # Var: string t:223 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():103:113
    lassign [ adlb::multicreate [ list string 1 1 97 ] [ list string 1 1 98 ] [ list integer 1 1 99 ] [ list string 1 1 100 ] ] t:215 t:216 t:222 t:223
    turbine::c::log "allocated t:215=<${t:215}> t:216=<${t:216}> t:222=<${t:222}> t:223=<${t:223}>"
    turbine::container_reference ${u:vars} "NOVOCRAFTDIR" ${t:216} string
    turbine::container_reference ${u:vars} "PBSCORES" ${t:223} string
    f:novosort ${u:dedupsortedbam} ${t:215} ${u:alignedbam} ${t:634} ${t:222} ${c:s_markDuplic} -100 "HARD" "RANK"
    turbine::rule [ list ${t:216} ] "__entry-async_op-strcat-5 ${t:215} ${t:216}"
    turbine::rule [ list ${t:223} ] "__entry-async_op-parse_int-2 ${t:222} ${t:223}"
    turbine::read_refcount_decr ${t:222} 1
    turbine::file_read_refcount_decr ${u:dedupsortedbam} 1
    turbine::read_refcount_decr ${t:215} 1
    turbine::read_refcount_decr ${t:634} 1
    turbine::file_read_refcount_decr ${u:alignedbam} 1
}


proc __entry-async_op-strcat-5 { t:215 t:216 } {
    # Var: $string v:t:216 VALUE_OF [string:__t:216]
    # Var: $string v:t:215 VALUE_OF [string:__t:215]
    set v:t:216 [ turbine::retrieve_string ${t:216} CACHED 1 ]
    set v:t:215 "${v:t:216}/novosort"
    turbine::store_string ${t:215} ${v:t:215}
}


proc __entry-async_op-parse_int-2 { t:222 t:223 } {
    # Var: $string v:t:223 VALUE_OF [string:__t:223]
    # Var: $int v:t:222 VALUE_OF [int:__t:222]
    set v:t:223 [ turbine::retrieve_string ${t:223} CACHED 1 ]
    set v:t:222 [ turbine::parse_int_impl ${v:t:223} 10 ]
    turbine::store_integer ${t:222} ${v:t:222}
}


proc __entry-async_op-eq_string-1 { t:179 t:242 t:64 v:alias:read1 v:alias:read2 u:alignedbam u:alignedsam u:read1 u:read2 u:rgheader u:vars } {
    # Var: $string v:t:179 VALUE_OF [string:__t:179]
    # Var: $boolean v:t:178 VALUE_OF [boolean:__t:178]
    set v:t:179 [ turbine::retrieve_string ${t:179} CACHED 1 ]
    set v:t:178 [ string equal ${v:t:179} "BWAMEM" ]
    if { ${v:t:178} } {
        # Var: string t:182 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():95:25
        # Var: string t:184 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():95:55
        # Var: string t:186 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():95:73
        # Var: int t:188 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():95:95
        # Var: string t:189 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():95:106
        lassign [ adlb::multicreate [ list string 1 1 101 ] [ list string 1 1 102 ] [ list string 1 1 103 ] [ list integer 1 1 104 ] [ list string 1 1 105 ] ] t:182 t:184 t:186 t:188 t:189
        turbine::c::log "allocated t:182=<${t:182}> t:184=<${t:184}> t:186=<${t:186}> t:188=<${t:188}> t:189=<${t:189}>"
        turbine::container_reference ${u:vars} "BWADIR" ${t:182} string
        turbine::container_reference ${u:vars} "BWAINDEX" ${t:184} string
        turbine::container_reference ${u:vars} "BWAMEMPARAMS" ${t:186} string
        turbine::container_reference ${u:vars} "PBSCORES" ${t:189} string
        f:bwa_mem ${u:alignedsam} ${t:182} ${u:read1} ${u:read2} ${t:184} ${t:186} ${t:188} ${u:rgheader} -100 "HARD" "RANK"
        turbine::rule [ list [ turbine::get_file_td ${u:alignedsam} ] ] "__entry-chain7 ${t:188} ${t:242} {${u:alignedbam}} {${u:alignedsam}}"
        turbine::rule [ list ${t:189} ] "__entry-async_op-parse_int-3 ${t:188} ${t:189}"
        turbine::read_refcount_decr ${t:186} 1
        turbine::read_refcount_decr ${t:184} 1
        turbine::read_refcount_decr ${t:182} 1
    } else {
        # Var: string t:198 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():98:34
        # Var: string t:202 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():98:87
        # Var: string t:204 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():98:111
        # Var: int t:206 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():98:136
        # Var: string t:207 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():98:147
        lassign [ adlb::multicreate [ list string 1 1 106 ] [ list string 1 1 107 ] [ list string 1 1 108 ] [ list integer 1 1 109 ] [ list string 1 1 110 ] ] t:198 t:202 t:204 t:206 t:207
        turbine::c::log "allocated t:198=<${t:198}> t:202=<${t:202}> t:204=<${t:204}> t:206=<${t:206}> t:207=<${t:207}>"
        turbine::read_refcount_incr ${t:64} 1
        turbine::read_refcount_incr ${u:rgheader} 1
        turbine::container_reference ${u:vars} "NOVOCRAFTDIR" ${t:198} string
        turbine::container_reference ${u:vars} "NOVOALIGNINDEX" ${t:202} string
        turbine::container_reference ${u:vars} "NOVOALIGNPARAMS" ${t:204} string
        turbine::container_reference ${u:vars} "PBSCORES" ${t:207} string
        turbine::rule [ list ${t:207} ] [ list __entry-async_op-parse_int-4 ${t:198} ${t:202} ${t:204} ${t:206} ${t:207} ${t:242} ${t:64} ${v:alias:read1} ${v:alias:read2} ${u:alignedbam} ${u:alignedsam} ${u:rgheader} ]
    }
    turbine::read_refcount_decr ${t:242} 1
    turbine::file_read_refcount_decr ${u:alignedsam} 1
    turbine::file_read_refcount_decr ${u:alignedbam} 1
    turbine::read_refcount_decr ${u:vars} 1
    turbine::read_refcount_decr ${u:rgheader} 1
    turbine::read_refcount_decr ${u:read2} 1
    turbine::read_refcount_decr ${t:64} 1
    turbine::read_refcount_decr ${u:read1} 1
}


proc __entry-chain7 { t:188 t:242 u:alignedbam u:alignedsam } {
    # Var: string c:s_u OPT_TEMPORARY
    global c:s_u
    f:samtools_view ${u:alignedbam} ${t:242} ${u:alignedsam} ${t:188} ${c:s_u} -100 "HARD" "RANK"
    turbine::read_refcount_decr ${t:188} 1
    turbine::read_refcount_decr ${t:242} 1
    turbine::file_read_refcount_decr ${u:alignedsam} 1
    turbine::file_read_refcount_decr ${u:alignedbam} 1
}


proc __entry-async_op-parse_int-3 { t:188 t:189 } {
    # Var: $string v:t:189 VALUE_OF [string:__t:189]
    # Var: $int v:t:188 VALUE_OF [int:__t:188]
    set v:t:189 [ turbine::retrieve_string ${t:189} CACHED 1 ]
    set v:t:188 [ turbine::parse_int_impl ${v:t:189} 10 ]
    turbine::store_integer ${t:188} ${v:t:188}
}


proc __entry-async_op-parse_int-4 { t:198 t:202 t:204 t:206 t:207 t:242 t:64 v:alias:read1 v:alias:read2 u:alignedbam u:alignedsam u:rgheader } {
    # Var: $string v:t:207 VALUE_OF [string:__t:207]
    # Var: $int v:t:206 VALUE_OF [int:__t:206]
    set v:t:207 [ turbine::retrieve_string ${t:207} CACHED 1 ]
    set v:t:206 [ turbine::parse_int_impl ${v:t:207} 10 ]
    turbine::store_integer ${t:206} ${v:t:206}
    turbine::rule [ list ${t:198} ${t:202} ${t:204} ${t:64} ${u:rgheader} ] [ list __entry-async_op-strcat-6 ${t:198} ${t:202} ${t:204} ${t:206} ${t:242} ${t:64} ${v:alias:read1} ${v:alias:read2} ${v:t:206} ${u:alignedbam} ${u:alignedsam} ${u:rgheader} ]
}


proc __entry-async_op-strcat-6 { t:198 t:202 t:204 t:206 t:242 t:64 v:alias:read1 v:alias:read2 v:t:206 u:alignedbam u:alignedsam u:rgheader } {
    # Var: $string v:t:198 VALUE_OF [string:__t:198]
    # Var: $string v:t:197 VALUE_OF [string:__t:197]
    # Var: $string v:INDEX RENAMED [$string:__v:INDEX] ./pipelinefunctions/align_dedup.swift:novoalign():9:84
    # Var: $string v:rgheader RENAMED [$string:__v:rgheader] ./pipelinefunctions/align_dedup.swift:novoalign():9:84
    # Var: $string v:__filename:output:1 RENAMED [$string:__v:__filename:output] ./pipelinefunctions/align_dedup.swift:novoalign():9:84
    # Var: $file v:output:1 RENAMED [$file:__v:output] ./pipelinefunctions/align_dedup.swift:novoalign():9:84
    set v:t:198 [ turbine::retrieve_string ${t:198} CACHED 1 ]
    set v:t:197 "${v:t:198}/novoalign"
    set v:INDEX [ turbine::retrieve_string ${t:202} CACHED 1 ]
    set v:rgheader [ turbine::retrieve_string ${u:rgheader} CACHED 1 ]
    set v:__filename:output:1 [ turbine::retrieve_string ${t:64} CACHED 1 ]
    set tcltmp:init_rc 2
    set v:output:1 [ turbine::create_local_file_ref ${v:__filename:output:1} ${tcltmp:init_rc} 1 ]
    turbine::c::log [ list exec: __v:t:197 "-c" ${v:t:206} "-d" ${v:INDEX} "-f" ${v:alias:read1} ${v:alias:read2} "-o" "SAM" ${v:rgheader} [ dict create "stdout" ${v:__filename:output:1} ] ]
    turbine::exec_external ${v:t:197} [ dict create "stdout" ${v:__filename:output:1} ] "-c" ${v:t:206} "-d" ${v:INDEX} "-f" ${v:alias:read1} ${v:alias:read2} "-o" "SAM" ${v:rgheader}
    turbine::store_file ${u:alignedsam} v:output:1 0
    turbine::rule [ list ] "__entry-chain8 ${t:206} ${t:242} {${u:alignedbam}} {${u:alignedsam}}"
    turbine::decr_local_file_refcount v:output:1
    turbine::read_refcount_decr ${t:204} 1
}


proc __entry-chain8 { t:206 t:242 u:alignedbam u:alignedsam } {
    # Var: string c:s_u OPT_TEMPORARY
    global c:s_u
    f:samtools_view ${u:alignedbam} ${t:242} ${u:alignedsam} ${t:206} ${c:s_u} -100 "HARD" "RANK"
    turbine::read_refcount_decr ${t:242} 1
    turbine::file_read_refcount_decr ${u:alignedsam} 1
    turbine::file_read_refcount_decr ${u:alignedbam} 1
    turbine::read_refcount_decr ${t:206} 1
}


proc __entry-explicit-wait3 { u:RealignDir u:VarcallDir t:31 t:634 v:alias:sampleName u:chr_bamList u:chr_bamListfile u:chr_vcfListfile u:chromosomes_processing_done u:mergedbam u:outbam u:vars } {
    # Var: string t:554 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():195:44
    # Var: string t:556 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():196:44
    # Var: $string v:t:554 VALUE_OF [string:__t:554]
    # Var: $string v:t:556 VALUE_OF [string:__t:556]
    lassign [ adlb::multicreate [ list string 1 1 111 ] [ list string 1 1 112 ] ] t:554 t:556
    turbine::c::log "allocated t:554=<${t:554}> t:556=<${t:556}>"
    set v:t:554 "${v:alias:sampleName}.*.recalibrated.bam"
    turbine::store_string ${t:554} ${v:t:554}
    f:find_files ${u:chr_bamListfile} ${u:RealignDir} ${t:554} -100 "HARD" "RANK"
    set v:t:556 "${v:alias:sampleName}.*.raw.g.vcf"
    turbine::store_string ${t:556} ${v:t:556}
    f:find_files ${u:chr_vcfListfile} ${u:VarcallDir} ${t:556} -100 "HARD" "RANK"
    turbine::rule [ list [ turbine::get_file_td ${u:chr_bamListfile} ] ] "__entry-call_foreign-read-1 ${t:31} ${t:634} ${u:chr_bamList} {${u:chr_bamListfile}} {${u:mergedbam}} {${u:outbam}} ${u:vars}"
    turbine::read_refcount_decr ${u:chromosomes_processing_done} 1
    turbine::read_refcount_decr ${t:556} 1
    turbine::file_read_refcount_decr ${u:chr_vcfListfile} 1
    turbine::read_refcount_decr ${t:554} 1
    turbine::read_refcount_decr ${u:VarcallDir} 1
    turbine::read_refcount_decr ${u:RealignDir} 1
}


proc __entry-call_foreign-read-1 { t:31 t:634 u:chr_bamList u:chr_bamListfile u:mergedbam u:outbam u:vars } {
    # Var: $file v:chr_bamListfile VALUE_OF [file:chr_bamListfile]
    # Var: $string v:t:565 VALUE_OF [string:__t:565]
    # Var: $int v:n:2 RENAMED [$int:__v:n]
    # Var: $string v:t:564 VALUE_OF [string:__t:564]
    # Var: $string v:o:2 RENAMED [$string:__v:o]
    # Var: $string$[int] v:chr_bamList VALUE_OF [string[int]:chr_bamList]
    # Var: string t:571 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():202:27
    # Var: string t:578 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():202:105
    lassign [ adlb::multicreate [ list string 1 1 113 ] [ list string 1 1 114 ] ] t:571 t:578
    turbine::c::log "allocated t:571=<${t:571}> t:578=<${t:578}>"
    set v:chr_bamListfile [ turbine::retrieve_file ${u:chr_bamListfile} CACHED 1 ]
    set v:t:565 [ turbine::file_read_local ${v:chr_bamListfile} ]
    set v:n:2 [ string length ${v:t:565} ]
    set v:t:564 [ turbine::replace_all_impl ${v:t:565} "\n" " " 0 ${v:n:2} ]
    set v:o:2 [ string trim ${v:t:564} ]
    set v:chr_bamList [ turbine::split_impl ${v:o:2} " " ]
    turbine::build_rec ${u:chr_bamList} ${v:chr_bamList} [ list container integer string ] 0 1
    turbine::container_reference ${u:vars} "NOVOCRAFTDIR" ${t:571} string
    turbine::container_reference ${u:vars} "PBSCORES" ${t:578} string
    turbine::rule [ list ${t:31} ${t:571} ${t:578} ${t:634} ] "__entry-async_op-parse_int-5 ${t:31} ${t:571} ${t:578} ${t:634} ${u:chr_bamList} {${u:mergedbam}} {${u:outbam}}"
}


proc __entry-async_op-parse_int-5 { t:31 t:571 t:578 t:634 u:chr_bamList u:mergedbam u:outbam } {
    # Var: $string v:t:578 VALUE_OF [string:__t:578]
    # Var: $int v:t:577 VALUE_OF [int:__t:577]
    # Var: $string v:t:571 VALUE_OF [string:__t:571]
    # Var: $string v:t:570 VALUE_OF [string:__t:570]
    # Var: $string v:tmpdir:1 RENAMED [$string:__v:tmpdir] ./pipelinefunctions/align_dedup.swift:novosort():40:72
    # Var: $string$[int] v:inputFile:7 RENAMED [$string$[int]:__v:inputFile] ./pipelinefunctions/align_dedup.swift:novosort():40:72
    # Var: $string v:__filename:output:2 RENAMED [$string:__v:__filename:output] ./pipelinefunctions/align_dedup.swift:novosort():40:72
    # Var: $file v:output:2 RENAMED [$file:__v:output] ./pipelinefunctions/align_dedup.swift:novosort():40:72
    set v:t:578 [ turbine::retrieve_string ${t:578} CACHED 1 ]
    set v:t:577 [ turbine::parse_int_impl ${v:t:578} 10 ]
    set v:t:571 [ turbine::retrieve_string ${t:571} CACHED 1 ]
    set v:t:570 "${v:t:571}/novosort"
    set v:tmpdir:1 [ turbine::retrieve_string ${t:634} CACHED 1 ]
    set v:inputFile:7 [ turbine::unpack_args ${u:chr_bamList} 1 string ]
    set v:__filename:output:2 [ turbine::retrieve_string ${t:31} CACHED 1 ]
    set tcltmp:init_rc 2
    set v:output:2 [ turbine::create_local_file_ref ${v:__filename:output:2} ${tcltmp:init_rc} 1 ]
    turbine::c::log [ list exec: __v:t:570 "--index" "--tmpdir" ${v:tmpdir:1} "--threads" ${v:t:577} {*}${v:inputFile:7} "-o" ${v:__filename:output:2} [ dict create ] ]
    turbine::exec_external ${v:t:570} [ dict create ] "--index" "--tmpdir" ${v:tmpdir:1} "--threads" ${v:t:577} {*}${v:inputFile:7} "-o" ${v:__filename:output:2}
    turbine::store_file ${u:outbam} v:output:2 0
    turbine::rule [ list ] "__entry-chain11 {${u:mergedbam}} {${u:outbam}}"
    turbine::decr_local_file_refcount v:output:2
    turbine::read_refcount_decr ${u:chr_bamList} 1
}


proc __entry-chain11 { u:mergedbam u:outbam } {
    f:cp ${u:mergedbam} ${u:outbam} -100 "HARD" "RANK"
    turbine::file_read_refcount_decr ${u:mergedbam} 1
    turbine::file_read_refcount_decr ${u:outbam} 1
}


proc __entry-async_op-sprintf { t:11 t:13 t:15 v:alias:sampleName u:rgheader } {
    # Var: $string v:t:11 VALUE_OF [string:__t:11]
    # Var: $string v:t:13 VALUE_OF [string:__t:13]
    # Var: $string v:t:15 VALUE_OF [string:__t:15]
    # Var: $string v:rgheader:1 VALUE_OF [string:rgheader]
    set v:t:11 [ turbine::retrieve_string ${t:11} CACHED 1 ]
    set v:t:13 [ turbine::retrieve_string ${t:13} CACHED 1 ]
    set v:t:15 [ turbine::retrieve_string ${t:15} CACHED 1 ]
    set v:rgheader:1 [ eval format [ list "@RG\tID:%s\tLB:%s\tPL:%s\tPU:%s\tSM:%s\tCN:%s" ${v:alias:sampleName} ${v:t:11} ${v:t:13} ${v:alias:sampleName} ${v:alias:sampleName} ${v:t:15} ] ]
    turbine::store_string ${u:rgheader} ${v:rgheader:1}
}


proc __entry-copy_in_filename { t:35 u:qcfile } {
    # Var: $string v:t:35:1 VALUE_OF [string:__t:35]
    set v:t:35:1 [ turbine::retrieve_string ${t:35} CACHED 1 ]
    turbine::set_filename_val ${u:qcfile} ${v:t:35:1}
}


proc __entry-async_op-dircat-1 { t:626 v:alias:sampleName u:mergedbam u:mergedvariant } {
    # Var: $string v:t:626:3 VALUE_OF [string:__t:626]
    # Var: $string v:t:43 VALUE_OF [string:__t:43]
    # Var: $string v:t:42 VALUE_OF [string:__t:42]
    # Var: $string v:t:50 VALUE_OF [string:__t:50]
    set v:t:626:3 [ turbine::retrieve_string ${t:626} CACHED 1 ]
    set v:t:43 "${v:t:626:3}/${v:alias:sampleName}"
    set v:t:42 "${v:t:43}.recalibrated.bam"
    turbine::set_filename_val ${u:mergedbam} ${v:t:42}
    set v:t:50 "${v:t:43}.GATKCombineGVCF.raw.vcf"
    turbine::set_filename_val ${u:mergedvariant} ${v:t:50}
}


proc __entry-call_foreign-trace { t:234 } {
    # Var: $string v:t:234:1 VALUE_OF [string:__t:234]
    # Var: $void v:t:232 VALUE_OF [void:__t:232]
    set v:t:234:1 [ turbine::retrieve_string ${t:234} CACHED 1 ]
    turbine::trace_impl "########   QC rule1: duplication cutoff <= " ${v:t:234:1} "          ###############"
}


proc __entry-call_foreign-trace-1 { t:239 } {
    # Var: $string v:t:239 VALUE_OF [string:__t:239]
    # Var: $void v:t:237 VALUE_OF [void:__t:237]
    set v:t:239 [ turbine::retrieve_string ${t:239} CACHED 1 ]
    turbine::trace_impl "########   QC rule2: mapped_reads cutoff >= " ${v:t:239} "           ###############"
}


proc __entry-call_foreign-split { a:t:245 t:244 } {
    # Var: $string v:alias:t:245 VALUE_OF [string:__alias:t:245]
    # Var: $string$[int] v:t:244 VALUE_OF [string[int]:__t:244]
    set v:alias:t:245 [ turbine::retrieve_string ${a:t:245} CACHED 1 ]
    set v:t:244 [ turbine::split_impl ${v:alias:t:245} " " ]
    turbine::build_rec ${t:244} ${v:t:244} [ list container integer string ] 0 1
}


proc __entry-call_foreign-split-1 { a:t:248 t:247 } {
    # Var: $string v:alias:t:248 VALUE_OF [string:__alias:t:248]
    # Var: $string$[int] v:t:247 VALUE_OF [string[int]:__t:247]
    set v:alias:t:248 [ turbine::retrieve_string ${a:t:248} CACHED 1 ]
    set v:t:247 [ turbine::split_impl ${v:alias:t:248} " " ]
    turbine::build_rec ${t:247} ${v:t:247} [ list container integer string ] 0 1
}


proc __entry-call_foreign-split-2 { a:t:251 t:250 } {
    # Var: $string v:alias:t:251 VALUE_OF [string:__alias:t:251]
    # Var: $string$[int] v:t:250 VALUE_OF [string[int]:__t:250]
    set v:alias:t:251 [ turbine::retrieve_string ${a:t:251} CACHED 1 ]
    set v:t:250 [ turbine::split_impl ${v:alias:t:251} " " ]
    turbine::build_rec ${t:250} ${v:t:250} [ list container integer string ] 0 1
}


proc __entry-async_op-parse_float { a:tot_dups a:tot_reads t:234 t:239 t:257 t:262 v:alias:sampleName u:perc_mapped u:qcfile } {
    # Var: $string v:alias:tot_reads VALUE_OF [string:__alias:tot_reads]
    # Var: $float v:t:256 VALUE_OF [float:__t:256]
    set v:alias:tot_reads [ turbine::retrieve_string ${a:tot_reads} CACHED 1 ]
    set v:t:256 [ turbine::string2float_impl ${v:alias:tot_reads} ]
    turbine::rule [ list ${t:257} ] "__entry-async_op-div_float ${t:257} ${v:t:256} ${u:perc_mapped}"
    turbine::rule [ list ${a:tot_dups} ${t:262} ] [ list __entry-async_op-parse_float-1 ${a:tot_dups} ${t:234} ${t:239} ${t:262} ${v:alias:sampleName} ${v:t:256} ${u:perc_mapped} ${u:qcfile} ]
}


proc __entry-async_op-div_float { t:257 v:t:256 u:perc_mapped } {
    # Var: $float v:t:257:1 VALUE_OF [float:__t:257]
    # Var: $float v:perc_mapped VALUE_OF [float:perc_mapped]
    set v:t:257:1 [ turbine::retrieve_float ${t:257} CACHED 1 ]
    set v:perc_mapped [ expr { ${v:t:257:1} / ${v:t:256} } ]
    turbine::store_float ${u:perc_mapped} ${v:perc_mapped}
}


proc __entry-async_op-parse_float-1 { a:tot_dups t:234 t:239 t:262 v:alias:sampleName v:t:256 u:perc_mapped u:qcfile } {
    # Var: $string v:alias:tot_dups VALUE_OF [string:__alias:tot_dups]
    # Var: $float v:t:254 VALUE_OF [float:__t:254]
    # Var: $float v:t:253 VALUE_OF [float:__t:253]
    # Var: $float v:perc_dup VALUE_OF [float:perc_dup]
    # Var: $float v:t:262:1 VALUE_OF [float:__t:262]
    # Var: $boolean v:t:261 VALUE_OF [boolean:__t:261]
    set v:alias:tot_dups [ turbine::retrieve_string ${a:tot_dups} CACHED 1 ]
    set v:t:254 [ turbine::string2float_impl ${v:alias:tot_dups} ]
    set v:t:253 [ expr { ${v:t:254} * 100.0 } ]
    set v:perc_dup [ expr { ${v:t:253} / ${v:t:256} } ]
    set v:t:262:1 [ turbine::retrieve_float ${t:262} CACHED 1 ]
    set v:t:261 [ expr { ${v:perc_dup} < ${v:t:262:1} } ]
    if { ${v:t:261} } {
        # Var: $string v:t:270 VALUE_OF [string:__t:270]
        # Var: $string v:t:269 VALUE_OF [string:__t:269]
        # Var: $string v:t:268 VALUE_OF [string:__t:268]
        # Var: $string v:t:267 VALUE_OF [string:__t:267]
        turbine::file_read_refcount_incr ${u:qcfile} 1
        turbine::read_refcount_incr ${t:234} 2
        set v:t:270 "#####  ${v:alias:sampleName}"
        set v:t:269 "${v:t:270} passed first filter percent_duplicates with value"
        set v:t:268 "${v:t:269}${v:perc_dup}"
        set v:t:267 "${v:t:268}, maximum cutoff is "
        turbine::rule [ list ${t:239} ${u:perc_mapped} ] [ list __entry-async_op-parse_float-2 ${t:234} ${t:239} ${v:alias:sampleName} ${v:perc_dup} ${v:t:270} ${u:perc_mapped} ${u:qcfile} ]
        turbine::rule [ list ${t:234} ] [ list __entry-async_op-strcat-9 ${t:234} ${v:t:267} ]
    } else {
        # Var: string t:345 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():135:218
        # Var: $string v:t:339 VALUE_OF [string:__t:339]
        # Var: $string v:t:338 VALUE_OF [string:__t:338]
        # Var: $string v:t:352 VALUE_OF [string:__t:352]
        # Var: $string v:t:337 VALUE_OF [string:__t:337]
        # Var: $string v:t:336 VALUE_OF [string:__t:336]
        # Var: $string v:t:351 VALUE_OF [string:__t:351]
        # Var: $string v:t:350 VALUE_OF [string:__t:350]
        lassign [ adlb::multicreate [ list string 1 1 117 ] ] t:345
        turbine::c::log "allocated t:345=<${t:345}>"
        set v:t:339 "#####  ${v:alias:sampleName}"
        set v:t:338 "${v:t:339} DID NOT pass first filter percent_duplicates with value"
        set v:t:352 "${v:alias:sampleName}\tQCTEST\tFAIL\n\trule1 not ok: percent_duplication="
        f:echo ${u:qcfile} ${t:345} -100 "HARD" "RANK"
        set v:t:337 "${v:t:338}${v:perc_dup}"
        set v:t:336 "${v:t:337}, maximum cutoff is "
        set v:t:351 "${v:t:352}${v:perc_dup}"
        set v:t:350 "${v:t:351}<? duplication_cutoff="
        turbine::rule [ list ${t:234} ${t:239} ${u:perc_mapped} ] [ list __entry-optmerged-1 ${t:234} ${t:239} ${t:345} ${v:t:336} ${v:t:350} ${u:perc_mapped} ]
        turbine::read_refcount_decr ${t:345} 1
    }
    turbine::read_refcount_decr ${t:234} 1
    turbine::read_refcount_decr ${u:perc_mapped} 1
    turbine::read_refcount_decr ${t:239} 1
    turbine::file_read_refcount_decr ${u:qcfile} 1
}


proc __entry-async_op-parse_float-2 { t:234 t:239 v:alias:sampleName v:perc_dup v:t:270 u:perc_mapped u:qcfile } {
    # Var: $string v:t:239:1 VALUE_OF [string:__t:239]
    # Var: $float v:t:277 VALUE_OF [float:__t:277]
    # Var: $float v:perc_mapped:1 VALUE_OF [float:perc_mapped]
    # Var: $boolean v:t:276 VALUE_OF [boolean:__t:276]
    set v:t:239:1 [ turbine::retrieve_string ${t:239} CACHED 1 ]
    set v:t:277 [ turbine::string2float_impl ${v:t:239:1} ]
    set v:perc_mapped:1 [ turbine::retrieve_float ${u:perc_mapped} CACHED 1 ]
    set v:t:276 [ expr { ${v:perc_mapped:1} > ${v:t:277} } ]
    if { ${v:t:276} } {
        # Var: string t:291 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():128:205
        # Var: $string v:t:284 VALUE_OF [string:__t:284]
        # Var: $string v:t:298 VALUE_OF [string:__t:298]
        # Var: $string v:t:283 VALUE_OF [string:__t:283]
        # Var: $string v:t:282 VALUE_OF [string:__t:282]
        # Var: $string v:t:281 VALUE_OF [string:__t:281]
        # Var: $void v:t:280 VALUE_OF [void:__t:280]
        # Var: $string v:t:297 VALUE_OF [string:__t:297]
        # Var: $string v:t:296 VALUE_OF [string:__t:296]
        lassign [ adlb::multicreate [ list string 1 1 115 ] ] t:291
        turbine::c::log "allocated t:291=<${t:291}>"
        set v:t:284 "${v:t:270} passed second filter map_cutoff with value"
        set v:t:298 "${v:alias:sampleName}\tQCTEST\tPASS\n\trule1 ok: percent_duplication="
        f:echo ${u:qcfile} ${t:291} -100 "HARD" "RANK"
        set v:t:283 "${v:t:284}${v:perc_mapped:1}"
        set v:t:282 "${v:t:283}, minimum cutoff is "
        set v:t:281 "${v:t:282}${v:t:239:1}"
        turbine::trace_impl ${v:t:281}
        set v:t:297 "${v:t:298}${v:perc_dup}"
        set v:t:296 "${v:t:297}<? duplication_cutoff="
        turbine::rule [ list ${t:234} ] [ list __entry-async_op-strcat-7 ${t:234} ${t:291} ${v:perc_mapped:1} ${v:t:239:1} ${v:t:296} ]
        turbine::read_refcount_decr ${t:291} 1
    } else {
        # Var: string t:318 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():131:209
        # Var: $string v:t:311 VALUE_OF [string:__t:311]
        # Var: $string v:t:325 VALUE_OF [string:__t:325]
        # Var: $string v:t:310 VALUE_OF [string:__t:310]
        # Var: $string v:t:309 VALUE_OF [string:__t:309]
        # Var: $string v:t:308 VALUE_OF [string:__t:308]
        # Var: $void v:t:307 VALUE_OF [void:__t:307]
        # Var: $string v:t:324 VALUE_OF [string:__t:324]
        # Var: $string v:t:323 VALUE_OF [string:__t:323]
        lassign [ adlb::multicreate [ list string 1 1 116 ] ] t:318
        turbine::c::log "allocated t:318=<${t:318}>"
        set v:t:311 "${v:t:270} DID NOT pass second filter map_cutoff with value"
        set v:t:325 "${v:alias:sampleName}\tQCTEST\tFAIL\n\trule1 ok: percent_duplication="
        f:echo ${u:qcfile} ${t:318} -100 "HARD" "RANK"
        set v:t:310 "${v:t:311}${v:perc_mapped:1}"
        set v:t:309 "${v:t:310}, minimum cutoff is "
        set v:t:308 "${v:t:309}${v:t:239:1}"
        turbine::trace_impl ${v:t:308}
        set v:t:324 "${v:t:325}${v:perc_dup}"
        set v:t:323 "${v:t:324}<? duplication_cutoff="
        turbine::rule [ list ${t:234} ] [ list __entry-async_op-strcat-8 ${t:234} ${t:318} ${v:perc_mapped:1} ${v:t:239:1} ${v:t:323} ]
        turbine::read_refcount_decr ${t:318} 1
    }
    turbine::read_refcount_decr ${t:234} 1
    turbine::file_read_refcount_decr ${u:qcfile} 1
}


proc __entry-async_op-strcat-7 { t:234 t:291 v:perc_mapped:1 v:t:239:1 v:t:296 } {
    # Var: $string v:t:234:3 VALUE_OF [string:__t:234]
    # Var: $string v:t:295 VALUE_OF [string:__t:295]
    # Var: $string v:t:294 VALUE_OF [string:__t:294]
    # Var: $string v:t:293 VALUE_OF [string:__t:293]
    # Var: $string v:t:292 VALUE_OF [string:__t:292]
    # Var: $string v:t:291 VALUE_OF [string:__t:291]
    set v:t:234:3 [ turbine::retrieve_string ${t:234} CACHED 1 ]
    set v:t:295 "${v:t:296}${v:t:234:3}"
    set v:t:294 "${v:t:295}\n\trule2 ok: percent_mapped="
    set v:t:293 "${v:t:294}${v:perc_mapped:1}"
    set v:t:292 "${v:t:293}>? mapping_cutoff="
    set v:t:291 "${v:t:292}${v:t:239:1}"
    turbine::store_string ${t:291} ${v:t:291}
}


proc __entry-async_op-strcat-8 { t:234 t:318 v:perc_mapped:1 v:t:239:1 v:t:323 } {
    # Var: $string v:t:234:4 VALUE_OF [string:__t:234]
    # Var: $string v:t:322 VALUE_OF [string:__t:322]
    # Var: $string v:t:321 VALUE_OF [string:__t:321]
    # Var: $string v:t:320 VALUE_OF [string:__t:320]
    # Var: $string v:t:319 VALUE_OF [string:__t:319]
    # Var: $string v:t:318 VALUE_OF [string:__t:318]
    set v:t:234:4 [ turbine::retrieve_string ${t:234} CACHED 1 ]
    set v:t:322 "${v:t:323}${v:t:234:4}"
    set v:t:321 "${v:t:322}\n\trule2 not ok: percent_mapped="
    set v:t:320 "${v:t:321}${v:perc_mapped:1}"
    set v:t:319 "${v:t:320}>? mapping_cutoff="
    set v:t:318 "${v:t:319}${v:t:239:1}"
    turbine::store_string ${t:318} ${v:t:318}
}


proc __entry-async_op-strcat-9 { t:234 v:t:267 } {
    # Var: $string v:t:234:2 VALUE_OF [string:__t:234]
    # Var: $string v:t:266 VALUE_OF [string:__t:266]
    # Var: $void v:t:265 VALUE_OF [void:__t:265]
    set v:t:234:2 [ turbine::retrieve_string ${t:234} CACHED 1 ]
    set v:t:266 "${v:t:267}${v:t:234:2}"
    turbine::trace_impl ${v:t:266}
}


proc __entry-optmerged-1 { t:234 t:239 t:345 v:t:336 v:t:350 u:perc_mapped } {
    # Var: $string v:t:234:5 VALUE_OF [string:__t:234]
    # Var: $string v:t:335 VALUE_OF [string:__t:335]
    # Var: $void v:t:334 VALUE_OF [void:__t:334]
    # Var: $string v:t:349 VALUE_OF [string:__t:349]
    # Var: $string v:t:348 VALUE_OF [string:__t:348]
    # Var: $float v:perc_mapped:6 VALUE_OF [float:perc_mapped]
    # Var: $string v:t:347 VALUE_OF [string:__t:347]
    # Var: $string v:t:346 VALUE_OF [string:__t:346]
    # Var: $string v:t:239:6 VALUE_OF [string:__t:239]
    # Var: $string v:t:345 VALUE_OF [string:__t:345]
    set v:t:234:5 [ turbine::retrieve_string ${t:234} CACHED 1 ]
    set v:t:335 "${v:t:336}${v:t:234:5}"
    turbine::trace_impl ${v:t:335}
    set v:t:349 "${v:t:350}${v:t:234:5}"
    set v:t:348 "${v:t:349}\n\trule2 not evaluated: percent_mapped="
    set v:perc_mapped:6 [ turbine::retrieve_float ${u:perc_mapped} CACHED 1 ]
    set v:t:347 "${v:t:348}${v:perc_mapped:6}"
    set v:t:346 "${v:t:347}>? mapping_cutoff="
    set v:t:239:6 [ turbine::retrieve_string ${t:239} CACHED 1 ]
    set v:t:345 "${v:t:346}${v:t:239:6}"
    turbine::store_string ${t:345} ${v:t:345}
}


proc __entry-async_op-parse_float-3 { a:tot_mapped t:257 } {
    # Var: $string v:alias:tot_mapped VALUE_OF [string:__alias:tot_mapped]
    # Var: $float v:t:258 VALUE_OF [float:__t:258]
    # Var: $float v:t:257 VALUE_OF [float:__t:257]
    set v:alias:tot_mapped [ turbine::retrieve_string ${a:tot_mapped} CACHED 1 ]
    set v:t:258 [ turbine::string2float_impl ${v:alias:tot_mapped} ]
    set v:t:257 [ expr { ${v:t:258} * 100.0 } ]
    turbine::store_float ${t:257} ${v:t:257}
}


proc __entry-call_foreign-read-2 { t:33 t:589 t:626 v:sampleLines:1 u:chr_vcfList u:mergedvariant u:rawvariant u:samples_processing_done u:vars } {
    # Var: $file v:t:589 VALUE_OF [file:__t:589]
    # Var: $string v:t:588 VALUE_OF [string:__t:588]
    # Var: $int v:n:3 RENAMED [$int:__v:n]
    # Var: $string v:t:587 VALUE_OF [string:__t:587]
    # Var: $string v:o:3 RENAMED [$string:__v:o]
    # Var: $string$[int] v:chr_vcfList VALUE_OF [string[int]:chr_vcfList]
    # Var: string t:595 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():209:28
    # Var: string t:599 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():209:52
    # Var: string t:603 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():209:93
    # Var: string t:605 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():209:114
    # Var: string t:607 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():209:153
    # Var: string t:610 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():209:154
    # Var: $string$[int] v:variants RENAMED [$string$[int]:__v:variants] ./pipelinefunctions/merge_vcf.swift:CombineGVCFs():3:105
    lassign [ adlb::multicreate [ list string 1 1 118 ] [ list string 1 1 119 ] [ list string 1 1 120 ] [ list string 1 1 121 ] [ list string 1 1 122 ] [ list string 1 1 123 ] ] t:595 t:599 t:603 t:605 t:607 t:610
    turbine::c::log "allocated t:595=<${t:595}> t:599=<${t:599}> t:603=<${t:603}> t:605=<${t:605}> t:607=<${t:607}>"
    turbine::c::log "allocated t:610=<${t:610}>"
    set v:t:589 [ turbine::retrieve_file ${t:589} CACHED 1 ]
    set v:t:588 [ turbine::file_read_local ${v:t:589} ]
    set v:n:3 [ string length ${v:t:588} ]
    set v:t:587 [ turbine::replace_all_impl ${v:t:588} "\n" " " 0 ${v:n:3} ]
    set v:o:3 [ string trim ${v:t:587} ]
    set v:chr_vcfList [ turbine::split_impl ${v:o:3} " " ]
    turbine::build_rec ${u:chr_vcfList} ${v:chr_vcfList} [ list container integer string ] 0 1
    turbine::container_reference ${u:vars} "JAVADIR" ${t:595} string
    turbine::container_reference ${u:vars} "GATKDIR" ${t:599} string
    turbine::container_reference ${u:vars} "REFGENOMEDIR" ${t:603} string
    turbine::container_reference ${u:vars} "REFGENOME" ${t:605} string
    turbine::container_reference ${u:vars} "DBSNP" ${t:610} string
    set v:variants [ turbine::unpack_args ${u:chr_vcfList} 1 string ]
    turbine::rule [ list ${t:603} ${t:610} ] "__entry-optmerged-2 ${t:33} ${t:595} ${t:599} ${t:603} ${t:605} ${t:607} ${t:610} ${t:626} {${v:sampleLines:1}} {${v:variants}} {${u:mergedvariant}} {${u:rawvariant}} ${u:samples_processing_done}"
    turbine::read_refcount_decr ${u:chr_vcfList} 1
}


proc __entry-optmerged-2 { t:33 t:595 t:599 t:603 t:605 t:607 t:610 t:626 v:sampleLines:1 v:variants u:mergedvariant u:rawvariant u:samples_processing_done } {
    # Var: $string v:t:603 VALUE_OF [string:__t:603]
    # Var: $string v:t:610 VALUE_OF [string:__t:610]
    # Var: $string v:t:607 VALUE_OF [string:__t:607]
    set v:t:603 [ turbine::retrieve_string ${t:603} CACHED 1 ]
    set v:t:610 [ turbine::retrieve_string ${t:610} CACHED 1 ]
    set v:t:607 "${v:t:603}/${v:t:610}"
    turbine::store_string ${t:607} ${v:t:607}
    turbine::rule [ list ${t:33} ${t:595} ${t:599} ${t:605} ${t:607} ] [ list __entry-async_op-dircat-2 ${t:33} ${t:595} ${t:599} ${t:605} ${t:607} ${t:626} ${v:sampleLines:1} ${v:t:603} ${v:variants} ${u:mergedvariant} ${u:rawvariant} ${u:samples_processing_done} ]
}


proc __entry-async_op-dircat-2 { t:33 t:595 t:599 t:605 t:607 t:626 v:sampleLines:1 v:t:603 v:variants u:mergedvariant u:rawvariant u:samples_processing_done } {
    # Var: $string v:t:605 VALUE_OF [string:__t:605]
    # Var: $string v:t:602 VALUE_OF [string:__t:602]
    # Var: $string v:t:599 VALUE_OF [string:__t:599]
    # Var: $string v:t:598 VALUE_OF [string:__t:598]
    # Var: $string v:t:597 VALUE_OF [string:__t:597]
    # Var: $string v:javadir:6 RENAMED [$string:__v:javadir] ./pipelinefunctions/merge_vcf.swift:CombineGVCFs():3:105
    # Var: $string v:dbsnp:2 RENAMED [$string:__v:dbsnp] ./pipelinefunctions/merge_vcf.swift:CombineGVCFs():3:105
    # Var: $string v:__filename:outputfile:6 RENAMED [$string:__v:__filename:outputfile] ./pipelinefunctions/merge_vcf.swift:CombineGVCFs():3:105
    # Var: $file v:outputfile:6 RENAMED [$file:__v:outputfile] ./pipelinefunctions/merge_vcf.swift:CombineGVCFs():3:105
    set v:t:605 [ turbine::retrieve_string ${t:605} CACHED 1 ]
    set v:t:602 "${v:t:603}/${v:t:605}"
    set v:t:599 [ turbine::retrieve_string ${t:599} CACHED 1 ]
    set v:t:598 "${v:t:599}/GenomeAnalysisTK.jar"
    set v:t:597 "${v:t:598}"
    set v:javadir:6 [ turbine::retrieve_string ${t:595} CACHED 1 ]
    set v:dbsnp:2 [ turbine::retrieve_string ${t:607} CACHED 1 ]
    set v:__filename:outputfile:6 [ turbine::retrieve_string ${t:33} CACHED 1 ]
    set tcltmp:init_rc 2
    set v:outputfile:6 [ turbine::create_local_file_ref ${v:__filename:outputfile:6} ${tcltmp:init_rc} 1 ]
    turbine::c::log [ list exec: __v:javadir:6 "-Xmx8g" "-jar" ${v:t:597} "-T" "CombineGVCFs" "-R" ${v:t:602} "--dbsnp" ${v:dbsnp:2} {*}${v:variants} "-o" ${v:__filename:outputfile:6} [ dict create ] ]
    turbine::exec_external ${v:javadir:6} [ dict create ] "-Xmx8g" "-jar" ${v:t:597} "-T" "CombineGVCFs" "-R" ${v:t:602} "--dbsnp" ${v:dbsnp:2} {*}${v:variants} "-o" ${v:__filename:outputfile:6}
    turbine::store_file ${u:rawvariant} v:outputfile:6 0
    turbine::rule [ list ] "__entry-chain13 ${t:626} {${v:sampleLines:1}} {${u:mergedvariant}} {${u:rawvariant}} ${u:samples_processing_done}"
    turbine::decr_local_file_refcount v:outputfile:6
}


proc __entry-chain13 { t:626 v:sampleLines:1 u:mergedvariant u:rawvariant u:samples_processing_done } {
    f:cp ${u:mergedvariant} ${u:rawvariant} -100 "HARD" "RANK"
    turbine::rule [ list [ turbine::get_file_td ${u:mergedvariant} ] ] "__entry-chain14 ${t:626} {${v:sampleLines:1}} {${u:mergedvariant}} ${u:samples_processing_done}"
    turbine::file_read_refcount_decr ${u:rawvariant} 1
}


proc __entry-chain14 { t:626 v:sampleLines:1 u:mergedvariant u:samples_processing_done } {
    # Var: *rw(file)[int] t:615 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():211:32
    # Var: string t:616 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():211:37
    # Var: $int v:t:613 VALUE_OF [int:__t:613]
    lassign [ adlb::multicreate [ list container integer file_ref 1 1 124 ] [ list string 1 1 125 ] ] t:615 t:616
    turbine::c::log "allocated t:615=<${t:615}> t:616=<${t:616}>"
    set v:t:613 [ dict size ${v:sampleLines:1} ]
    turbine::glob [ list ${t:615} ] [ list ${t:616} ]
    turbine::rule [ list ${t:626} ] "__entry-async_op-strcat-10 ${t:616} ${t:626}"
    turbine::rule [ list ${t:615} ] "__entry-call_foreign-size ${t:615} ${v:t:613} ${u:samples_processing_done}"
    turbine::file_read_refcount_decr ${u:mergedvariant} 1
}


proc __entry-async_op-strcat-10 { t:616 t:626 } {
    # Var: $string v:t:626:4 VALUE_OF [string:__t:626]
    # Var: $string v:t:616 VALUE_OF [string:__t:616]
    set v:t:626:4 [ turbine::retrieve_string ${t:626} CACHED 1 ]
    set v:t:616 "${v:t:626:4}/*.GATKCombineGVCF.raw.vcf"
    turbine::store_string ${t:616} ${v:t:616}
}


proc __entry-call_foreign-size { t:615 v:t:613 u:samples_processing_done } {
    # Var: file$[int] v:t:615 VALUE_OF [*rw(file)[int]:__t:615]
    # Var: $int v:t:614 VALUE_OF [int:__t:614]
    # Var: $boolean v:t:612 VALUE_OF [boolean:__t:612]
    set v:t:615 [ adlb::enumerate ${t:615} dict all 0 0 ]
    set v:t:614 [ dict size ${v:t:615} ]
    set v:t:612 [ expr { ${v:t:613} == ${v:t:614} } ]
    if { ${v:t:612} } {
        turbine::store_integer ${u:samples_processing_done} 1
    }
    turbine::read_refcount_decr ${t:615} 1
}


proc __entry-optmerged-3 { u:RealignDir u:VarcallDir t:242 t:26 t:31 t:33 t:627 t:70 v:alias:sampleName u:chromosomes_processing_done u:dedupsortedbam u:flagstats u:indices u:outbam u:rawvariant u:stat u:vars } {
    # Var: $string v:t:627:2 VALUE_OF [string:__t:627]
    # Var: $string v:t:17 VALUE_OF [string:__t:17]
    # Var: $string v:t:26 VALUE_OF [string:__t:26]
    # Var: $string v:t:58 VALUE_OF [string:__t:58]
    # Var: $string v:RealignDir VALUE_OF [string:RealignDir]
    # Var: $string v:t:31 VALUE_OF [string:__t:31]
    # Var: $string v:VarcallDir VALUE_OF [string:VarcallDir]
    # Var: $string v:t:33 VALUE_OF [string:__t:33]
    set v:t:627:2 [ turbine::retrieve_string ${t:627} CACHED 1 ]
    set v:t:17 "${v:t:627:2}/${v:alias:sampleName}"
    set v:t:26 "${v:t:627:2}/align/${v:alias:sampleName}.wdups.sorted.bam"
    turbine::store_string ${t:26} ${v:t:26}
    set v:t:58 "${v:t:627:2}/align/${v:alias:sampleName}.wdups.sorted.bam.flagstats"
    set v:RealignDir "${v:t:17}/realign/"
    turbine::store_string ${u:RealignDir} ${v:RealignDir}
    set v:t:31 "${v:RealignDir}${v:alias:sampleName}.recalibrated.bam"
    turbine::store_string ${t:31} ${v:t:31}
    turbine::set_filename_val ${u:outbam} ${v:t:31}
    set v:VarcallDir "${v:t:17}/variant/"
    turbine::store_string ${u:VarcallDir} ${v:VarcallDir}
    set v:t:33 "${v:VarcallDir}${v:alias:sampleName}.GATKCombineGVCF.raw.vcf"
    turbine::store_string ${t:33} ${v:t:33}
    turbine::set_filename_val ${u:rawvariant} ${v:t:33}
    turbine::set_filename_val ${u:dedupsortedbam} ${v:t:26}
    turbine::set_filename_val ${u:flagstats} ${v:t:58}
    set tcltmp:prio [ turbine::get_priority ]
    turbine::set_priority ${tcltmp:prio}
    adlb::spawn 0 [ list mkdir-app-leaf1 ${v:VarcallDir} ]
    turbine::reset_priority
    turbine::rule [ list [ turbine::get_file_td ${u:dedupsortedbam} ] ] [ list __entry-optmerged-4 ${t:242} ${t:70} ${v:RealignDir} ${v:VarcallDir} ${v:alias:sampleName} ${v:t:26} ${v:t:58} ${u:chromosomes_processing_done} ${u:dedupsortedbam} ${u:flagstats} ${u:indices} ${u:stat} ${u:vars} ]
}


proc mkdir-app-leaf1 { v:VarcallDir } {
    # Var: $void v:v RENAMED [$void:__v:v] /usr/local/src/swift-t-0.9.1/turbine/export/unix.swift:mkdir():65:15
    turbine::c::log [ list exec: "mkdir" "-p" ${v:VarcallDir} [ dict create ] ]
    turbine::exec_external "mkdir" [ dict create ] "-p" ${v:VarcallDir}
}


proc __entry-optmerged-4 { t:242 t:70 v:RealignDir v:VarcallDir v:alias:sampleName v:t:26 v:t:58 u:chromosomes_processing_done u:dedupsortedbam u:flagstats u:indices u:stat u:vars } {
    # Var: $string v:t:370 VALUE_OF [string:__t:370]
    # Var: $string v:t:407 VALUE_OF [string:__t:407]
    # Var: string t:415 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():166:85
    # Var: string t:422 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():170:35
    # Var: string t:424 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():170:56
    # Var: string t:458 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():179:39
    # Var: string t:462 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():179:63
    # Var: string t:468 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():179:125
    # Var: string t:503 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():182:223
    # Var: $string v:t:524 VALUE_OF [string:__t:524]
    # Var: $string v:t:369 VALUE_OF [string:__t:369]
    # Var: $string v:t:523 VALUE_OF [string:__t:523]
    lassign [ adlb::multicreate [ list string 1 1 126 ] [ list string 1 1 127 ] [ list string 1 1 128 ] [ list string 1 1 129 ] [ list string 1 1 130 ] [ list string 1 1 131 ] [ list string 1 1 132 ] ] t:415 t:422 t:424 t:458 t:462 t:468 t:503
    turbine::c::log "allocated t:415=<${t:415}> t:422=<${t:422}> t:424=<${t:424}> t:458=<${t:458}> t:462=<${t:462}>"
    turbine::c::log "allocated t:468=<${t:468}> t:503=<${t:503}>"
    set v:t:370 "####   Realign-Vcall script for SAMPLE ${v:alias:sampleName}"
    set v:t:407 "#######   REALIGN-RECALIBRATION BLOCK STARTS HERE   ${v:alias:sampleName}"
    turbine::container_reference ${u:vars} "PBSCORES" ${t:415} string
    turbine::container_reference ${u:vars} "REFGENOMEDIR" ${t:422} string
    turbine::container_reference ${u:vars} "INDELDIR" ${t:424} string
    turbine::container_reference ${u:vars} "JAVADIR" ${t:458} string
    turbine::container_reference ${u:vars} "GATKDIR" ${t:462} string
    turbine::container_reference ${u:vars} "REFGENOME" ${t:468} string
    turbine::container_reference ${u:vars} "DBSNP" ${t:503} string
    set v:t:524 "#############    GATK VARIANT CALLING   FOR SAMPLE ${v:alias:sampleName}"
    set v:t:369 "${v:t:370} chr="
    set v:t:523 "${v:t:524} : "
    turbine::rule [ list ${u:indices} ] [ list __entry-explicit-wait2 ${t:242} ${t:415} ${t:422} ${t:424} ${t:458} ${t:462} ${t:468} ${t:503} ${t:70} ${v:RealignDir} ${v:VarcallDir} ${v:alias:sampleName} ${v:t:369} ${v:t:407} ${v:t:523} ${u:chromosomes_processing_done} ${u:dedupsortedbam} ${u:indices} ]
    turbine::rule [ list ${t:242} ] [ list samtools_flagstat-app-leaf1 ${t:242} ${v:t:26} ${v:t:58} ${u:dedupsortedbam} ${u:flagstats} ${u:stat} ]
}


proc __entry-explicit-wait2 { t:242 t:415 t:422 t:424 t:458 t:462 t:468 t:503 t:70 v:RealignDir v:VarcallDir v:alias:sampleName v:t:369 v:t:407 v:t:523 u:chromosomes_processing_done u:dedupsortedbam u:indices } {
    # Var: int t:414 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():166:74
    # Var: string t:465 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():179:124
    # Var: string t:500 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():182:222
    # Var: string t:420 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():170:28
    # Var: string t:460 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():179:56
    lassign [ adlb::multicreate [ list integer 1 1 133 ] [ list string 1 1 134 ] [ list string 1 1 135 ] [ list string 1 1 136 ] [ list string 1 1 137 ] ] t:414 t:465 t:500 t:420 t:460
    turbine::c::log "allocated t:414=<${t:414}> t:465=<${t:465}> t:500=<${t:500}> t:420=<${t:420}> t:460=<${t:460}>"
    set tcltmp:container_sz [ adlb::enumerate ${u:indices} count all 0 ]
    set tcltmp:iters ${tcltmp:container_sz}
    turbine::read_refcount_incr ${t:242} [ expr { ${tcltmp:iters} - 1 } ]
    turbine::read_refcount_incr ${t:460} [ expr { ${tcltmp:iters} - 1 } ]
    turbine::read_refcount_incr ${u:indices} [ expr { ${tcltmp:iters} - 1 } ]
    turbine::read_refcount_incr ${t:70} [ expr { ${tcltmp:iters} - 1 } ]
    turbine::file_read_refcount_incr ${u:dedupsortedbam} [ expr { ${tcltmp:iters} - 1 } ]
    turbine::read_refcount_incr ${t:500} [ expr { ${tcltmp:iters} - 1 } ]
    turbine::read_refcount_incr ${t:420} [ expr { ${tcltmp:iters} - 1 } ]
    turbine::read_refcount_incr ${t:465} [ expr { ${tcltmp:iters} - 1 } ]
    turbine::read_refcount_incr ${t:414} [ expr { ${tcltmp:iters} - 1 } ]
    turbine::read_refcount_incr ${t:458} [ expr { ${tcltmp:iters} - 1 } ]
    __entry-foreach2:outer ${t:242} ${t:414} ${t:420} ${t:458} ${t:460} ${t:465} ${t:500} ${t:70} ${v:RealignDir} ${v:VarcallDir} ${v:alias:sampleName} ${v:t:369} ${v:t:407} ${v:t:523} ${u:chromosomes_processing_done} ${u:dedupsortedbam} ${u:indices} 0 [ expr { ${tcltmp:container_sz} - 1 } ] 1
    turbine::rule [ list ${t:415} ] "__entry-async_op-parse_int-6 ${t:414} ${t:415}"
    turbine::rule [ list ${t:462} ] "__entry-async_op-dircat-3 ${t:460} ${t:462}"
    turbine::rule [ list ${t:422} ] "__entry-optmerged-6 ${t:420} ${t:422} ${t:424} ${t:465} ${t:468} ${t:500} ${t:503}"
}


proc __entry-foreach2:outer { t:242 t:414 t:420 t:458 t:460 t:465 t:500 t:70 v:RealignDir v:VarcallDir v:alias:sampleName v:t:369 v:t:407 v:t:523 u:chromosomes_processing_done u:dedupsortedbam u:indices tcltmp:lo tcltmp:hi tcltmp:inc } {
    if { [ expr { ${tcltmp:lo} > ${tcltmp:hi} } ] } {
        return
    }
    while {1} {
        set tcltmp:itersleft [ expr { max(0,(${tcltmp:hi} - ${tcltmp:lo}) / ${tcltmp:inc} + 1) } ]
        if { [ expr { ${tcltmp:itersleft} <= 64 } ] } {
            __entry-foreach2:inner ${t:242} ${t:414} ${t:420} ${t:458} ${t:460} ${t:465} ${t:500} ${t:70} ${v:RealignDir} ${v:VarcallDir} ${v:alias:sampleName} ${v:t:369} ${v:t:407} ${v:t:523} ${u:chromosomes_processing_done} ${u:dedupsortedbam} ${u:indices} ${tcltmp:lo} ${tcltmp:hi} ${tcltmp:inc}
            return
        } else {
            set tcltmp:skip [ expr { ${tcltmp:inc} * max(64,((${tcltmp:itersleft} - 1) / 16) + 1) } ]
            for { set tcltmp:splitstart [ expr { ${tcltmp:lo} + ${tcltmp:skip} } ] } { ${tcltmp:splitstart} <= ${tcltmp:hi} } { incr tcltmp:splitstart ${tcltmp:skip} } {
                set tcltmp:splitend [ expr { min(${tcltmp:hi},${tcltmp:splitstart} + ${tcltmp:skip} - 1) } ]
                set tcltmp:prio [ turbine::get_priority ]
                turbine::set_priority ${tcltmp:prio}
                adlb::spawn 0 [ list __entry-foreach2:outer ${t:242} ${t:414} ${t:420} ${t:458} ${t:460} ${t:465} ${t:500} ${t:70} ${v:RealignDir} ${v:VarcallDir} ${v:alias:sampleName} ${v:t:369} ${v:t:407} ${v:t:523} ${u:chromosomes_processing_done} ${u:dedupsortedbam} ${u:indices} ${tcltmp:splitstart} ${tcltmp:splitend} ${tcltmp:inc} ]
                turbine::reset_priority
            }
            set tcltmp:hi [ expr { ${tcltmp:lo} + ${tcltmp:skip} - 1 } ]
        }
    }
}


proc __entry-foreach2:inner { t:242 t:414 t:420 t:458 t:460 t:465 t:500 t:70 v:RealignDir v:VarcallDir v:alias:sampleName v:t:369 v:t:407 v:t:523 u:chromosomes_processing_done u:dedupsortedbam u:indices tcltmp:lo tcltmp:hi tcltmp:inc } {
    set tcltmp:splitlen [ expr { ${tcltmp:hi} - ${tcltmp:lo} + 1 } ]
    set tcltmp:contents [ adlb::enumerate ${u:indices} members ${tcltmp:splitlen} ${tcltmp:lo} ]
    foreach v:chr ${tcltmp:contents} {
        # Var: string c:s_sknownSite OPT_TEMPORARY
        global c:s_sknownSite
        # Var: string c:s_sknown_g OPT_TEMPORARY
        global c:s_sknown_g
        # Var: file u:chrdedupsortedbam VCcallingPipeline.swift:__entry():153:68
        # Var: file u:realignedbam VCcallingPipeline.swift:__entry():154:63
        # Var: file u:recalibratedbam VCcallingPipeline.swift:__entry():155:66
        # Var: file u:intervals VCcallingPipeline.swift:__entry():156:61
        # Var: file u:recalreport VCcallingPipeline.swift:__entry():157:63
        # Var: file u:gvcfvariant VCcallingPipeline.swift:__entry():158:62
        # Var: file u:recalfiles VCcallingPipeline.swift:__entry():160:65
        # Var: file u:realfiles VCcallingPipeline.swift:__entry():161:64
        # Var: int u:ploidy VCcallingPipeline.swift:__entry():164:3
        # Var: string t:417 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():166:104
        # Var: string t:427 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():170:80
        # Var: string[int] u:recalparmsindels VCcallingPipeline.swift:__entry():171:3
        # Var: file t:433 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():171:59
        # Var: string[int] u:realparms VCcallingPipeline.swift:__entry():174:3
        # Var: file t:452 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():174:52
        # Var: $string v:t:368 VALUE_OF [string:__t:368]
        # Var: $string v:t:367 VALUE_OF [string:__t:367]
        # Var: $void v:t:366 VALUE_OF [void:__t:366]
        # Var: $string v:t:406 VALUE_OF [string:__t:406]
        # Var: $string v:t:405 VALUE_OF [string:__t:405]
        # Var: $void v:t:404 VALUE_OF [void:__t:404]
        # Var: $boolean v:t:410 VALUE_OF [boolean:__t:410]
        # Var: $string v:t:417 VALUE_OF [string:__t:417]
        # Var: $string v:t:427 VALUE_OF [string:__t:427]
        # Var: $string v:t:522 VALUE_OF [string:__t:522]
        # Var: $string v:t:521 VALUE_OF [string:__t:521]
        # Var: $void v:t:520 VALUE_OF [void:__t:520]
        # Var: $string v:t:389 VALUE_OF [string:__t:389]
        # Var: $string v:t:374 VALUE_OF [string:__t:374]
        # Var: $string v:t:377 VALUE_OF [string:__t:377]
        # Var: $string v:t:380 VALUE_OF [string:__t:380]
        # Var: $string v:t:383 VALUE_OF [string:__t:383]
        # Var: $string v:t:386 VALUE_OF [string:__t:386]
        lassign [ adlb::multicreate [ list integer 1 1 146 ] [ list string 1 1 147 ] [ list string 1 1 148 ] [ list container integer string 1 1 149 ] [ list container integer string 1 1 151 ] ] u:ploidy t:417 t:427 u:recalparmsindels u:realparms
        turbine::c::log "allocated u:ploidy=<${u:ploidy}> t:417=<${t:417}> t:427=<${t:427}> u:recalparmsindels=<${u:recalparmsindels}> u:realparms=<${u:realparms}>"
        lassign [ turbine::make_file_tds [ adlb::multicreate [ list file 2 1 138 ] [ list file 1 1 139 ] [ list file 1 1 140 ] [ list file 1 1 141 ] [ list file 1 1 142 ] [ list file 0 1 143 ] [ list file 1 1 144 ] [ list file 1 1 145 ] [ list file 1 1 150 ] [ list file 1 1 152 ] ] [ list 1 1 1 1 1 1 1 1 0 0 ] ] u:chrdedupsortedbam u:realignedbam u:recalibratedbam u:intervals u:recalreport u:gvcfvariant u:recalfiles u:realfiles t:433 t:452
        set v:t:368 "${v:t:369}${v:chr}"
        set v:t:367 "${v:t:368}                             #######"
        turbine::trace_impl ${v:t:367}
        set v:t:406 "${v:t:407}${v:chr}"
        set v:t:405 "${v:t:406}        ######"
        turbine::trace_impl ${v:t:405}
        set v:t:410 [ string equal ${v:chr} "M" ]
        set v:t:417 "${v:chr}"
        turbine::store_string ${t:417} ${v:t:417}
        f:samtools_view ${u:chrdedupsortedbam} ${t:242} ${u:dedupsortedbam} ${t:414} ${t:417} -100 "HARD" "RANK"
        set v:t:427 "*${v:chr}.vcf"
        turbine::store_string ${t:427} ${v:t:427}
        f:find_files ${u:recalfiles} ${t:420} ${t:427} -100 "HARD" "RANK"
        f:sed ${t:433} ${u:recalfiles} ${c:s_sknownSite} -100 "HARD" "RANK"
        f:find_files ${u:realfiles} ${t:420} ${t:427} -100 "HARD" "RANK"
        f:sed ${t:452} ${u:recalfiles} ${c:s_sknown_g} -100 "HARD" "RANK"
        set v:t:522 "${v:t:523}${v:chr}"
        set v:t:521 "${v:t:522}   ###########"
        turbine::trace_impl ${v:t:521}
        if { ${v:t:410} } {
            turbine::store_integer ${u:ploidy} 1
        } else {
            turbine::store_integer ${u:ploidy} 2
        }
        set v:t:389 "${v:VarcallDir}${v:alias:sampleName}.${v:chr}.raw.g.vcf"
        turbine::set_filename_val ${u:gvcfvariant} ${v:t:389}
        set v:t:374 "${v:RealignDir}${v:alias:sampleName}.${v:chr}.wdups.sorted.bam"
        set v:t:377 "${v:RealignDir}${v:alias:sampleName}.${v:chr}.realigned.bam"
        set v:t:380 "${v:RealignDir}${v:alias:sampleName}.${v:chr}.recalibrated.bam"
        set v:t:383 "${v:RealignDir}${v:alias:sampleName}.${v:chr}.realignTargetCreator.intervals"
        set v:t:386 "${v:RealignDir}${v:alias:sampleName}.${v:chr}.recal_report.grp"
        turbine::set_filename_val ${u:chrdedupsortedbam} ${v:t:374}
        turbine::set_filename_val ${u:realignedbam} ${v:t:377}
        turbine::set_filename_val ${u:recalibratedbam} ${v:t:380}
        turbine::set_filename_val ${u:intervals} ${v:t:383}
        turbine::set_filename_val ${u:recalreport} ${v:t:386}
        turbine::rule [ list [ turbine::get_file_td ${t:433} ] ] "__entry-call_foreign-read-3 {${t:433}} ${u:recalparmsindels}"
        turbine::rule [ list [ turbine::get_file_td ${t:452} ] ] [ list __entry-call_foreign-read-4 ${t:414} ${t:452} ${t:458} ${t:460} ${t:465} ${t:500} ${v:VarcallDir} ${v:alias:sampleName} ${v:chr} ${v:t:374} ${v:t:377} ${v:t:380} ${v:t:383} ${v:t:386} ${v:t:389} ${u:chrdedupsortedbam} ${u:chromosomes_processing_done} ${u:gvcfvariant} ${u:indices} ${u:intervals} ${u:ploidy} ${u:realignedbam} ${u:realparms} ${u:recalibratedbam} ${u:recalparmsindels} ${u:recalreport} ]
        turbine::rule [ list ${t:70} ] [ list __entry-optmerged-5 ${t:70} ${v:chr} ${u:realfiles} ${u:recalfiles} ]
        turbine::rule [ list ${t:242} [ turbine::get_file_td ${u:chrdedupsortedbam} ] ] [ list samtools_index-app-leaf1 ${t:242} ${v:t:374} ${u:chrdedupsortedbam} ]
        turbine::read_refcount_decr ${t:417} 1
        turbine::file_read_refcount_decr ${u:realfiles} 1
        turbine::file_read_refcount_decr ${u:recalfiles} 1
        turbine::read_refcount_decr ${t:427} 1
    }
    set tcltmp:iters [ expr { max(0,(${tcltmp:hi} - ${tcltmp:lo}) / ${tcltmp:inc} + 1) } ]
    turbine::file_read_refcount_decr ${u:dedupsortedbam} [ expr { ${tcltmp:iters} } ]
    turbine::read_refcount_decr ${t:420} [ expr { ${tcltmp:iters} } ]
}


proc __entry-call_foreign-read-3 { t:433 u:recalparmsindels } {
    # Var: $file v:t:433 VALUE_OF [file:__t:433]
    # Var: $string v:t:432 VALUE_OF [string:__t:432]
    # Var: $int v:n RENAMED [$int:__v:n]
    # Var: $string v:t:431 VALUE_OF [string:__t:431]
    # Var: $string v:o RENAMED [$string:__v:o]
    # Var: $string$[int] v:recalparmsindels VALUE_OF [string[int]:recalparmsindels]
    set v:t:433 [ turbine::retrieve_file ${t:433} CACHED 1 ]
    set v:t:432 [ turbine::file_read_local ${v:t:433} ]
    set v:n [ string length ${v:t:432} ]
    set v:t:431 [ turbine::replace_all_impl ${v:t:432} "\n" " " 0 ${v:n} ]
    set v:o [ string trim ${v:t:431} ]
    set v:recalparmsindels [ turbine::split_impl ${v:o} " " ]
    turbine::build_rec ${u:recalparmsindels} ${v:recalparmsindels} [ list container integer string ] 0 1
}


proc __entry-call_foreign-read-4 { t:414 t:452 t:458 t:460 t:465 t:500 v:VarcallDir v:alias:sampleName v:chr v:t:374 v:t:377 v:t:380 v:t:383 v:t:386 v:t:389 u:chrdedupsortedbam u:chromosomes_processing_done u:gvcfvariant u:indices u:intervals u:ploidy u:realignedbam u:realparms u:recalibratedbam u:recalparmsindels u:recalreport } {
    # Var: $file v:t:452 VALUE_OF [file:__t:452]
    # Var: $string v:t:451 VALUE_OF [string:__t:451]
    # Var: $int v:n:1 RENAMED [$int:__v:n]
    # Var: $string v:t:450 VALUE_OF [string:__t:450]
    # Var: $string v:o:1 RENAMED [$string:__v:o]
    # Var: $string$[int] v:realparms VALUE_OF [string[int]:realparms]
    set v:t:452 [ turbine::retrieve_file ${t:452} CACHED 1 ]
    set v:t:451 [ turbine::file_read_local ${v:t:452} ]
    set v:n:1 [ string length ${v:t:451} ]
    set v:t:450 [ turbine::replace_all_impl ${v:t:451} "\n" " " 0 ${v:n:1} ]
    set v:o:1 [ string trim ${v:t:450} ]
    set v:realparms [ turbine::split_impl ${v:o:1} " " ]
    turbine::build_rec ${u:realparms} ${v:realparms} [ list container integer string ] 0 1
    turbine::rule [ list ${t:414} ${t:458} ${t:460} ${t:465} [ turbine::get_file_td ${u:chrdedupsortedbam} ] ] [ list RealignerTargetCreator-app-leaf1 ${t:414} ${t:458} ${t:460} ${t:465} ${t:500} ${v:VarcallDir} ${v:alias:sampleName} ${v:chr} ${v:t:374} ${v:t:377} ${v:t:380} ${v:t:383} ${v:t:386} ${v:t:389} ${u:chrdedupsortedbam} ${u:chromosomes_processing_done} ${u:gvcfvariant} ${u:indices} ${u:intervals} ${u:ploidy} ${u:realignedbam} ${u:realparms} ${u:recalibratedbam} ${u:recalparmsindels} ${u:recalreport} ]
}


proc RealignerTargetCreator-app-leaf1 { t:414 t:458 t:460 t:465 t:500 v:VarcallDir v:alias:sampleName v:chr v:t:374 v:t:377 v:t:380 v:t:383 v:t:386 v:t:389 u:chrdedupsortedbam u:chromosomes_processing_done u:gvcfvariant u:indices u:intervals u:ploidy u:realignedbam u:realparms u:recalibratedbam u:recalparmsindels u:recalreport } {
    # Var: $string v:javadir:1 RENAMED [$string:__v:javadir] ./pipelinefunctions/realign_varcall_by_chr.swift:RealignerTargetCreator():12:121
    # Var: $string v:gatkdir RENAMED [$string:__v:gatkdir] ./pipelinefunctions/realign_varcall_by_chr.swift:RealignerTargetCreator():12:121
    # Var: $string v:reference RENAMED [$string:__v:reference] ./pipelinefunctions/realign_varcall_by_chr.swift:RealignerTargetCreator():12:121
    # Var: $string$[int] v:known RENAMED [$string$[int]:__v:known] ./pipelinefunctions/realign_varcall_by_chr.swift:RealignerTargetCreator():12:121
    # Var: $int v:thr RENAMED [$int:__v:thr] ./pipelinefunctions/realign_varcall_by_chr.swift:RealignerTargetCreator():12:121
    # Var: $file v:inputFile:2 RENAMED [$file:__v:inputFile] ./pipelinefunctions/realign_varcall_by_chr.swift:RealignerTargetCreator():12:121
    # Var: $file v:outputfile:1 RENAMED [$file:__v:outputfile] ./pipelinefunctions/realign_varcall_by_chr.swift:RealignerTargetCreator():12:121
    set v:javadir:1 [ turbine::retrieve_string ${t:458} CACHED 1 ]
    set v:gatkdir [ turbine::retrieve_string ${t:460} CACHED 1 ]
    set v:reference [ turbine::retrieve_string ${t:465} CACHED 1 ]
    set v:known [ turbine::unpack_args ${u:realparms} 1 string ]
    set v:thr [ turbine::retrieve_integer ${t:414} CACHED 1 ]
    set v:inputFile:2 [ turbine::retrieve_file ${u:chrdedupsortedbam} ]
    set tcltmp:init_rc 2
    set v:outputfile:1 [ turbine::create_local_file_ref ${v:t:383} ${tcltmp:init_rc} 1 ]
    turbine::c::log [ list exec: __v:javadir:1 "-Xmx8g" "-jar" ${v:gatkdir} "-T" "RealignerTargetCreator" "-R" ${v:reference} "-I" ${v:t:374} {*}${v:known} "-nt" ${v:thr} "-o" ${v:t:383} [ dict create ] ]
    turbine::exec_external ${v:javadir:1} [ dict create ] "-Xmx8g" "-jar" ${v:gatkdir} "-T" "RealignerTargetCreator" "-R" ${v:reference} "-I" ${v:t:374} {*}${v:known} "-nt" ${v:thr} "-o" ${v:t:383}
    turbine::store_file ${u:intervals} v:outputfile:1 0
    set tcltmp:prio [ turbine::get_priority ]
    turbine::set_priority ${tcltmp:prio}
    adlb::spawn 0 [ list IndelRealigner-app-leaf1 ${t:500} ${v:VarcallDir} ${v:alias:sampleName} ${v:chr} ${v:gatkdir} ${v:javadir:1} ${v:known} ${v:reference} ${v:t:374} ${v:t:377} ${v:t:380} ${v:t:383} ${v:t:386} ${v:t:389} ${v:thr} ${u:chrdedupsortedbam} ${u:chromosomes_processing_done} ${u:gvcfvariant} ${u:indices} ${u:intervals} ${u:ploidy} ${u:realignedbam} ${u:recalibratedbam} ${u:recalparmsindels} ${u:recalreport} ]
    turbine::reset_priority
    turbine::decr_local_file_refcount v:outputfile:1
    turbine::read_refcount_decr ${u:realparms} 1
}


proc IndelRealigner-app-leaf1 { t:500 v:VarcallDir v:alias:sampleName v:chr v:gatkdir v:javadir:1 v:known v:reference v:t:374 v:t:377 v:t:380 v:t:383 v:t:386 v:t:389 v:thr u:chrdedupsortedbam u:chromosomes_processing_done u:gvcfvariant u:indices u:intervals u:ploidy u:realignedbam u:recalibratedbam u:recalparmsindels u:recalreport } {
    # Var: $file v:inputFile:3 RENAMED [$file:__v:inputFile] ./pipelinefunctions/realign_varcall_by_chr.swift:IndelRealigner():17:133
    # Var: $file v:intervals RENAMED [$file:__v:intervals] ./pipelinefunctions/realign_varcall_by_chr.swift:IndelRealigner():17:133
    # Var: $file v:outputfile:2 RENAMED [$file:__v:outputfile] ./pipelinefunctions/realign_varcall_by_chr.swift:IndelRealigner():17:133
    set v:inputFile:3 [ turbine::retrieve_file ${u:chrdedupsortedbam} CACHED 1 ]
    set v:intervals [ turbine::retrieve_file ${u:intervals} CACHED 1 ]
    set tcltmp:init_rc 2
    set v:outputfile:2 [ turbine::create_local_file_ref ${v:t:377} ${tcltmp:init_rc} 1 ]
    turbine::c::log [ list exec: __v:javadir:1 "-Xmx8g" "-jar" ${v:gatkdir} "-T" "IndelRealigner" "-R" ${v:reference} "-I" ${v:t:374} {*}${v:known} "--targetIntervals" ${v:t:383} "-o" ${v:t:377} [ dict create ] ]
    turbine::exec_external ${v:javadir:1} [ dict create ] "-Xmx8g" "-jar" ${v:gatkdir} "-T" "IndelRealigner" "-R" ${v:reference} "-I" ${v:t:374} {*}${v:known} "--targetIntervals" ${v:t:383} "-o" ${v:t:377}
    turbine::store_file ${u:realignedbam} v:outputfile:2 0
    turbine::rule [ list ${t:500} ${u:recalparmsindels} ] [ list BaseRecalibrator-app-leaf1 ${t:500} ${v:VarcallDir} ${v:alias:sampleName} ${v:chr} ${v:gatkdir} ${v:javadir:1} ${v:reference} ${v:t:377} ${v:t:380} ${v:t:386} ${v:t:389} ${v:thr} ${u:chromosomes_processing_done} ${u:gvcfvariant} ${u:indices} ${u:ploidy} ${u:realignedbam} ${u:recalibratedbam} ${u:recalparmsindels} ${u:recalreport} ]
    turbine::decr_local_file_refcount v:outputfile:2
}


proc BaseRecalibrator-app-leaf1 { t:500 v:VarcallDir v:alias:sampleName v:chr v:gatkdir v:javadir:1 v:reference v:t:377 v:t:380 v:t:386 v:t:389 v:thr u:chromosomes_processing_done u:gvcfvariant u:indices u:ploidy u:realignedbam u:recalibratedbam u:recalparmsindels u:recalreport } {
    # Var: $string v:dbsnp RENAMED [$string:__v:dbsnp] ./pipelinefunctions/realign_varcall_by_chr.swift:BaseRecalibrator():22:143
    # Var: $string$[int] v:knownindels RENAMED [$string$[int]:__v:knownindels] ./pipelinefunctions/realign_varcall_by_chr.swift:BaseRecalibrator():22:143
    # Var: $file v:inputFile:4 RENAMED [$file:__v:inputFile] ./pipelinefunctions/realign_varcall_by_chr.swift:BaseRecalibrator():22:143
    # Var: $file v:outputfile:3 RENAMED [$file:__v:outputfile] ./pipelinefunctions/realign_varcall_by_chr.swift:BaseRecalibrator():22:143
    set v:dbsnp [ turbine::retrieve_string ${t:500} CACHED 1 ]
    set v:knownindels [ turbine::unpack_args ${u:recalparmsindels} 1 string ]
    set v:inputFile:4 [ turbine::retrieve_file ${u:realignedbam} ]
    set tcltmp:init_rc 2
    set v:outputfile:3 [ turbine::create_local_file_ref ${v:t:386} ${tcltmp:init_rc} 1 ]
    turbine::c::log [ list exec: __v:javadir:1 "-Xmx16g" "-jar" ${v:gatkdir} "-T" "BaseRecalibrator" "-R" ${v:reference} "-I" ${v:t:377} "-knownSites" ${v:dbsnp} {*}${v:knownindels} "-nct" ${v:thr} "-o" ${v:t:386} [ dict create ] ]
    turbine::exec_external ${v:javadir:1} [ dict create ] "-Xmx16g" "-jar" ${v:gatkdir} "-T" "BaseRecalibrator" "-R" ${v:reference} "-I" ${v:t:377} "-knownSites" ${v:dbsnp} {*}${v:knownindels} "-nct" ${v:thr} "-o" ${v:t:386}
    turbine::store_file ${u:recalreport} v:outputfile:3 0
    set tcltmp:prio [ turbine::get_priority ]
    turbine::set_priority ${tcltmp:prio}
    adlb::spawn 0 [ list PrintReads-app-leaf1 ${v:VarcallDir} ${v:alias:sampleName} ${v:chr} ${v:dbsnp} ${v:gatkdir} ${v:javadir:1} ${v:reference} ${v:t:377} ${v:t:380} ${v:t:386} ${v:t:389} ${v:thr} ${u:chromosomes_processing_done} ${u:gvcfvariant} ${u:indices} ${u:ploidy} ${u:realignedbam} ${u:recalibratedbam} ${u:recalreport} ]
    turbine::reset_priority
    turbine::decr_local_file_refcount v:outputfile:3
    turbine::read_refcount_decr ${u:recalparmsindels} 1
}


proc PrintReads-app-leaf1 { v:VarcallDir v:alias:sampleName v:chr v:dbsnp v:gatkdir v:javadir:1 v:reference v:t:377 v:t:380 v:t:386 v:t:389 v:thr u:chromosomes_processing_done u:gvcfvariant u:indices u:ploidy u:realignedbam u:recalibratedbam u:recalreport } {
    # Var: $file v:inputFile:5 RENAMED [$file:__v:inputFile] ./pipelinefunctions/realign_varcall_by_chr.swift:PrintReads():27:129
    # Var: $file v:recalreport RENAMED [$file:__v:recalreport] ./pipelinefunctions/realign_varcall_by_chr.swift:PrintReads():27:129
    # Var: $file v:outputfile:4 RENAMED [$file:__v:outputfile] ./pipelinefunctions/realign_varcall_by_chr.swift:PrintReads():27:129
    set v:inputFile:5 [ turbine::retrieve_file ${u:realignedbam} CACHED 1 ]
    set v:recalreport [ turbine::retrieve_file ${u:recalreport} CACHED 1 ]
    set tcltmp:init_rc 2
    set v:outputfile:4 [ turbine::create_local_file_ref ${v:t:380} ${tcltmp:init_rc} 1 ]
    turbine::c::log [ list exec: __v:javadir:1 "-Xmx16g" "-jar" ${v:gatkdir} "-T" "PrintReads" "-R" ${v:reference} "-I" ${v:t:377} "-BQSR" ${v:t:386} "-nct" ${v:thr} "--out" ${v:t:380} [ dict create ] ]
    turbine::exec_external ${v:javadir:1} [ dict create ] "-Xmx16g" "-jar" ${v:gatkdir} "-T" "PrintReads" "-R" ${v:reference} "-I" ${v:t:377} "-BQSR" ${v:t:386} "-nct" ${v:thr} "--out" ${v:t:380}
    turbine::store_file ${u:recalibratedbam} v:outputfile:4 0
    set tcltmp:prio [ turbine::get_priority ]
    turbine::set_priority ${tcltmp:prio}
    adlb::spawn 0 [ list HaplotypeCaller-app-leaf1 ${v:VarcallDir} ${v:alias:sampleName} ${v:chr} ${v:dbsnp} ${v:gatkdir} ${v:javadir:1} ${v:reference} ${v:t:380} ${v:t:389} ${v:thr} ${u:chromosomes_processing_done} ${u:gvcfvariant} ${u:indices} ${u:ploidy} ${u:recalibratedbam} ]
    turbine::reset_priority
    turbine::decr_local_file_refcount v:outputfile:4
}


proc HaplotypeCaller-app-leaf1 { v:VarcallDir v:alias:sampleName v:chr v:dbsnp v:gatkdir v:javadir:1 v:reference v:t:380 v:t:389 v:thr u:chromosomes_processing_done u:gvcfvariant u:indices u:ploidy u:recalibratedbam } {
    # Var: $int v:ploidy RENAMED [$int:__v:ploidy] ./pipelinefunctions/realign_varcall_by_chr.swift:HaplotypeCaller():32:455
    # Var: $file v:inputFile:6 RENAMED [$file:__v:inputFile] ./pipelinefunctions/realign_varcall_by_chr.swift:HaplotypeCaller():32:455
    # Var: $file v:outputfile:5 RENAMED [$file:__v:outputfile] ./pipelinefunctions/realign_varcall_by_chr.swift:HaplotypeCaller():32:455
    # Var: *rw(file)[int] t:551 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():188:30
    # Var: string t:552 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():188:35
    # Var: $string$[int] v:indices VALUE_OF [string[int]:indices]
    # Var: $int v:t:549 VALUE_OF [int:__t:549]
    # Var: $string v:t:552 VALUE_OF [string:__t:552]
    lassign [ adlb::multicreate [ list container integer file_ref 1 1 153 ] [ list string 1 1 154 ] ] t:551 t:552
    turbine::c::log "allocated t:551=<${t:551}> t:552=<${t:552}>"
    set v:ploidy [ turbine::retrieve_integer ${u:ploidy} CACHED 1 ]
    set v:inputFile:6 [ turbine::retrieve_file ${u:recalibratedbam} CACHED 1 ]
    set tcltmp:init_rc 2
    set v:outputfile:5 [ turbine::create_local_file_ref ${v:t:389} ${tcltmp:init_rc} 1 ]
    turbine::c::log [ list exec: __v:javadir:1 "-Xmx8g" "-jar" ${v:gatkdir} "-T" "HaplotypeCaller" "-R" ${v:reference} "-I" ${v:t:380} "--dbsnp" ${v:dbsnp} "-o" ${v:t:389} "--emitRefConfidence" "GVCF" "-gt_mode" "DISCOVERY" "-A" "Coverage" "-A" "FisherStrand" "-A" "StrandOddsRatio" "-A" "HaplotypeScore" "-A" "MappingQualityRankSumTest" "-A" "QualByDepth" "-A" "RMSMappingQuality" "-A" "ReadPosRankSumTest" "-stand_call_conf" 30 "-stand_emit_conf" 30 "--sample_ploidy" ${v:ploidy} "-nt" 1 "-nct" ${v:thr} "-L" ${v:chr} [ dict create ] ]
    turbine::exec_external ${v:javadir:1} [ dict create ] "-Xmx8g" "-jar" ${v:gatkdir} "-T" "HaplotypeCaller" "-R" ${v:reference} "-I" ${v:t:380} "--dbsnp" ${v:dbsnp} "-o" ${v:t:389} "--emitRefConfidence" "GVCF" "-gt_mode" "DISCOVERY" "-A" "Coverage" "-A" "FisherStrand" "-A" "StrandOddsRatio" "-A" "HaplotypeScore" "-A" "MappingQualityRankSumTest" "-A" "QualByDepth" "-A" "RMSMappingQuality" "-A" "ReadPosRankSumTest" "-stand_call_conf" 30 "-stand_emit_conf" 30 "--sample_ploidy" ${v:ploidy} "-nt" 1 "-nct" ${v:thr} "-L" ${v:chr}
    turbine::store_file ${u:gvcfvariant} v:outputfile:5 0
    set v:indices [ adlb::enumerate ${u:indices} dict all 0 1 ]
    set v:t:549 [ dict size ${v:indices} ]
    turbine::glob [ list ${t:551} ] [ list ${t:552} ]
    set v:t:552 "${v:VarcallDir}${v:alias:sampleName}.*.raw.g.vcf"
    turbine::store_string ${t:552} ${v:t:552}
    turbine::rule [ list ${t:551} ] "__entry-call_foreign-size-1 ${t:551} ${v:t:549} ${u:chromosomes_processing_done}"
    turbine::decr_local_file_refcount v:outputfile:5
}


proc __entry-call_foreign-size-1 { t:551 v:t:549 u:chromosomes_processing_done } {
    # Var: file$[int] v:t:551 VALUE_OF [*rw(file)[int]:__t:551]
    # Var: $int v:t:550 VALUE_OF [int:__t:550]
    # Var: $boolean v:t:548 VALUE_OF [boolean:__t:548]
    set v:t:551 [ adlb::enumerate ${t:551} dict all 0 0 ]
    set v:t:550 [ dict size ${v:t:551} ]
    set v:t:548 [ expr { ${v:t:549} == ${v:t:550} } ]
    if { ${v:t:548} } {
        turbine::store_integer ${u:chromosomes_processing_done} 1
    }
    turbine::read_refcount_decr ${t:551} 1
}


proc __entry-optmerged-5 { t:70 v:chr u:realfiles u:recalfiles } {
    # Var: $string v:t:70:3 VALUE_OF [string:__t:70]
    # Var: $string v:t:392 VALUE_OF [string:__t:392]
    # Var: $string v:t:398 VALUE_OF [string:__t:398]
    set v:t:70:3 [ turbine::retrieve_string ${t:70} CACHED 1 ]
    set v:t:392 "${v:t:70:3}.${v:chr}.recal_foundfiles.txt"
    set v:t:398 "${v:t:70:3}.${v:chr}.real_foundfiles.txt"
    turbine::set_filename_val ${u:recalfiles} ${v:t:392}
    turbine::set_filename_val ${u:realfiles} ${v:t:398}
}


proc samtools_index-app-leaf1 { t:242 v:t:374 u:chrdedupsortedbam } {
    # Var: $string v:samtoolsdir RENAMED [$string:__v:samtoolsdir] ./pipelinefunctions/realign_varcall_by_chr.swift:samtools_index():7:21
    # Var: $file v:inputFilename RENAMED [$file:__v:inputFilename] ./pipelinefunctions/realign_varcall_by_chr.swift:samtools_index():7:21
    set v:samtoolsdir [ turbine::retrieve_string ${t:242} CACHED 1 ]
    set v:inputFilename [ turbine::retrieve_file ${u:chrdedupsortedbam} CACHED 1 ]
    turbine::c::log [ list exec: __v:samtoolsdir "index" ${v:t:374} [ dict create ] ]
    turbine::exec_external ${v:samtoolsdir} [ dict create ] "index" ${v:t:374}
}


proc __entry-async_op-parse_int-6 { t:414 t:415 } {
    # Var: $string v:t:415 VALUE_OF [string:__t:415]
    # Var: $int v:t:414 VALUE_OF [int:__t:414]
    set v:t:415 [ turbine::retrieve_string ${t:415} CACHED 1 ]
    set v:t:414 [ turbine::parse_int_impl ${v:t:415} 10 ]
    turbine::store_integer ${t:414} ${v:t:414}
}


proc __entry-async_op-dircat-3 { t:460 t:462 } {
    # Var: $string v:t:462 VALUE_OF [string:__t:462]
    # Var: $string v:t:461 VALUE_OF [string:__t:461]
    # Var: $string v:t:460 VALUE_OF [string:__t:460]
    set v:t:462 [ turbine::retrieve_string ${t:462} CACHED 1 ]
    set v:t:461 "${v:t:462}/GenomeAnalysisTK.jar"
    set v:t:460 "${v:t:461}"
    turbine::store_string ${t:460} ${v:t:460}
}


proc __entry-optmerged-6 { t:420 t:422 t:424 t:465 t:468 t:500 t:503 } {
    # Var: $string v:t:422 VALUE_OF [string:__t:422]
    set v:t:422 [ turbine::retrieve_string ${t:422} CACHED 1 ]
    turbine::rule [ list ${t:424} ] [ list __entry-async_op-dircat-4 ${t:420} ${t:424} ${v:t:422} ]
    turbine::rule [ list ${t:468} ] [ list __entry-async_op-dircat-5 ${t:465} ${t:468} ${v:t:422} ]
    turbine::rule [ list ${t:503} ] [ list __entry-async_op-dircat-6 ${t:500} ${t:503} ${v:t:422} ]
}


proc __entry-async_op-dircat-4 { t:420 t:424 v:t:422 } {
    # Var: $string v:t:424 VALUE_OF [string:__t:424]
    # Var: $string v:t:421 VALUE_OF [string:__t:421]
    # Var: $string v:t:420 VALUE_OF [string:__t:420]
    set v:t:424 [ turbine::retrieve_string ${t:424} CACHED 1 ]
    set v:t:421 "${v:t:422}/${v:t:424}"
    set v:t:420 "${v:t:421}/"
    turbine::store_string ${t:420} ${v:t:420}
}


proc __entry-async_op-dircat-5 { t:465 t:468 v:t:422 } {
    # Var: $string v:t:468 VALUE_OF [string:__t:468]
    # Var: $string v:t:465 VALUE_OF [string:__t:465]
    set v:t:468 [ turbine::retrieve_string ${t:468} CACHED 1 ]
    set v:t:465 "${v:t:422}/${v:t:468}"
    turbine::store_string ${t:465} ${v:t:465}
}


proc __entry-async_op-dircat-6 { t:500 t:503 v:t:422 } {
    # Var: $string v:t:503 VALUE_OF [string:__t:503]
    # Var: $string v:t:500 VALUE_OF [string:__t:500]
    set v:t:503 [ turbine::retrieve_string ${t:503} CACHED 1 ]
    set v:t:500 "${v:t:422}/${v:t:503}"
    turbine::store_string ${t:500} ${v:t:500}
}


proc samtools_flagstat-app-leaf1 { t:242 v:t:26 v:t:58 u:dedupsortedbam u:flagstats u:stat } {
    # Var: $string v:samtoolsdir:1 RENAMED [$string:__v:samtoolsdir] ./pipelinefunctions/align_dedup.swift:samtools_flagstat():51:42
    # Var: $file v:inputFile:8 RENAMED [$file:__v:inputFile] ./pipelinefunctions/align_dedup.swift:samtools_flagstat():51:42
    # Var: $file v:output:3 RENAMED [$file:__v:output] ./pipelinefunctions/align_dedup.swift:samtools_flagstat():51:42
    # Var: $file v:flagstats VALUE_OF [file:flagstats]
    # Var: $string$[int] v:stat VALUE_OF [string[int]:stat]
    set v:samtoolsdir:1 [ turbine::retrieve_string ${t:242} CACHED 1 ]
    set v:inputFile:8 [ turbine::retrieve_file ${u:dedupsortedbam} CACHED 1 ]
    set tcltmp:init_rc 2
    set v:output:3 [ turbine::create_local_file_ref ${v:t:58} ${tcltmp:init_rc} 1 ]
    turbine::c::log [ list exec: __v:samtoolsdir:1 "flagstat" ${v:t:26} [ dict create "stdout" ${v:t:58} ] ]
    turbine::exec_external ${v:samtoolsdir:1} [ dict create "stdout" ${v:t:58} ] "flagstat" ${v:t:26}
    turbine::store_file ${u:flagstats} v:output:3 0
    set v:flagstats [ turbine::retrieve_file ${u:flagstats} CACHED 1 ]
    set v:stat [ turbine::file_lines_impl ${v:flagstats} ]
    turbine::build_rec ${u:stat} ${v:stat} [ list container integer string ] 0 1
    turbine::decr_local_file_refcount v:output:3
}


proc __entry-optmerged-7 { t:634 t:64 t:70 v:alias:sampleName u:alignedsam u:chr_bamListfile u:chr_vcfListfile } {
    # Var: $string v:t:634:1 VALUE_OF [string:__t:634]
    # Var: $string v:t:64 VALUE_OF [string:__t:64]
    # Var: $string v:t:70 VALUE_OF [string:__t:70]
    # Var: $string v:t:69 VALUE_OF [string:__t:69]
    # Var: $string v:t:74 VALUE_OF [string:__t:74]
    set v:t:634:1 [ turbine::retrieve_string ${t:634} CACHED 1 ]
    set v:t:64 "${v:t:634:1}/align/${v:alias:sampleName}.nodups.sam"
    turbine::store_string ${t:64} ${v:t:64}
    set v:t:70 "${v:t:634:1}/${v:alias:sampleName}"
    turbine::store_string ${t:70} ${v:t:70}
    turbine::set_filename_val ${u:alignedsam} ${v:t:64}
    set v:t:69 "${v:t:70}.chr_bamList.txt"
    turbine::set_filename_val ${u:chr_bamListfile} ${v:t:69}
    set v:t:74 "${v:t:70}.chr_vcfList.txt"
    turbine::set_filename_val ${u:chr_vcfListfile} ${v:t:74}
}


proc __entry-async_op-strcat-11 { t:634 u:variantFiles } {
    # Var: $string v:t:634 VALUE_OF [string:__t:634]
    # Var: $string v:t:633 VALUE_OF [string:__t:633]
    set v:t:634 [ turbine::retrieve_string ${t:634} CACHED 1 ]
    set v:t:633 "${v:t:634}/variantFiles.txt"
    turbine::set_filename_val ${u:variantFiles} ${v:t:633}
}


proc __entry-async_op-eq_string-2 { t:79 t:80 } {
    # Var: $string v:t:80 VALUE_OF [string:__t:80]
    # Var: $boolean v:t:79 VALUE_OF [boolean:__t:79]
    set v:t:80 [ turbine::retrieve_string ${t:80} CACHED 1 ]
    set v:t:79 [ string equal ${v:t:80} "SAMBLASTER" ]
    turbine::store_integer ${t:79} ${v:t:79}
}


proc __entry-async_op-parse_float-4 { t:234 t:262 } {
    # Var: $string v:t:234 VALUE_OF [string:__t:234]
    # Var: $float v:t:262 VALUE_OF [float:__t:262]
    set v:t:234 [ turbine::retrieve_string ${t:234} CACHED 1 ]
    set v:t:262 [ turbine::string2float_impl ${v:t:234} ]
    turbine::store_float ${t:262} ${v:t:262}
}


proc __entry-call_foreign-split-3 { t:363 u:indices } {
    # Var: $string v:t:363 VALUE_OF [string:__t:363]
    # Var: $string$[int] v:indices:1 VALUE_OF [string[int]:indices]
    set v:t:363 [ turbine::retrieve_string ${t:363} CACHED 1 ]
    set v:indices:1 [ turbine::split_impl ${v:t:363} ":" ]
    turbine::build_rec ${u:indices} ${v:indices:1} [ list container integer string ] 0 1
}


proc __entry-optmerged-8 { t:35 t:625 t:626 t:627 t:629 u:jointVCF } {
    # Var: $string v:t:627 VALUE_OF [string:__t:627]
    # Var: $string v:t:629 VALUE_OF [string:__t:629]
    # Var: $string v:t:626 VALUE_OF [string:__t:626]
    # Var: $string v:t:35 VALUE_OF [string:__t:35]
    # Var: $string v:t:625 VALUE_OF [string:__t:625]
    # Var: $string v:t:638 VALUE_OF [string:__t:638]
    set v:t:627 [ turbine::retrieve_string ${t:627} CACHED 1 ]
    set v:t:629 [ turbine::retrieve_string ${t:629} CACHED 1 ]
    set v:t:626 "${v:t:627}/${v:t:629}"
    turbine::store_string ${t:626} ${v:t:626}
    set v:t:35 "${v:t:627}/${v:t:629}/docs/QC_test_results.txt"
    turbine::store_string ${t:35} ${v:t:35}
    set v:t:625 "${v:t:626}/jointVCFs/jointVCFcalled.vcf"
    turbine::store_string ${t:625} ${v:t:625}
    turbine::set_filename_val ${u:jointVCF} ${v:t:625}
    set v:t:638 "${v:t:626}/jointVCFs"
    set tcltmp:prio [ turbine::get_priority ]
    turbine::set_priority ${tcltmp:prio}
    adlb::spawn 0 [ list mkdir-app-leaf1-1 ${v:t:638} ]
    turbine::reset_priority
}


proc mkdir-app-leaf1-1 { v:t:638 } {
    # Var: $void v:v:1 RENAMED [$void:__v:v] /usr/local/src/swift-t-0.9.1/turbine/export/unix.swift:mkdir():65:15
    turbine::c::log [ list exec: "mkdir" "-p" ${v:t:638} [ dict create ] ]
    turbine::exec_external "mkdir" [ dict create ] "-p" ${v:t:638}
}


proc f:cp { u:o u:i v:loc_rank v:loc_strictness v:loc_accuracy } {
    turbine::c::log "function: cp"
    # Var: $boolean v:mapped_o OPT_TEMPORARY
    turbine::file_read_refcount_incr ${u:o} 1
    turbine::file_read_refcount_incr ${u:i} 2
    set filename:i [ turbine::get_file_path ${u:i} ]
    set v:mapped_o [ turbine::is_file_mapped ${u:o} ]
    set filename:o [ turbine::get_file_path ${u:o} ]
    if { ${v:mapped_o} } {
    } else {
        # Var: $string optf:o FILENAME_OF [file:o]
        set optf:o [ turbine::mktemp ]
        turbine::set_filename_val ${u:o} ${optf:o}
    }
    turbine::rule [ list ${filename:i} ${filename:o} [ turbine::get_file_td ${u:i} ] ] "cp-app-leaf1 {${filename:i}} {${filename:o}} ${v:mapped_o} {${u:i}} {${u:o}}" target ${v:loc_rank} strictness ${v:loc_strictness} accuracy ${v:loc_accuracy}
}


proc cp-app-leaf1 { filename:i filename:o v:mapped_o u:i u:o } {
    # Var: $string v:__filename:i VALUE_OF [string:__filename:i] /usr/local/src/swift-t-0.9.1/turbine/export/unix.swift:cp():24:9
    # Var: $string v:__filename:o VALUE_OF [string:__filename:o] /usr/local/src/swift-t-0.9.1/turbine/export/unix.swift:cp():24:9
    # Var: $file v:i VALUE_OF [file:i] /usr/local/src/swift-t-0.9.1/turbine/export/unix.swift:cp():24:9
    # Var: $file v:o VALUE_OF [file:o] /usr/local/src/swift-t-0.9.1/turbine/export/unix.swift:cp():24:9
    # Var: $boolean v:3 EXPR_TEMPORARY /usr/local/src/swift-t-0.9.1/turbine/export/unix.swift:cp():24:9
    set v:__filename:i [ turbine::retrieve_string ${filename:i} ]
    set v:__filename:o [ turbine::retrieve_string ${filename:o} CACHED 1 ]
    set v:i [ turbine::retrieve_file ${u:i} CACHED 2 ]
    if { ${v:mapped_o} } {
        set tcltmp:init_rc 2
    } else {
        set tcltmp:init_rc 1
    }
    set v:o [ turbine::create_local_file_ref ${v:__filename:o} ${tcltmp:init_rc} ${v:mapped_o} ]
    turbine::c::log [ list exec: "cp" ${v:__filename:i} ${v:__filename:o} [ dict create ] ]
    turbine::exec_external "cp" [ dict create ] ${v:__filename:i} ${v:__filename:o}
    set v:3 [ expr { ! ${v:mapped_o} } ]
    turbine::store_file ${u:o} v:o ${v:3}
    turbine::decr_local_file_refcount v:o
}


proc f:sed { u:o u:i u:command v:loc_rank v:loc_strictness v:loc_accuracy } {
    turbine::c::log "function: sed"
    # Var: $boolean v:mapped_o OPT_TEMPORARY
    turbine::read_refcount_incr ${u:command} 1
    turbine::file_read_refcount_incr ${u:o} 1
    turbine::file_read_refcount_incr ${u:i} 2
    set filename:i [ turbine::get_file_path ${u:i} ]
    set v:mapped_o [ turbine::is_file_mapped ${u:o} ]
    set filename:o [ turbine::get_file_path ${u:o} ]
    if { ${v:mapped_o} } {
    } else {
        # Var: $string optf:o FILENAME_OF [file:o]
        set optf:o [ turbine::mktemp ]
        turbine::set_filename_val ${u:o} ${optf:o}
    }
    turbine::rule [ list ${filename:i} ${filename:o} ${u:command} [ turbine::get_file_td ${u:i} ] ] "sed-app-leaf1 {${filename:i}} {${filename:o}} ${v:mapped_o} {${u:command}} {${u:i}} {${u:o}}" target ${v:loc_rank} strictness ${v:loc_strictness} accuracy ${v:loc_accuracy}
}


proc sed-app-leaf1 { filename:i filename:o v:mapped_o u:command u:i u:o } {
    # Var: $string v:command VALUE_OF [string:command] /usr/local/src/swift-t-0.9.1/turbine/export/unix.swift:sed():40:26
    # Var: $string v:__filename:i VALUE_OF [string:__filename:i] /usr/local/src/swift-t-0.9.1/turbine/export/unix.swift:sed():40:26
    # Var: $string v:__filename:o VALUE_OF [string:__filename:o] /usr/local/src/swift-t-0.9.1/turbine/export/unix.swift:sed():40:26
    # Var: $file v:i VALUE_OF [file:i] /usr/local/src/swift-t-0.9.1/turbine/export/unix.swift:sed():40:26
    # Var: $file v:o VALUE_OF [file:o] /usr/local/src/swift-t-0.9.1/turbine/export/unix.swift:sed():40:26
    # Var: $boolean v:3 EXPR_TEMPORARY /usr/local/src/swift-t-0.9.1/turbine/export/unix.swift:sed():40:26
    set v:command [ turbine::retrieve_string ${u:command} CACHED 1 ]
    set v:__filename:i [ turbine::retrieve_string ${filename:i} ]
    set v:__filename:o [ turbine::retrieve_string ${filename:o} CACHED 1 ]
    set v:i [ turbine::retrieve_file ${u:i} CACHED 2 ]
    if { ${v:mapped_o} } {
        set tcltmp:init_rc 2
    } else {
        set tcltmp:init_rc 1
    }
    set v:o [ turbine::create_local_file_ref ${v:__filename:o} ${tcltmp:init_rc} ${v:mapped_o} ]
    turbine::c::log [ list exec: "sed" ${v:command} ${v:__filename:i} [ dict create "stdout" ${v:__filename:o} ] ]
    turbine::exec_external "sed" [ dict create "stdout" ${v:__filename:o} ] ${v:command} ${v:__filename:i}
    set v:3 [ expr { ! ${v:mapped_o} } ]
    turbine::store_file ${u:o} v:o ${v:3}
    turbine::decr_local_file_refcount v:o
}


proc f:echo { u:o u:s v:loc_rank v:loc_strictness v:loc_accuracy } {
    turbine::c::log "function: echo"
    # Var: $boolean v:mapped_o OPT_TEMPORARY
    turbine::file_read_refcount_incr ${u:o} 1
    turbine::read_refcount_incr ${u:s} 1
    set v:mapped_o [ turbine::is_file_mapped ${u:o} ]
    set filename:o [ turbine::get_file_path ${u:o} ]
    if { ${v:mapped_o} } {
    } else {
        # Var: $string optf:o FILENAME_OF [file:o]
        set optf:o [ turbine::mktemp ]
        turbine::set_filename_val ${u:o} ${optf:o}
    }
    turbine::rule [ list ${filename:o} ${u:s} ] "echo-app-leaf1 {${filename:o}} ${v:mapped_o} {${u:o}} {${u:s}}" target ${v:loc_rank} strictness ${v:loc_strictness} accuracy ${v:loc_accuracy}
}


proc echo-app-leaf1 { filename:o v:mapped_o u:o u:s } {
    # Var: $string v:s VALUE_OF [string:s] /usr/local/src/swift-t-0.9.1/turbine/export/unix.swift:echo():55:19
    # Var: $string v:__filename:o VALUE_OF [string:__filename:o] /usr/local/src/swift-t-0.9.1/turbine/export/unix.swift:echo():55:19
    # Var: $file v:o VALUE_OF [file:o] /usr/local/src/swift-t-0.9.1/turbine/export/unix.swift:echo():55:19
    # Var: $boolean v:3 EXPR_TEMPORARY /usr/local/src/swift-t-0.9.1/turbine/export/unix.swift:echo():55:19
    set v:s [ turbine::retrieve_string ${u:s} CACHED 1 ]
    set v:__filename:o [ turbine::retrieve_string ${filename:o} CACHED 1 ]
    if { ${v:mapped_o} } {
        set tcltmp:init_rc 2
    } else {
        set tcltmp:init_rc 1
    }
    set v:o [ turbine::create_local_file_ref ${v:__filename:o} ${tcltmp:init_rc} ${v:mapped_o} ]
    turbine::c::log [ list exec: "echo" ${v:s} [ dict create "stdout" ${v:__filename:o} ] ]
    turbine::exec_external "echo" [ dict create "stdout" ${v:__filename:o} ] ${v:s}
    set v:3 [ expr { ! ${v:mapped_o} } ]
    turbine::store_file ${u:o} v:o ${v:3}
    turbine::decr_local_file_refcount v:o
}


proc f:bwa_mem { u:output u:bwadir u:read1 u:read2 u:INDEX u:bwamemparams u:PBSCORES u:rgheader v:loc_rank v:loc_strictness v:loc_accuracy } {
    turbine::c::log "function: bwa_mem"
    # Var: $boolean v:mapped_output OPT_TEMPORARY
    turbine::read_refcount_incr ${u:read1} 1
    turbine::read_refcount_incr ${u:read2} 1
    turbine::read_refcount_incr ${u:bwamemparams} 1
    turbine::read_refcount_incr ${u:rgheader} 1
    turbine::read_refcount_incr ${u:INDEX} 1
    turbine::read_refcount_incr ${u:bwadir} 1
    turbine::read_refcount_incr ${u:PBSCORES} 1
    turbine::file_read_refcount_incr ${u:output} 1
    set v:mapped_output [ turbine::is_file_mapped ${u:output} ]
    set filename:output [ turbine::get_file_path ${u:output} ]
    if { ${v:mapped_output} } {
    } else {
        # Var: $string optf:output FILENAME_OF [file:output]
        set optf:output [ turbine::mktemp ]
        turbine::set_filename_val ${u:output} ${optf:output}
    }
    turbine::rule [ list ${u:INDEX} ${u:PBSCORES} ${filename:output} ${u:bwadir} ${u:bwamemparams} ${u:read1} ${u:read2} ${u:rgheader} ] "bwa_mem-app-leaf1 {${u:INDEX}} {${u:PBSCORES}} {${filename:output}} ${v:mapped_output} {${u:bwadir}} {${u:bwamemparams}} {${u:output}} {${u:read1}} {${u:read2}} {${u:rgheader}}" target ${v:loc_rank} strictness ${v:loc_strictness} accuracy ${v:loc_accuracy}
}


proc bwa_mem-app-leaf1 { u:INDEX u:PBSCORES filename:output v:mapped_output u:bwadir u:bwamemparams u:output u:read1 u:read2 u:rgheader } {
    # Var: $string v:bwadir VALUE_OF [string:bwadir] ./pipelinefunctions/align_dedup.swift:bwa_mem():4:86
    # Var: $string v:bwamemparams VALUE_OF [string:bwamemparams] ./pipelinefunctions/align_dedup.swift:bwa_mem():4:86
    # Var: $int v:PBSCORES VALUE_OF [int:PBSCORES] ./pipelinefunctions/align_dedup.swift:bwa_mem():4:86
    # Var: $string v:rgheader VALUE_OF [string:rgheader] ./pipelinefunctions/align_dedup.swift:bwa_mem():4:86
    # Var: $string v:INDEX VALUE_OF [string:INDEX] ./pipelinefunctions/align_dedup.swift:bwa_mem():4:86
    # Var: $string v:read1 VALUE_OF [string:read1] ./pipelinefunctions/align_dedup.swift:bwa_mem():4:86
    # Var: $string v:read2 VALUE_OF [string:read2] ./pipelinefunctions/align_dedup.swift:bwa_mem():4:86
    # Var: $string v:__filename:output VALUE_OF [string:__filename:output] ./pipelinefunctions/align_dedup.swift:bwa_mem():4:86
    # Var: $file v:output VALUE_OF [file:output] ./pipelinefunctions/align_dedup.swift:bwa_mem():4:86
    # Var: $boolean v:3 EXPR_TEMPORARY ./pipelinefunctions/align_dedup.swift:bwa_mem():4:86
    set v:bwadir [ turbine::retrieve_string ${u:bwadir} CACHED 1 ]
    set v:bwamemparams [ turbine::retrieve_string ${u:bwamemparams} CACHED 1 ]
    set v:PBSCORES [ turbine::retrieve_integer ${u:PBSCORES} CACHED 1 ]
    set v:rgheader [ turbine::retrieve_string ${u:rgheader} CACHED 1 ]
    set v:INDEX [ turbine::retrieve_string ${u:INDEX} CACHED 1 ]
    set v:read1 [ turbine::retrieve_string ${u:read1} CACHED 1 ]
    set v:read2 [ turbine::retrieve_string ${u:read2} CACHED 1 ]
    set v:__filename:output [ turbine::retrieve_string ${filename:output} CACHED 1 ]
    if { ${v:mapped_output} } {
        set tcltmp:init_rc 2
    } else {
        set tcltmp:init_rc 1
    }
    set v:output [ turbine::create_local_file_ref ${v:__filename:output} ${tcltmp:init_rc} ${v:mapped_output} ]
    turbine::c::log [ list exec: __v:bwadir "mem" "-M" ${v:bwamemparams} "-t" ${v:PBSCORES} "-R" ${v:rgheader} ${v:INDEX} ${v:read1} ${v:read2} [ dict create "stdout" ${v:__filename:output} ] ]
    turbine::exec_external ${v:bwadir} [ dict create "stdout" ${v:__filename:output} ] "mem" "-M" ${v:bwamemparams} "-t" ${v:PBSCORES} "-R" ${v:rgheader} ${v:INDEX} ${v:read1} ${v:read2}
    set v:3 [ expr { ! ${v:mapped_output} } ]
    turbine::store_file ${u:output} v:output ${v:3}
    turbine::decr_local_file_refcount v:output
}


proc f:samtools_view { u:output u:samtoolsdir u:inputFile u:thr u:u v:loc_rank v:loc_strictness v:loc_accuracy } {
    turbine::c::log "function: samtools_view"
    # Var: $boolean v:mapped_output OPT_TEMPORARY
    turbine::read_refcount_incr ${u:thr} 1
    turbine::read_refcount_incr ${u:u} 1
    turbine::file_read_refcount_incr ${u:inputFile} 2
    turbine::file_read_refcount_incr ${u:output} 1
    turbine::read_refcount_incr ${u:samtoolsdir} 1
    set filename:inputFile [ turbine::get_file_path ${u:inputFile} ]
    set v:mapped_output [ turbine::is_file_mapped ${u:output} ]
    set filename:output [ turbine::get_file_path ${u:output} ]
    if { ${v:mapped_output} } {
    } else {
        # Var: $string optf:output FILENAME_OF [file:output]
        set optf:output [ turbine::mktemp ]
        turbine::set_filename_val ${u:output} ${optf:output}
    }
    turbine::rule [ list ${filename:inputFile} ${filename:output} [ turbine::get_file_td ${u:inputFile} ] ${u:samtoolsdir} ${u:thr} ${u:u} ] "samtools_view-app-leaf1 {${filename:inputFile}} {${filename:output}} ${v:mapped_output} {${u:inputFile}} {${u:output}} {${u:samtoolsdir}} {${u:thr}} {${u:u}}" target ${v:loc_rank} strictness ${v:loc_strictness} accuracy ${v:loc_accuracy}
}


proc samtools_view-app-leaf1 { filename:inputFile filename:output v:mapped_output u:inputFile u:output u:samtoolsdir u:thr u:u } {
    # Var: $string v:samtoolsdir VALUE_OF [string:samtoolsdir] ./pipelinefunctions/align_dedup.swift:samtools_view():15:55
    # Var: $int v:thr VALUE_OF [int:thr] ./pipelinefunctions/align_dedup.swift:samtools_view():15:55
    # Var: $string v:__filename:inputFile VALUE_OF [string:__filename:inputFile] ./pipelinefunctions/align_dedup.swift:samtools_view():15:55
    # Var: $string v:u VALUE_OF [string:u] ./pipelinefunctions/align_dedup.swift:samtools_view():15:55
    # Var: $string v:__filename:output VALUE_OF [string:__filename:output] ./pipelinefunctions/align_dedup.swift:samtools_view():15:55
    # Var: $file v:inputFile VALUE_OF [file:inputFile] ./pipelinefunctions/align_dedup.swift:samtools_view():15:55
    # Var: $file v:output VALUE_OF [file:output] ./pipelinefunctions/align_dedup.swift:samtools_view():15:55
    # Var: $boolean v:3 EXPR_TEMPORARY ./pipelinefunctions/align_dedup.swift:samtools_view():15:55
    set v:samtoolsdir [ turbine::retrieve_string ${u:samtoolsdir} CACHED 1 ]
    set v:thr [ turbine::retrieve_integer ${u:thr} CACHED 1 ]
    set v:__filename:inputFile [ turbine::retrieve_string ${filename:inputFile} ]
    set v:u [ turbine::retrieve_string ${u:u} CACHED 1 ]
    set v:__filename:output [ turbine::retrieve_string ${filename:output} CACHED 1 ]
    set v:inputFile [ turbine::retrieve_file ${u:inputFile} CACHED 2 ]
    if { ${v:mapped_output} } {
        set tcltmp:init_rc 2
    } else {
        set tcltmp:init_rc 1
    }
    set v:output [ turbine::create_local_file_ref ${v:__filename:output} ${tcltmp:init_rc} ${v:mapped_output} ]
    turbine::c::log [ list exec: __v:samtoolsdir "view" "-@" ${v:thr} "-bS" ${v:__filename:inputFile} ${v:u} [ dict create "stdout" ${v:__filename:output} ] ]
    turbine::exec_external ${v:samtoolsdir} [ dict create "stdout" ${v:__filename:output} ] "view" "-@" ${v:thr} "-bS" ${v:__filename:inputFile} ${v:u}
    set v:3 [ expr { ! ${v:mapped_output} } ]
    turbine::store_file ${u:output} v:output ${v:3}
    turbine::decr_local_file_refcount v:output
}


proc f:novosort { u:output u:novosortdir u:inputFile u:tmpdir u:thr u:sortoptions v:loc_rank v:loc_strictness v:loc_accuracy } {
    turbine::c::log "function: novosort"
    # Var: $boolean v:mapped_output OPT_TEMPORARY
    turbine::read_refcount_incr ${u:thr} 1
    turbine::read_refcount_incr ${u:novosortdir} 1
    turbine::read_refcount_incr ${u:tmpdir} 1
    turbine::read_refcount_incr ${u:sortoptions} 1
    turbine::file_read_refcount_incr ${u:inputFile} 2
    turbine::file_read_refcount_incr ${u:output} 1
    set filename:inputFile [ turbine::get_file_path ${u:inputFile} ]
    set v:mapped_output [ turbine::is_file_mapped ${u:output} ]
    set filename:output [ turbine::get_file_path ${u:output} ]
    if { ${v:mapped_output} } {
    } else {
        # Var: $string optf:output FILENAME_OF [file:output]
        set optf:output [ turbine::mktemp ]
        turbine::set_filename_val ${u:output} ${optf:output}
    }
    turbine::rule [ list ${filename:inputFile} ${filename:output} [ turbine::get_file_td ${u:inputFile} ] ${u:novosortdir} ${u:sortoptions} ${u:thr} ${u:tmpdir} ] "novosort-app-leaf1 {${filename:inputFile}} {${filename:output}} ${v:mapped_output} {${u:inputFile}} {${u:novosortdir}} {${u:output}} {${u:sortoptions}} {${u:thr}} {${u:tmpdir}}" target ${v:loc_rank} strictness ${v:loc_strictness} accuracy ${v:loc_accuracy}
}


proc novosort-app-leaf1 { filename:inputFile filename:output v:mapped_output u:inputFile u:novosortdir u:output u:sortoptions u:thr u:tmpdir } {
    # Var: $string v:novosortdir VALUE_OF [string:novosortdir] ./pipelinefunctions/align_dedup.swift:novosort():33:72
    # Var: $string v:tmpdir VALUE_OF [string:tmpdir] ./pipelinefunctions/align_dedup.swift:novosort():33:72
    # Var: $int v:thr VALUE_OF [int:thr] ./pipelinefunctions/align_dedup.swift:novosort():33:72
    # Var: $string v:__filename:inputFile VALUE_OF [string:__filename:inputFile] ./pipelinefunctions/align_dedup.swift:novosort():33:72
    # Var: $string v:__filename:output VALUE_OF [string:__filename:output] ./pipelinefunctions/align_dedup.swift:novosort():33:72
    # Var: $file v:inputFile VALUE_OF [file:inputFile] ./pipelinefunctions/align_dedup.swift:novosort():33:72
    # Var: $file v:output VALUE_OF [file:output] ./pipelinefunctions/align_dedup.swift:novosort():33:72
    # Var: $boolean v:3 EXPR_TEMPORARY ./pipelinefunctions/align_dedup.swift:novosort():33:72
    set v:novosortdir [ turbine::retrieve_string ${u:novosortdir} CACHED 1 ]
    set v:tmpdir [ turbine::retrieve_string ${u:tmpdir} CACHED 1 ]
    set v:thr [ turbine::retrieve_integer ${u:thr} CACHED 1 ]
    set v:__filename:inputFile [ turbine::retrieve_string ${filename:inputFile} ]
    set v:__filename:output [ turbine::retrieve_string ${filename:output} CACHED 1 ]
    set v:inputFile [ turbine::retrieve_file ${u:inputFile} CACHED 2 ]
    if { ${v:mapped_output} } {
        set tcltmp:init_rc 2
    } else {
        set tcltmp:init_rc 1
    }
    set v:output [ turbine::create_local_file_ref ${v:__filename:output} ${tcltmp:init_rc} ${v:mapped_output} ]
    turbine::c::log [ list exec: __v:novosortdir "--index" "--tmpdir" ${v:tmpdir} "--threads" ${v:thr} ${v:__filename:inputFile} "-o" ${v:__filename:output} [ dict create ] ]
    turbine::exec_external ${v:novosortdir} [ dict create ] "--index" "--tmpdir" ${v:tmpdir} "--threads" ${v:thr} ${v:__filename:inputFile} "-o" ${v:__filename:output}
    set v:3 [ expr { ! ${v:mapped_output} } ]
    turbine::store_file ${u:output} v:output ${v:3}
    turbine::decr_local_file_refcount v:output
    turbine::read_refcount_decr ${u:sortoptions} 1
}


proc f:find_files { u:output u:dir u:pattern v:loc_rank v:loc_strictness v:loc_accuracy } {
    turbine::c::log "function: find_files"
    # Var: $boolean v:mapped_output OPT_TEMPORARY
    turbine::read_refcount_incr ${u:dir} 1
    turbine::read_refcount_incr ${u:pattern} 1
    turbine::file_read_refcount_incr ${u:output} 1
    set v:mapped_output [ turbine::is_file_mapped ${u:output} ]
    set filename:output [ turbine::get_file_path ${u:output} ]
    if { ${v:mapped_output} } {
    } else {
        # Var: $string optf:output FILENAME_OF [file:output]
        set optf:output [ turbine::mktemp ]
        turbine::set_filename_val ${u:output} ${optf:output}
    }
    turbine::rule [ list ${filename:output} ${u:dir} ${u:pattern} ] "find_files-app-leaf1 {${filename:output}} ${v:mapped_output} {${u:dir}} {${u:output}} {${u:pattern}}" target ${v:loc_rank} strictness ${v:loc_strictness} accuracy ${v:loc_accuracy}
}


proc find_files-app-leaf1 { filename:output v:mapped_output u:dir u:output u:pattern } {
    # Var: $string v:dir VALUE_OF [string:dir] ./pipelinefunctions/miscellaneous.swift:find_files():17:43
    # Var: $string v:pattern VALUE_OF [string:pattern] ./pipelinefunctions/miscellaneous.swift:find_files():17:43
    # Var: $string v:__filename:output VALUE_OF [string:__filename:output] ./pipelinefunctions/miscellaneous.swift:find_files():17:43
    # Var: $file v:output VALUE_OF [file:output] ./pipelinefunctions/miscellaneous.swift:find_files():17:43
    # Var: $boolean v:3 EXPR_TEMPORARY ./pipelinefunctions/miscellaneous.swift:find_files():17:43
    set v:dir [ turbine::retrieve_string ${u:dir} CACHED 1 ]
    set v:pattern [ turbine::retrieve_string ${u:pattern} CACHED 1 ]
    set v:__filename:output [ turbine::retrieve_string ${filename:output} CACHED 1 ]
    if { ${v:mapped_output} } {
        set tcltmp:init_rc 2
    } else {
        set tcltmp:init_rc 1
    }
    set v:output [ turbine::create_local_file_ref ${v:__filename:output} ${tcltmp:init_rc} ${v:mapped_output} ]
    turbine::c::log [ list exec: "find" ${v:dir} "-name" ${v:pattern} [ dict create "stdout" ${v:__filename:output} ] ]
    turbine::exec_external "find" [ dict create "stdout" ${v:__filename:output} ] ${v:dir} "-name" ${v:pattern}
    set v:3 [ expr { ! ${v:mapped_output} } ]
    turbine::store_file ${u:output} v:output ${v:3}
    turbine::decr_local_file_refcount v:output
}

turbine::defaults
turbine::declare_custom_work_types COASTER
turbine::init $servers "Swift"
turbine::enable_read_refcount
adlb::declare_struct_type 16 s:location [ list "rank" integer "strictness" string "accuracy" string ]
turbine::check_constants "WORKER\[WORKER\]" ${turbine::WORK_TASK} 0 "CONTROL" ${turbine::WORK_TASK} 0 "ADLB_RANK_ANY" ${adlb::RANK_ANY} -100
adlb::add_debug_symbol 1 "__c:s_-3" ""
adlb::add_debug_symbol 2 "__c:s__GATKCombi-2" ""
adlb::add_debug_symbol 3 "__c:s_compressio" ""
adlb::add_debug_symbol 4 "__c:s_markDuplic" ""
adlb::add_debug_symbol 5 "__c:s_sknownSite" ""
adlb::add_debug_symbol 6 "__c:s_sknown_g" ""
adlb::add_debug_symbol 7 "__c:s_svariant_g" ""
adlb::add_debug_symbol 8 "__c:s_u" ""
adlb::add_debug_symbol 9 "__t:7" "VCcallingPipeline:27:33"
adlb::add_debug_symbol 10 "__t:625" "VCcallingPipeline:218:16"
adlb::add_debug_symbol 11 "__t:626" "VCcallingPipeline:218:40"
adlb::add_debug_symbol 12 "__t:627" "VCcallingPipeline:218:23"
adlb::add_debug_symbol 13 "__t:629" "VCcallingPipeline:218:41"
adlb::add_debug_symbol 14 "__t:634" "VCcallingPipeline:219:27"
adlb::add_debug_symbol 15 "samples_processing_done" "VCcallingPipeline:29:0"
adlb::add_debug_symbol 16 "jointVCF" "VCcallingPipeline:218:80"
adlb::add_debug_symbol 17 "configFile" "VCcallingPipeline:22:0"
adlb::add_debug_symbol 18 "sampleInfoFile" "VCcallingPipeline:27:0"
adlb::add_debug_symbol 19 "vars" "VCcallingPipeline:25:0"
adlb::add_debug_symbol 20 "variantFiles" "VCcallingPipeline:219:42"
adlb::add_debug_symbol 21 "__t:11" "VCcallingPipeline:__entry():39:88"
adlb::add_debug_symbol 22 "__t:13" "VCcallingPipeline:__entry():39:106"
adlb::add_debug_symbol 23 "__t:15" "VCcallingPipeline:__entry():39:148"
adlb::add_debug_symbol 24 "__t:35" "VCcallingPipeline:__entry():52:14"
adlb::add_debug_symbol 25 "__t:80" "VCcallingPipeline:__entry():64:5"
adlb::add_debug_symbol 26 "__t:234" "VCcallingPipeline:__entry():111:54"
adlb::add_debug_symbol 27 "__t:239" "VCcallingPipeline:__entry():112:55"
adlb::add_debug_symbol 28 "__t:242" "VCcallingPipeline:__entry():114:31"
adlb::add_debug_symbol 29 "__t:363" "VCcallingPipeline:__entry():146:17"
adlb::add_debug_symbol 30 "__t:79" "VCcallingPipeline:__entry():64:32"
adlb::add_debug_symbol 31 "__t:262" "VCcallingPipeline:__entry():124:17"
adlb::add_debug_symbol 32 "indices" "VCcallingPipeline:__entry():146:9"
adlb::add_debug_symbol 33 "keyValuePair" "pipelinefunctions.miscellaneous:getConfigVariables():8:16"
adlb::add_debug_symbol 34 "varlist" "VCcallingPipeline:__entry():223:1"
adlb::add_debug_symbol 35 "__t:655" "VCcallingPipeline:__entry():223:48"
adlb::add_debug_symbol 36 "__t:661" "VCcallingPipeline:__entry():224:27"
adlb::add_debug_symbol 37 "__t:665" "VCcallingPipeline:__entry():224:51"
adlb::add_debug_symbol 38 "__t:669" "VCcallingPipeline:__entry():224:92"
adlb::add_debug_symbol 39 "__t:671" "VCcallingPipeline:__entry():224:113"
adlb::add_debug_symbol 40 "sampleInfo" "VCcallingPipeline:__entry():34:1"
adlb::add_debug_symbol 41 "read1" "VCcallingPipeline:__entry():36:1"
adlb::add_debug_symbol 42 "read2" "VCcallingPipeline:__entry():37:1"
adlb::add_debug_symbol 43 "rgheader" "VCcallingPipeline:__entry():39:1"
adlb::add_debug_symbol 44 "VarcallDir" "VCcallingPipeline:__entry():43:1"
adlb::add_debug_symbol 45 "RealignDir" "VCcallingPipeline:__entry():44:1"
adlb::add_debug_symbol 46 "__t:26" "VCcallingPipeline:__entry():48:22"
adlb::add_debug_symbol 47 "dedupsortedbam" "VCcallingPipeline:__entry():48:71"
adlb::add_debug_symbol 48 "__t:31" "VCcallingPipeline:__entry():49:15"
adlb::add_debug_symbol 49 "outbam" "VCcallingPipeline:__entry():49:46"
adlb::add_debug_symbol 50 "__t:33" "VCcallingPipeline:__entry():50:19"
adlb::add_debug_symbol 51 "rawvariant" "VCcallingPipeline:__entry():50:50"
adlb::add_debug_symbol 52 "qcfile" "VCcallingPipeline:__entry():52:69"
adlb::add_debug_symbol 53 "mergedbam" "VCcallingPipeline:__entry():53:78"
adlb::add_debug_symbol 54 "mergedvariant" "VCcallingPipeline:__entry():54:82"
adlb::add_debug_symbol 55 "flagstats" "VCcallingPipeline:__entry():57:87"
adlb::add_debug_symbol 56 "__t:64" "VCcallingPipeline:__entry():60:18"
adlb::add_debug_symbol 57 "alignedsam" "VCcallingPipeline:__entry():60:63"
adlb::add_debug_symbol 58 "__t:70" "VCcallingPipeline:__entry():61:45"
adlb::add_debug_symbol 59 "chr_bamListfile" "VCcallingPipeline:__entry():61:57"
adlb::add_debug_symbol 60 "chr_vcfListfile" "VCcallingPipeline:__entry():62:57"
adlb::add_debug_symbol 61 "stat" "VCcallingPipeline:__entry():116:1"
adlb::add_debug_symbol 62 "__t:244" "VCcallingPipeline:__entry():117:14"
adlb::add_debug_symbol 63 "__t:247" "VCcallingPipeline:__entry():118:13"
adlb::add_debug_symbol 64 "__t:250" "VCcallingPipeline:__entry():119:12"
adlb::add_debug_symbol 65 "perc_mapped" "VCcallingPipeline:__entry():122:12"
adlb::add_debug_symbol 66 "__t:257" "VCcallingPipeline:__entry():122:38"
adlb::add_debug_symbol 67 "chromosomes_processing_done" "VCcallingPipeline:__entry():147:1"
adlb::add_debug_symbol 68 "chr_bamList" "VCcallingPipeline:__entry():201:1"
adlb::add_debug_symbol 69 "chr_vcfList" "VCcallingPipeline:__entry():208:1"
adlb::add_debug_symbol 70 "__t:589" "VCcallingPipeline:__entry():208:52"
adlb::add_debug_symbol 71 "__t:85" "VCcallingPipeline:__entry():66:17"
adlb::add_debug_symbol 72 "dedupsam" "VCcallingPipeline:__entry():66:63"
adlb::add_debug_symbol 73 "dedupbam" "VCcallingPipeline:__entry():67:66"
adlb::add_debug_symbol 74 "__t:95" "VCcallingPipeline:__entry():69:23"
adlb::add_debug_symbol 75 "__t:97" "VCcallingPipeline:__entry():69:53"
adlb::add_debug_symbol 76 "__t:99" "VCcallingPipeline:__entry():69:71"
adlb::add_debug_symbol 77 "__t:101" "VCcallingPipeline:__entry():69:93"
adlb::add_debug_symbol 78 "__t:102" "VCcallingPipeline:__entry():69:104"
adlb::add_debug_symbol 79 "__t:104" "VCcallingPipeline:__entry():70:24"
adlb::add_debug_symbol 80 "__t:112" "VCcallingPipeline:__entry():76:28"
adlb::add_debug_symbol 81 "__t:113" "VCcallingPipeline:__entry():76:35"
adlb::add_debug_symbol 82 "alignedbam" "VCcallingPipeline:__entry():80:67"
adlb::add_debug_symbol 83 "__t:134" "VCcallingPipeline:__entry():83:26"
adlb::add_debug_symbol 84 "alignedsortedbam" "VCcallingPipeline:__entry():83:75"
adlb::add_debug_symbol 85 "__t:139" "VCcallingPipeline:__entry():84:21"
adlb::add_debug_symbol 86 "metricsfile" "VCcallingPipeline:__entry():84:70"
adlb::add_debug_symbol 87 "__t:144" "VCcallingPipeline:__entry():85:24"
adlb::add_debug_symbol 88 "__t:146" "VCcallingPipeline:__entry():85:54"
adlb::add_debug_symbol 89 "__t:148" "VCcallingPipeline:__entry():85:72"
adlb::add_debug_symbol 90 "__t:150" "VCcallingPipeline:__entry():85:94"
adlb::add_debug_symbol 91 "__t:151" "VCcallingPipeline:__entry():85:105"
adlb::add_debug_symbol 92 "__t:159" "VCcallingPipeline:__entry():88:31"
adlb::add_debug_symbol 93 "__t:160" "VCcallingPipeline:__entry():88:38"
adlb::add_debug_symbol 94 "__t:170" "VCcallingPipeline:__entry():89:39"
adlb::add_debug_symbol 95 "__t:172" "VCcallingPipeline:__entry():89:56"
adlb::add_debug_symbol 96 "__t:179" "VCcallingPipeline:__entry():94:7"
adlb::add_debug_symbol 97 "__t:215" "VCcallingPipeline:__entry():103:30"
adlb::add_debug_symbol 98 "__t:216" "VCcallingPipeline:__entry():103:37"
adlb::add_debug_symbol 99 "__t:222" "VCcallingPipeline:__entry():103:102"
adlb::add_debug_symbol 100 "__t:223" "VCcallingPipeline:__entry():103:113"
adlb::add_debug_symbol 101 "__t:182" "VCcallingPipeline:__entry():95:25"
adlb::add_debug_symbol 102 "__t:184" "VCcallingPipeline:__entry():95:55"
adlb::add_debug_symbol 103 "__t:186" "VCcallingPipeline:__entry():95:73"
adlb::add_debug_symbol 104 "__t:188" "VCcallingPipeline:__entry():95:95"
adlb::add_debug_symbol 105 "__t:189" "VCcallingPipeline:__entry():95:106"
adlb::add_debug_symbol 106 "__t:198" "VCcallingPipeline:__entry():98:34"
adlb::add_debug_symbol 107 "__t:202" "VCcallingPipeline:__entry():98:87"
adlb::add_debug_symbol 108 "__t:204" "VCcallingPipeline:__entry():98:111"
adlb::add_debug_symbol 109 "__t:206" "VCcallingPipeline:__entry():98:136"
adlb::add_debug_symbol 110 "__t:207" "VCcallingPipeline:__entry():98:147"
adlb::add_debug_symbol 111 "__t:554" "VCcallingPipeline:__entry():195:44"
adlb::add_debug_symbol 112 "__t:556" "VCcallingPipeline:__entry():196:44"
adlb::add_debug_symbol 113 "__t:571" "VCcallingPipeline:__entry():202:27"
adlb::add_debug_symbol 114 "__t:578" "VCcallingPipeline:__entry():202:105"
adlb::add_debug_symbol 115 "__t:291" "VCcallingPipeline:__entry():128:205"
adlb::add_debug_symbol 116 "__t:318" "VCcallingPipeline:__entry():131:209"
adlb::add_debug_symbol 117 "__t:345" "VCcallingPipeline:__entry():135:218"
adlb::add_debug_symbol 118 "__t:595" "VCcallingPipeline:__entry():209:28"
adlb::add_debug_symbol 119 "__t:599" "VCcallingPipeline:__entry():209:52"
adlb::add_debug_symbol 120 "__t:603" "VCcallingPipeline:__entry():209:93"
adlb::add_debug_symbol 121 "__t:605" "VCcallingPipeline:__entry():209:114"
adlb::add_debug_symbol 122 "__t:607" "VCcallingPipeline:__entry():209:153"
adlb::add_debug_symbol 123 "__t:610" "VCcallingPipeline:__entry():209:154"
adlb::add_debug_symbol 124 "__t:615" "VCcallingPipeline:__entry():211:32"
adlb::add_debug_symbol 125 "__t:616" "VCcallingPipeline:__entry():211:37"
adlb::add_debug_symbol 126 "__t:415" "VCcallingPipeline:__entry():166:85"
adlb::add_debug_symbol 127 "__t:422" "VCcallingPipeline:__entry():170:35"
adlb::add_debug_symbol 128 "__t:424" "VCcallingPipeline:__entry():170:56"
adlb::add_debug_symbol 129 "__t:458" "VCcallingPipeline:__entry():179:39"
adlb::add_debug_symbol 130 "__t:462" "VCcallingPipeline:__entry():179:63"
adlb::add_debug_symbol 131 "__t:468" "VCcallingPipeline:__entry():179:125"
adlb::add_debug_symbol 132 "__t:503" "VCcallingPipeline:__entry():182:223"
adlb::add_debug_symbol 133 "__t:414" "VCcallingPipeline:__entry():166:74"
adlb::add_debug_symbol 134 "__t:465" "VCcallingPipeline:__entry():179:124"
adlb::add_debug_symbol 135 "__t:500" "VCcallingPipeline:__entry():182:222"
adlb::add_debug_symbol 136 "__t:420" "VCcallingPipeline:__entry():170:28"
adlb::add_debug_symbol 137 "__t:460" "VCcallingPipeline:__entry():179:56"
adlb::add_debug_symbol 138 "chrdedupsortedbam" "VCcallingPipeline:__entry():153:68"
adlb::add_debug_symbol 139 "realignedbam" "VCcallingPipeline:__entry():154:63"
adlb::add_debug_symbol 140 "recalibratedbam" "VCcallingPipeline:__entry():155:66"
adlb::add_debug_symbol 141 "intervals" "VCcallingPipeline:__entry():156:61"
adlb::add_debug_symbol 142 "recalreport" "VCcallingPipeline:__entry():157:63"
adlb::add_debug_symbol 143 "gvcfvariant" "VCcallingPipeline:__entry():158:62"
adlb::add_debug_symbol 144 "recalfiles" "VCcallingPipeline:__entry():160:65"
adlb::add_debug_symbol 145 "realfiles" "VCcallingPipeline:__entry():161:64"
adlb::add_debug_symbol 146 "ploidy" "VCcallingPipeline:__entry():164:3"
adlb::add_debug_symbol 147 "__t:417" "VCcallingPipeline:__entry():166:104"
adlb::add_debug_symbol 148 "__t:427" "VCcallingPipeline:__entry():170:80"
adlb::add_debug_symbol 149 "recalparmsindels" "VCcallingPipeline:__entry():171:3"
adlb::add_debug_symbol 150 "__t:433" "VCcallingPipeline:__entry():171:59"
adlb::add_debug_symbol 151 "realparms" "VCcallingPipeline:__entry():174:3"
adlb::add_debug_symbol 152 "__t:452" "VCcallingPipeline:__entry():174:52"
adlb::add_debug_symbol 153 "__t:551" "VCcallingPipeline:__entry():188:30"
adlb::add_debug_symbol 154 "__t:552" "VCcallingPipeline:__entry():188:35"
turbine::start swift:main swift:constants
turbine::finalize
