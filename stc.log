DEBUG Running cpp: cpp -undef VCcallingPipeline.swift /tmp/stc-preproc7860318451911849934.swift -I /usr/local/src/swift-t-1.1/turbine/export -I .
DEBUG Preprocessor exit code: 0
DEBUG Preprocessor stderr: 
INFO  STC starting: 2016/11/28 02:18:25
DEBUG stc-preproc7860318451911849934.swift:0: Resolved builtins to /usr/local/src/swift-t-1.1/turbine/export/builtins.swift
DEBUG stc-preproc7860318451911849934.swift:0: Loading new module builtins
DEBUG stc-preproc7860318451911849934.swift:0: printTree:
PROGRAM
  DEFINE_NEW_TYPE
    external
    STANDALONE_TYPE
      void
  DEFINE_BUILTIN_FUNCTION
    makeVoid
    TYPE_PARAMETERS
    FORMAL_ARGUMENT_LIST
      DECLARATION
        MULTI_TYPE
          void
        DECLARE_VARIABLE_REST
          o
    FORMAL_ARGUMENT_LIST
      DECLARATION
        MULTI_TYPE
          int
          float
          string
          boolean
          void
          file
        DECLARE_VARIABLE_REST
          v
        ...
    TCL_PACKAGE
      "turbine"
      "0.0.2"
    TCL_FUN_REF
      "make_void"
    ANNOTATION
      pure
  DEFINE_BUILTIN_FUNCTION
    make_void
    TYPE_PARAMETERS
    FORMAL_ARGUMENT_LIST
      DECLARATION
        MULTI_TYPE
          void
        DECLARE_VARIABLE_REST
          o
    FORMAL_ARGUMENT_LIST
      DECLARATION
        MULTI_TYPE
          int
          float
          string
          boolean
          void
          file
        DECLARE_VARIABLE_REST
          v
        ...
    TCL_PACKAGE
      "turbine"
      "0.0.2"
    TCL_FUN_REF
      "make_void"
    ANNOTATION
      pure
  DEFINE_BUILTIN_FUNCTION
    propagate
    TYPE_PARAMETERS
    FORMAL_ARGUMENT_LIST
      DECLARATION
        MULTI_TYPE
          void
        DECLARE_VARIABLE_REST
          o
    FORMAL_ARGUMENT_LIST
      DECLARATION
        MULTI_TYPE
          int
          float
          string
          boolean
          void
          file
        DECLARE_VARIABLE_REST
          v
        ...
    TCL_PACKAGE
      "turbine"
      "0.0.2"
    TCL_FUN_REF
      "make_void"
    ANNOTATION
      pure
  DECLARATION
    LocationStrictness
    DECLARE_ASSIGN
      DECLARE_VARIABLE_REST
        HARD
      CALL_FUNCTION
        LocationStrictness
        ARGUMENT_LIST
          STRING_LITERAL
            "HARD"
  DECLARATION
    LocationStrictness
    DECLARE_ASSIGN
      DECLARE_VARIABLE_REST
        SOFT
      CALL_FUNCTION
        LocationStrictness
        ARGUMENT_LIST
          STRING_LITERAL
            "SOFT"
  DECLARATION
    LocationAccuracy
    DECLARE_ASSIGN
      DECLARE_VARIABLE_REST
        RANK
      CALL_FUNCTION
        LocationAccuracy
        ARGUMENT_LIST
          STRING_LITERAL
            "RANK"
  DECLARATION
    LocationAccuracy
    DECLARE_ASSIGN
      DECLARE_VARIABLE_REST
        NODE
      CALL_FUNCTION
        LocationAccuracy
        ARGUMENT_LIST
          STRING_LITERAL
            "NODE"
  pragma
    appexecdef
    VARIABLE
      COASTER
    STRING_LITERAL
      "turbine"
    STRING_LITERAL
      "0.8.0"
    STRING_LITERAL
      "turbine::async_exec_coaster <<cmd>> <<args>> <<stage_in>> <<stage_out>> <<props>> <<success>> <<failure>>"
  DEFINE_BUILTIN_FUNCTION
    pow_integer
    TYPE_PARAMETERS
    FORMAL_ARGUMENT_LIST
      DECLARATION
        MULTI_TYPE
          float
        DECLARE_VARIABLE_REST
          o
    FORMAL_ARGUMENT_LIST
      DECLARATION
        MULTI_TYPE
          int
        DECLARE_VARIABLE_REST
          base
      DECLARATION
        MULTI_TYPE
          int
        DECLARE_VARIABLE_REST
          exponent
    TCL_PACKAGE
      "turbine"
      "0.0.2"
    TCL_FUN_REF
      "pow_integer"
    ANNOTATION
      pure
    ANNOTATION
      minmax
    ANNOTATION
      builtin_op
      POW_INT
  DEFINE_BUILTIN_FUNCTION
    pow
    TYPE_PARAMETERS
    FORMAL_ARGUMENT_LIST
      DECLARATION
        MULTI_TYPE
          float
        DECLARE_VARIABLE_REST
          o
    FORMAL_ARGUMENT_LIST
      DECLARATION
        MULTI_TYPE
          int
        DECLARE_VARIABLE_REST
          base
      DECLARATION
        MULTI_TYPE
          int
        DECLARE_VARIABLE_REST
          exponent
    TCL_PACKAGE
      "turbine"
      "0.0.2"
    TCL_FUN_REF
      "pow_integer"
    ANNOTATION
      pure
    ANNOTATION
      minmax
    ANNOTATION
      builtin_op
      POW_INT
  DEFINE_BUILTIN_FUNCTION
    pow_float
    TYPE_PARAMETERS
    FORMAL_ARGUMENT_LIST
      DECLARATION
        MULTI_TYPE
          float
        DECLARE_VARIABLE_REST
          o
    FORMAL_ARGUMENT_LIST
      DECLARATION
        MULTI_TYPE
          float
        DECLARE_VARIABLE_REST
          base
      DECLARATION
        MULTI_TYPE
          float
        DECLARE_VARIABLE_REST
          exponent
    TCL_PACKAGE
      "turbine"
      "0.0.2"
    TCL_FUN_REF
      "pow_float"
    ANNOTATION
      pure
    ANNOTATION
      builtin_op
      POW_FLOAT
  DEFINE_BUILTIN_FUNCTION
    pow
    TYPE_PARAMETERS
    FORMAL_ARGUMENT_LIST
      DECLARATION
        MULTI_TYPE
          float
        DECLARE_VARIABLE_REST
          o
    FORMAL_ARGUMENT_LIST
      DECLARATION
        MULTI_TYPE
          float
        DECLARE_VARIABLE_REST
          base
      DECLARATION
        MULTI_TYPE
          float
        DECLARE_VARIABLE_REST
          exponent
    TCL_PACKAGE
      "turbine"
      "0.0.2"
    TCL_FUN_REF
      "pow_float"
    ANNOTATION
      pure
    ANNOTATION
      builtin_op
      POW_FLOAT
  DEFINE_BUILTIN_FUNCTION
    strcat
    TYPE_PARAMETERS
    FORMAL_ARGUMENT_LIST
      DECLARATION
        MULTI_TYPE
          string
        DECLARE_VARIABLE_REST
          o
    FORMAL_ARGUMENT_LIST
      DECLARATION
        MULTI_TYPE
          string
          int
          float
        DECLARE_VARIABLE_REST
          args
        ...
    TCL_PACKAGE
      "turbine"
      "0.0.2"
    TCL_FUN_REF
      "strcat"
    ANNOTATION
      pure
    ANNOTATION
      builtin_op
      STRCAT
  DEFINE_BUILTIN_FUNCTION
    length
    TYPE_PARAMETERS
    FORMAL_ARGUMENT_LIST
      DECLARATION
        MULTI_TYPE
          int
        DECLARE_VARIABLE_REST
          n
    FORMAL_ARGUMENT_LIST
      DECLARATION
        MULTI_TYPE
          string
        DECLARE_VARIABLE_REST
          s
    TCL_PACKAGE
      "turbine"
      "0.0.2"
    INLINE_TCL
      "set <<n>> [ string length <<s>> ]"
    ANNOTATION
      pure
  DEFINE_BUILTIN_FUNCTION
    dircat
    TYPE_PARAMETERS
    FORMAL_ARGUMENT_LIST
      DECLARATION
        MULTI_TYPE
          string
        DECLARE_VARIABLE_REST
          o
    FORMAL_ARGUMENT_LIST
      DECLARATION
        MULTI_TYPE
          string
        DECLARE_VARIABLE_REST
          args
        ...
    TCL_PACKAGE
      "turbine"
      "0.0.2"
    TCL_FUN_REF
      "dircat"
    ANNOTATION
      pure
    ANNOTATION
      builtin_op
      DIRCAT
  DEFINE_BUILTIN_FUNCTION
    xor
    TYPE_PARAMETERS
    FORMAL_ARGUMENT_LIST
      DECLARATION
        MULTI_TYPE
          boolean
        DECLARE_VARIABLE_REST
          o
    FORMAL_ARGUMENT_LIST
      DECLARATION
        MULTI_TYPE
          boolean
        DECLARE_VARIABLE_REST
          i1
      DECLARATION
        MULTI_TYPE
          boolean
        DECLARE_VARIABLE_REST
          i2
    TCL_PACKAGE
      "turbine"
      "0.0.2"
    TCL_FUN_REF
      "neq_integer"
    ANNOTATION
      pure
    ANNOTATION
      commutative
    ANNOTATION
      builtin_op
      XOR
  DEFINE_BUILTIN_FUNCTION
    max_integer
    TYPE_PARAMETERS
    FORMAL_ARGUMENT_LIST
      DECLARATION
        MULTI_TYPE
          int
        DECLARE_VARIABLE_REST
          o
    FORMAL_ARGUMENT_LIST
      DECLARATION
        MULTI_TYPE
          int
        DECLARE_VARIABLE_REST
          i1
      DECLARATION
        MULTI_TYPE
          int
        DECLARE_VARIABLE_REST
          i2
    TCL_PACKAGE
      "turbine"
      "0.0.2"
    TCL_FUN_REF
      "max_integer"
    ANNOTATION
      pure
    ANNOTATION
      minmax
    ANNOTATION
      builtin_op
      MAX_INT
  DEFINE_BUILTIN_FUNCTION
    max
    TYPE_PARAMETERS
    FORMAL_ARGUMENT_LIST
      DECLARATION
        MULTI_TYPE
          int
        DECLARE_VARIABLE_REST
          o
    FORMAL_ARGUMENT_LIST
      DECLARATION
        MULTI_TYPE
          int
        DECLARE_VARIABLE_REST
          i1
      DECLARATION
        MULTI_TYPE
          int
        DECLARE_VARIABLE_REST
          i2
    TCL_PACKAGE
      "turbine"
      "0.0.2"
    TCL_FUN_REF
      "max_integer"
    ANNOTATION
      pure
    ANNOTATION
      minmax
    ANNOTATION
      builtin_op
      MAX_INT
  DEFINE_BUILTIN_FUNCTION
    min_integer
    TYPE_PARAMETERS
    FORMAL_ARGUMENT_LIST
      DECLARATION
        MULTI_TYPE
          int
        DECLARE_VARIABLE_REST
          o
    FORMAL_ARGUMENT_LIST
      DECLARATION
        MULTI_TYPE
          int
        DECLARE_VARIABLE_REST
          i1
      DECLARATION
        MULTI_TYPE
          int
        DECLARE_VARIABLE_REST
          i2
    TCL_PACKAGE
      "turbine"
      "0.0.2"
    TCL_FUN_REF
      "min_integer"
    ANNOTATION
      pure
    ANNOTATION
      minmax
    ANNOTATION
      builtin_op
      MIN_INT
  DEFINE_BUILTIN_FUNCTION
    min
    TYPE_PARAMETERS
    FORMAL_ARGUMENT_LIST
      DECLARATION
        MULTI_TYPE
          int
        DECLARE_VARIABLE_REST
          o
    FORMAL_ARGUMENT_LIST
      DECLARATION
        MULTI_TYPE
          int
        DECLARE_VARIABLE_REST
          i1
      DECLARATION
        MULTI_TYPE
          int
        DECLARE_VARIABLE_REST
          i2
    TCL_PACKAGE
      "turbine"
      "0.0.2"
    TCL_FUN_REF
      "min_integer"
    ANNOTATION
      pure
    ANNOTATION
      minmax
    ANNOTATION
      builtin_op
      MIN_INT
  DEFINE_BUILTIN_FUNCTION
    max_float
    TYPE_PARAMETERS
    FORMAL_ARGUMENT_LIST
      DECLARATION
        MULTI_TYPE
          float
        DECLARE_VARIABLE_REST
          o
    FORMAL_ARGUMENT_LIST
      DECLARATION
        MULTI_TYPE
          float
        DECLARE_VARIABLE_REST
          i1
      DECLARATION
        MULTI_TYPE
          float
        DECLARE_VARIABLE_REST
          i2
    TCL_PACKAGE
      "turbine"
      "0.0.2"
    TCL_FUN_REF
      "max_float"
    ANNOTATION
      pure
    ANNOTATION
      minmax
    ANNOTATION
      builtin_op
      MAX_FLOAT
  DEFINE_BUILTIN_FUNCTION
    max
    TYPE_PARAMETERS
    FORMAL_ARGUMENT_LIST
      DECLARATION
        MULTI_TYPE
          float
        DECLARE_VARIABLE_REST
          o
    FORMAL_ARGUMENT_LIST
      DECLARATION
        MULTI_TYPE
          float
        DECLARE_VARIABLE_REST
          i1
      DECLARATION
        MULTI_TYPE
          float
        DECLARE_VARIABLE_REST
          i2
    TCL_PACKAGE
      "turbine"
      "0.0.2"
    TCL_FUN_REF
      "max_float"
    ANNOTATION
      pure
    ANNOTATION
      minmax
    ANNOTATION
      builtin_op
      MAX_FLOAT
  DEFINE_BUILTIN_FUNCTION
    min_float
    TYPE_PARAMETERS
    FORMAL_ARGUMENT_LIST
      DECLARATION
        MULTI_TYPE
          float
        DECLARE_VARIABLE_REST
          o
    FORMAL_ARGUMENT_LIST
      DECLARATION
        MULTI_TYPE
          float
        DECLARE_VARIABLE_REST
          i1
      DECLARATION
        MULTI_TYPE
          float
        DECLARE_VARIABLE_REST
          i2
    TCL_PACKAGE
      "turbine"
      "0.0.2"
    TCL_FUN_REF
      "min_float"
    ANNOTATION
      pure
    ANNOTATION
      minmax
    ANNOTATION
      builtin_op
      MIN_FLOAT
  DEFINE_BUILTIN_FUNCTION
    min
    TYPE_PARAMETERS
    FORMAL_ARGUMENT_LIST
      DECLARATION
        MULTI_TYPE
          float
        DECLARE_VARIABLE_REST
          o
    FORMAL_ARGUMENT_LIST
      DECLARATION
        MULTI_TYPE
          float
        DECLARE_VARIABLE_REST
          i1
      DECLARATION
        MULTI_TYPE
          float
        DECLARE_VARIABLE_REST
          i2
    TCL_PACKAGE
      "turbine"
      "0.0.2"
    TCL_FUN_REF
      "min_float"
    ANNOTATION
      pure
    ANNOTATION
      minmax
    ANNOTATION
      builtin_op
      MIN_FLOAT
  DEFINE_BUILTIN_FUNCTION
    int2string
    TYPE_PARAMETERS
    FORMAL_ARGUMENT_LIST
      DECLARATION
        MULTI_TYPE
          string
        DECLARE_VARIABLE_REST
          o
    FORMAL_ARGUMENT_LIST
      DECLARATION
        MULTI_TYPE
          int
        DECLARE_VARIABLE_REST
          i
    TCL_PACKAGE
      "turbine"
      "0.0.2"
    TCL_FUN_REF
      "int2string"
    ANNOTATION
      pure
    ANNOTATION
      builtin_op
      INTTOSTR
  DEFINE_BUILTIN_FUNCTION
    fromint
    TYPE_PARAMETERS
    FORMAL_ARGUMENT_LIST
      DECLARATION
        MULTI_TYPE
          string
        DECLARE_VARIABLE_REST
          o
    FORMAL_ARGUMENT_LIST
      DECLARATION
        MULTI_TYPE
          int
        DECLARE_VARIABLE_REST
          i
    TCL_PACKAGE
      "turbine"
      "0.0.2"
    TCL_FUN_REF
      "int2string"
    ANNOTATION
      pure
    ANNOTATION
      builtin_op
      INTTOSTR
  DEFINE_BUILTIN_FUNCTION
    toString
    TYPE_PARAMETERS
    FORMAL_ARGUMENT_LIST
      DECLARATION
        MULTI_TYPE
          string
        DECLARE_VARIABLE_REST
          o
    FORMAL_ARGUMENT_LIST
      DECLARATION
        MULTI_TYPE
          int
        DECLARE_VARIABLE_REST
          i
    TCL_PACKAGE
      "turbine"
      "0.0.2"
    TCL_FUN_REF
      "int2string"
    ANNOTATION
      pure
    ANNOTATION
      builtin_op
      INTTOSTR
  DEFINE_BUILTIN_FUNCTION
    float2string
    TYPE_PARAMETERS
    FORMAL_ARGUMENT_LIST
      DECLARATION
        MULTI_TYPE
          string
        DECLARE_VARIABLE_REST
          o
    FORMAL_ARGUMENT_LIST
      DECLARATION
        MULTI_TYPE
          float
        DECLARE_VARIABLE_REST
          i
    TCL_PACKAGE
      "turbine"
      "0.0.2"
    TCL_FUN_REF
      "float2string"
    ANNOTATION
      pure
    ANNOTATION
      builtin_op
      FLOATTOSTR
  DEFINE_BUILTIN_FUNCTION
    fromfloat
    TYPE_PARAMETERS
    FORMAL_ARGUMENT_LIST
      DECLARATION
        MULTI_TYPE
          string
        DECLARE_VARIABLE_REST
          o
    FORMAL_ARGUMENT_LIST
      DECLARATION
        MULTI_TYPE
          float
        DECLARE_VARIABLE_REST
          i
    TCL_PACKAGE
      "turbine"
      "0.0.2"
    TCL_FUN_REF
      "float2string"
    ANNOTATION
      pure
    ANNOTATION
      builtin_op
      FLOATTOSTR
  DEFINE_BUILTIN_FUNCTION
    toString
    TYPE_PARAMETERS
    FORMAL_ARGUMENT_LIST
      DECLARATION
        MULTI_TYPE
          string
        DECLARE_VARIABLE_REST
          o
    FORMAL_ARGUMENT_LIST
      DECLARATION
        MULTI_TYPE
          float
        DECLARE_VARIABLE_REST
          i
    TCL_PACKAGE
      "turbine"
      "0.0.2"
    TCL_FUN_REF
      "float2string"
    ANNOTATION
      pure
    ANNOTATION
      builtin_op
      FLOATTOSTR
  DEFINE_BUILTIN_FUNCTION
    toString
    TYPE_PARAMETERS
    FORMAL_ARGUMENT_LIST
      DECLARATION
        MULTI_TYPE
          string
        DECLARE_VARIABLE_REST
          o
    FORMAL_ARGUMENT_LIST
      DECLARATION
        MULTI_TYPE
          boolean
        DECLARE_VARIABLE_REST
          i
    TCL_PACKAGE
      "turbine"
      "0.8.0"
    INLINE_TCL
      "set <<o>> [ turbine::bool2string_impl <<i>> ]"
    ANNOTATION
      pure
  DEFINE_BUILTIN_FUNCTION
    string2int
    TYPE_PARAMETERS
    FORMAL_ARGUMENT_LIST
      DECLARATION
        MULTI_TYPE
          int
        DECLARE_VARIABLE_REST
          o
    FORMAL_ARGUMENT_LIST
      DECLARATION
        MULTI_TYPE
          string
        DECLARE_VARIABLE_REST
          i
      DECLARATION
        MULTI_TYPE
          int
        DECLARE_VARIABLE_REST
          base
        INT_LITERAL
          10
    TCL_PACKAGE
      "turbine"
      "0.0.2"
    TCL_FUN_REF
      "string2int"
    ANNOTATION
      pure
    ANNOTATION
      builtin_op
      PARSE_INT
  DEFINE_FUNCTION
    toint
    TYPE_PARAMETERS
    FORMAL_ARGUMENT_LIST
      DECLARATION
        MULTI_TYPE
          int
        DECLARE_VARIABLE_REST
          o
    FORMAL_ARGUMENT_LIST
      DECLARATION
        MULTI_TYPE
          string
        DECLARE_VARIABLE_REST
          i
    BLOCK
      ASSIGN_EXPRESSION
        =
        IDENTIFIER_LIST
          ASSIGN_TARGET
            VARIABLE
              o
        CALL_FUNCTION
          parseInt
          ARGUMENT_LIST
            VARIABLE
              i
            INT_LITERAL
              10
    ANNOTATION
      pure
  DEFINE_BUILTIN_FUNCTION
    parseInt
    TYPE_PARAMETERS
    FORMAL_ARGUMENT_LIST
      DECLARATION
        MULTI_TYPE
          int
        DECLARE_VARIABLE_REST
          o
    FORMAL_ARGUMENT_LIST
      DECLARATION
        MULTI_TYPE
          string
        DECLARE_VARIABLE_REST
          i
      DECLARATION
        MULTI_TYPE
          int
        DECLARE_VARIABLE_REST
          base
        INT_LITERAL
          10
    TCL_PACKAGE
      "turbine"
      "0.0.2"
    TCL_FUN_REF
      "string2int"
    ANNOTATION
      pure
    ANNOTATION
      builtin_op
      PARSE_INT
  DEFINE_BUILTIN_FUNCTION
    string2float
    TYPE_PARAMETERS
    FORMAL_ARGUMENT_LIST
      DECLARATION
        MULTI_TYPE
          float
        DECLARE_VARIABLE_REST
          o
    FORMAL_ARGUMENT_LIST
      DECLARATION
        MULTI_TYPE
          string
        DECLARE_VARIABLE_REST
          i
    TCL_PACKAGE
      "turbine"
      "0.0.2"
    TCL_FUN_REF
      "string2float"
    ANNOTATION
      pure
    ANNOTATION
      builtin_op
      PARSE_FLOAT
  DEFINE_BUILTIN_FUNCTION
    tofloat
    TYPE_PARAMETERS
    FORMAL_ARGUMENT_LIST
      DECLARATION
        MULTI_TYPE
          float
        DECLARE_VARIABLE_REST
          o
    FORMAL_ARGUMENT_LIST
      DECLARATION
        MULTI_TYPE
          string
        DECLARE_VARIABLE_REST
          i
    TCL_PACKAGE
      "turbine"
      "0.0.2"
    TCL_FUN_REF
      "string2float"
    ANNOTATION
      pure
    ANNOTATION
      builtin_op
      PARSE_FLOAT
  DEFINE_BUILTIN_FUNCTION
    parseFloat
    TYPE_PARAMETERS
    FORMAL_ARGUMENT_LIST
      DECLARATION
        MULTI_TYPE
          float
        DECLARE_VARIABLE_REST
          o
    FORMAL_ARGUMENT_LIST
      DECLARATION
        MULTI_TYPE
          string
        DECLARE_VARIABLE_REST
          i
    TCL_PACKAGE
      "turbine"
      "0.0.2"
    TCL_FUN_REF
      "string2float"
    ANNOTATION
      pure
    ANNOTATION
      builtin_op
      PARSE_FLOAT
  DEFINE_BUILTIN_FUNCTION
    string2bool
    TYPE_PARAMETERS
    FORMAL_ARGUMENT_LIST
      DECLARATION
        MULTI_TYPE
          boolean
        DECLARE_VARIABLE_REST
          b
    FORMAL_ARGUMENT_LIST
      DECLARATION
        MULTI_TYPE
          string
        DECLARE_VARIABLE_REST
          s
    TCL_PACKAGE
      "turbine"
      "0.8.0"
    INLINE_TCL
      "set <<b>> [ turbine::string2bool_impl <<s>> ]"
    ANNOTATION
      pure
  DEFINE_BUILTIN_FUNCTION
    int2float
    TYPE_PARAMETERS
    FORMAL_ARGUMENT_LIST
      DECLARATION
        MULTI_TYPE
          float
        DECLARE_VARIABLE_REST
          o
    FORMAL_ARGUMENT_LIST
      DECLARATION
        MULTI_TYPE
          int
        DECLARE_VARIABLE_REST
          i
    TCL_PACKAGE
      "turbine"
      "0.0.2"
    TCL_FUN_REF
      "int2float"
    ANNOTATION
      pure
    ANNOTATION
      builtin_op
      INTTOFLOAT
  DEFINE_BUILTIN_FUNCTION
    itof
    TYPE_PARAMETERS
    FORMAL_ARGUMENT_LIST
      DECLARATION
        MULTI_TYPE
          float
        DECLARE_VARIABLE_REST
          o
    FORMAL_ARGUMENT_LIST
      DECLARATION
        MULTI_TYPE
          int
        DECLARE_VARIABLE_REST
          i
    TCL_PACKAGE
      "turbine"
      "0.0.2"
    TCL_FUN_REF
      "int2float"
    ANNOTATION
      pure
    ANNOTATION
      builtin_op
      INTTOFLOAT
  DEFINE_BUILTIN_FUNCTION
    toFloat
    TYPE_PARAMETERS
    FORMAL_ARGUMENT_LIST
      DECLARATION
        MULTI_TYPE
          float
        DECLARE_VARIABLE_REST
          o
    FORMAL_ARGUMENT_LIST
      DECLARATION
        MULTI_TYPE
          int
        DECLARE_VARIABLE_REST
          i
    TCL_PACKAGE
      "turbine"
      "0.0.2"
    TCL_FUN_REF
      "int2float"
    ANNOTATION
      pure
    ANNOTATION
      builtin_op
      INTTOFLOAT
  DEFINE_BUILTIN_FUNCTION
    float2int
    TYPE_PARAMETERS
    FORMAL_ARGUMENT_LIST
      DECLARATION
        MULTI_TYPE
          int
        DECLARE_VARIABLE_REST
          o
    FORMAL_ARGUMENT_LIST
      DECLARATION
        MULTI_TYPE
          float
        DECLARE_VARIABLE_REST
          i
    TCL_PACKAGE
      "turbine"
      "0.0.2"
    TCL_FUN_REF
      "float2int"
    ANNOTATION
      pure
    ANNOTATION
      builtin_op
      FLOATTOINT
  DEFINE_BUILTIN_FUNCTION
    toInt
    TYPE_PARAMETERS
    FORMAL_ARGUMENT_LIST
      DECLARATION
        MULTI_TYPE
          int
        DECLARE_VARIABLE_REST
          o
    FORMAL_ARGUMENT_LIST
      DECLARATION
        MULTI_TYPE
          float
        DECLARE_VARIABLE_REST
          i
    TCL_PACKAGE
      "turbine"
      "0.0.2"
    TCL_FUN_REF
      "float2int"
    ANNOTATION
      pure
    ANNOTATION
      builtin_op
      FLOATTOINT
  DEFINE_BUILTIN_FUNCTION
    ftoi
    TYPE_PARAMETERS
    FORMAL_ARGUMENT_LIST
      DECLARATION
        MULTI_TYPE
          int
        DECLARE_VARIABLE_REST
          o
    FORMAL_ARGUMENT_LIST
      DECLARATION
        MULTI_TYPE
          float
        DECLARE_VARIABLE_REST
          i
    TCL_PACKAGE
      "turbine"
      "0.0.2"
    TCL_FUN_REF
      "float2int"
    ANNOTATION
      pure
    ANNOTATION
      builtin_op
      FLOATTOINT
  DEFINE_BUILTIN_FUNCTION
    trace
    TYPE_PARAMETERS
    FORMAL_ARGUMENT_LIST
      DECLARATION
        MULTI_TYPE
          void
        DECLARE_VARIABLE_REST
          o
    FORMAL_ARGUMENT_LIST
      DECLARATION
        MULTI_TYPE
          int
          float
          string
          boolean
        DECLARE_VARIABLE_REST
          args
        ...
    TCL_PACKAGE
      "turbine"
      "0.0.2"
    TCL_FUN_REF
      "trace"
    INLINE_TCL
      "turbine::trace_impl <<args>>"
  DEFINE_BUILTIN_FUNCTION
    sleep_trace
    TYPE_PARAMETERS
    FORMAL_ARGUMENT_LIST
      DECLARATION
        MULTI_TYPE
          void
        DECLARE_VARIABLE_REST
          o
    FORMAL_ARGUMENT_LIST
      DECLARATION
        MULTI_TYPE
          float
        DECLARE_VARIABLE_REST
          secs
      DECLARATION
        MULTI_TYPE
          int
          float
          string
          boolean
        DECLARE_VARIABLE_REST
          args
        ...
    TCL_PACKAGE
      "turbine"
      "0.0.2"
    TCL_FUN_REF
      "sleep_trace"
  DEFINE_BUILTIN_FUNCTION
    range
    TYPE_PARAMETERS
    FORMAL_ARGUMENT_LIST
      DECLARATION
        MULTI_TYPE
          int
        DECLARE_VARIABLE_REST
          res
          ARRAY
    FORMAL_ARGUMENT_LIST
      DECLARATION
        MULTI_TYPE
          int
        DECLARE_VARIABLE_REST
          start
      DECLARATION
        MULTI_TYPE
          int
        DECLARE_VARIABLE_REST
          end
    TCL_PACKAGE
      "turbine"
      "0.0.2"
    TCL_FUN_REF
      "range"
    INLINE_TCL
      "set <<res>> [ turbine::build_range_dict <<start>> <<end>> 1 ]"
    ANNOTATION
      pure
    ANNOTATION
      implements
      range
  DEFINE_BUILTIN_FUNCTION
    range_step
    TYPE_PARAMETERS
    FORMAL_ARGUMENT_LIST
      DECLARATION
        MULTI_TYPE
          int
        DECLARE_VARIABLE_REST
          res
          ARRAY
    FORMAL_ARGUMENT_LIST
      DECLARATION
        MULTI_TYPE
          int
        DECLARE_VARIABLE_REST
          start
      DECLARATION
        MULTI_TYPE
          int
        DECLARE_VARIABLE_REST
          end
      DECLARATION
        MULTI_TYPE
          int
        DECLARE_VARIABLE_REST
          step
    TCL_PACKAGE
      "turbine"
      "0.0.2"
    TCL_FUN_REF
      "range_step"
    INLINE_TCL
      "set <<res>> [ turbine::build_range_dict <<start>> <<end>> <<step>> ]"
    ANNOTATION
      pure
    ANNOTATION
      implements
      range_step
  DEFINE_BUILTIN_FUNCTION
    range_float
    TYPE_PARAMETERS
    FORMAL_ARGUMENT_LIST
      DECLARATION
        MULTI_TYPE
          float
        DECLARE_VARIABLE_REST
          res
          ARRAY
    FORMAL_ARGUMENT_LIST
      DECLARATION
        MULTI_TYPE
          float
        DECLARE_VARIABLE_REST
          start
      DECLARATION
        MULTI_TYPE
          float
        DECLARE_VARIABLE_REST
          end
    TCL_PACKAGE
      "turbine"
      "0.0.2"
    TCL_FUN_REF
      "range_float"
    INLINE_TCL
      "set <<res>> [ turbine::build_range_float_dict <<start>> <<end>> 1.0 ]"
    ANNOTATION
      pure
    ANNOTATION
      implements
      range_float
  DEFINE_BUILTIN_FUNCTION
    range_float_step
    TYPE_PARAMETERS
    FORMAL_ARGUMENT_LIST
      DECLARATION
        MULTI_TYPE
          float
        DECLARE_VARIABLE_REST
          res
          ARRAY
    FORMAL_ARGUMENT_LIST
      DECLARATION
        MULTI_TYPE
          float
        DECLARE_VARIABLE_REST
          start
      DECLARATION
        MULTI_TYPE
          float
        DECLARE_VARIABLE_REST
          end
      DECLARATION
        MULTI_TYPE
          float
        DECLARE_VARIABLE_REST
          step
    TCL_PACKAGE
      "turbine"
      "0.0.2"
    TCL_FUN_REF
      "range_float_step"
    INLINE_TCL
      "set <<res>> [ turbine::build_range_float_dict <<start>> <<end>> <<step>> ]"
    ANNOTATION
      pure
    ANNOTATION
      implements
      range_float_step
  DEFINE_BUILTIN_FUNCTION
    size
    TYPE_PARAMETERS
      T
    FORMAL_ARGUMENT_LIST
      DECLARATION
        MULTI_TYPE
          int
        DECLARE_VARIABLE_REST
          n
    FORMAL_ARGUMENT_LIST
      DECLARATION
        MULTI_TYPE
          T
        DECLARE_VARIABLE_REST
          A
          ARRAY
    TCL_PACKAGE
      "turbine"
      "0.0.5"
    TCL_FUN_REF
      "container_size"
    ANNOTATION
      pure
    ANNOTATION
      implements
      size
  DEFINE_BUILTIN_FUNCTION
    contains
    TYPE_PARAMETERS
      K
      V
    FORMAL_ARGUMENT_LIST
      DECLARATION
        MULTI_TYPE
          boolean
        DECLARE_VARIABLE_REST
          o
    FORMAL_ARGUMENT_LIST
      DECLARATION
        MULTI_TYPE
          V
        DECLARE_VARIABLE_REST
          A
          ARRAY
            STANDALONE_TYPE
              K
      DECLARATION
        MULTI_TYPE
          K
        DECLARE_VARIABLE_REST
          key
    TCL_PACKAGE
      "turbine"
      "0.0.5"
    TCL_FUN_REF
      "contains"
    ANNOTATION
      pure
    ANNOTATION
      implements
      contains
  DEFINE_BUILTIN_FUNCTION
    exists
    TYPE_PARAMETERS
      K
      V
    FORMAL_ARGUMENT_LIST
      DECLARATION
        MULTI_TYPE
          boolean
        DECLARE_VARIABLE_REST
          o
    FORMAL_ARGUMENT_LIST
      DECLARATION
        MULTI_TYPE
          V
        DECLARE_VARIABLE_REST
          A
          ARRAY
            STANDALONE_TYPE
              K
      DECLARATION
        MULTI_TYPE
          K
        DECLARE_VARIABLE_REST
          key
    TCL_PACKAGE
      "turbine"
      "0.7.0"
    TCL_FUN_REF
      "exists"
  DEFINE_BUILTIN_FUNCTION
    bag_size
    TYPE_PARAMETERS
      T
    FORMAL_ARGUMENT_LIST
      DECLARATION
        MULTI_TYPE
          int
        DECLARE_VARIABLE_REST
          n
    FORMAL_ARGUMENT_LIST
      DECLARATION
        MULTI_TYPE
          PARAM_TYPE
            bag
            STANDALONE_TYPE
              T
        DECLARE_VARIABLE_REST
          B
    TCL_PACKAGE
      "turbine"
      "0.0.5"
    TCL_FUN_REF
      "container_size"
    INLINE_TCL
      "set <<n>> [ turbine::container_size_local <<B>> 1 ]"
    ANNOTATION
      pure
    ANNOTATION
      implements
      size
  DEFINE_BUILTIN_FUNCTION
    bagSize
    TYPE_PARAMETERS
      T
    FORMAL_ARGUMENT_LIST
      DECLARATION
        MULTI_TYPE
          int
        DECLARE_VARIABLE_REST
          n
    FORMAL_ARGUMENT_LIST
      DECLARATION
        MULTI_TYPE
          PARAM_TYPE
            bag
            STANDALONE_TYPE
              T
        DECLARE_VARIABLE_REST
          B
    TCL_PACKAGE
      "turbine"
      "0.0.5"
    TCL_FUN_REF
      "container_size"
    INLINE_TCL
      "set <<n>> [ turbine::container_size_local <<B>> 1 ]"
    ANNOTATION
      pure
    ANNOTATION
      implements
      size
  DEFINE_BUILTIN_FUNCTION
    init_updateable
    TYPE_PARAMETERS
    FORMAL_ARGUMENT_LIST
      DECLARATION
        MULTI_TYPE
          updateable_float
        DECLARE_VARIABLE_REST
          o
    FORMAL_ARGUMENT_LIST
      DECLARATION
        MULTI_TYPE
          float
        DECLARE_VARIABLE_REST
          i
    TCL_PACKAGE
      "turbine"
      "0.0.2"
    TCL_FUN_REF
      "init_updateable"
  DEFINE_BUILTIN_FUNCTION
    adlb_servers
    TYPE_PARAMETERS
    FORMAL_ARGUMENT_LIST
      DECLARATION
        MULTI_TYPE
          int
        DECLARE_VARIABLE_REST
          n
    FORMAL_ARGUMENT_LIST
    TCL_PACKAGE
      "turbine"
      "0.0.2"
    TCL_FUN_REF
      "adlb_servers_future"
    INLINE_TCL
      "set <<n>> [ turbine::adlb_servers ]"
    ANNOTATION
      pure
  DEFINE_BUILTIN_FUNCTION
    zero
    TYPE_PARAMETERS
    FORMAL_ARGUMENT_LIST
      DECLARATION
        MULTI_TYPE
          int
        DECLARE_VARIABLE_REST
          o
    FORMAL_ARGUMENT_LIST
      DECLARATION
        MULTI_TYPE
          void
        DECLARE_VARIABLE_REST
          v
    TCL_PACKAGE
      "turbine"
      "0.0.4"
    TCL_FUN_REF
      "zero"
  DEFINE_BUILTIN_FUNCTION
    turbine_engines
    TYPE_PARAMETERS
    FORMAL_ARGUMENT_LIST
      DECLARATION
        MULTI_TYPE
          int
        DECLARE_VARIABLE_REST
          n
    FORMAL_ARGUMENT_LIST
    TCL_PACKAGE
      "turbine"
      "0.0.2"
    INLINE_TCL
      "set <<n>> 0"
    ANNOTATION
      pure
  DEFINE_BUILTIN_FUNCTION
    turbine_workers
    TYPE_PARAMETERS
    FORMAL_ARGUMENT_LIST
      DECLARATION
        MULTI_TYPE
          int
        DECLARE_VARIABLE_REST
          n
    FORMAL_ARGUMENT_LIST
    TCL_PACKAGE
      "turbine"
      "0.0.2"
    TCL_FUN_REF
      "turbine_workers_future"
    INLINE_TCL
      "set <<n>> [ turbine::turbine_workers ]"
    ANNOTATION
      pure
  DEFINE_BUILTIN_FUNCTION
    filename
    TYPE_PARAMETERS
    FORMAL_ARGUMENT_LIST
      DECLARATION
        MULTI_TYPE
          string
        DECLARE_VARIABLE_REST
          n
    FORMAL_ARGUMENT_LIST
      DECLARATION
        MULTI_TYPE
          file
        DECLARE_VARIABLE_REST
          x
    TCL_PACKAGE
      "turbine"
      "0.0.2"
    TCL_FUN_REF
      ""
    ANNOTATION
      pure
    ANNOTATION
      stc_intrinsic
      FILENAME
  DEFINE_BUILTIN_FUNCTION
    input
    TYPE_PARAMETERS
    FORMAL_ARGUMENT_LIST
      DECLARATION
        MULTI_TYPE
          file
        DECLARE_VARIABLE_REST
          f
    FORMAL_ARGUMENT_LIST
      DECLARATION
        MULTI_TYPE
          string
        DECLARE_VARIABLE_REST
          filename
    TCL_PACKAGE
      "turbine"
      "0.0.2"
    TCL_FUN_REF
      "input_file"
    INLINE_TCL
      "turbine::input_file_local <<f>> <<filename>>"
    ANNOTATION
      pure
    ANNOTATION
      implements
      input_file
  DEFINE_BUILTIN_FUNCTION
    input_file
    TYPE_PARAMETERS
    FORMAL_ARGUMENT_LIST
      DECLARATION
        MULTI_TYPE
          file
        DECLARE_VARIABLE_REST
          f
    FORMAL_ARGUMENT_LIST
      DECLARATION
        MULTI_TYPE
          string
        DECLARE_VARIABLE_REST
          filename
    TCL_PACKAGE
      "turbine"
      "0.0.2"
    TCL_FUN_REF
      "input_file"
    INLINE_TCL
      "turbine::input_file_local <<f>> <<filename>>"
    ANNOTATION
      pure
    ANNOTATION
      implements
      input_file
  DEFINE_BUILTIN_FUNCTION
    input_url
    TYPE_PARAMETERS
    FORMAL_ARGUMENT_LIST
      DECLARATION
        MULTI_TYPE
          url
        DECLARE_VARIABLE_REST
          f
    FORMAL_ARGUMENT_LIST
      DECLARATION
        MULTI_TYPE
          string
        DECLARE_VARIABLE_REST
          url
    TCL_PACKAGE
      "turbine"
      "0.0.2"
    TCL_FUN_REF
      "input_url"
    INLINE_TCL
      "turbine::input_url_local <<f>> <<url>>"
    ANNOTATION
      pure
    ANNOTATION
      implements
      input_url
  DEFINE_BUILTIN_FUNCTION
    urlname
    TYPE_PARAMETERS
    FORMAL_ARGUMENT_LIST
      DECLARATION
        MULTI_TYPE
          string
        DECLARE_VARIABLE_REST
          n
    FORMAL_ARGUMENT_LIST
      DECLARATION
        MULTI_TYPE
          url
        DECLARE_VARIABLE_REST
          x
    TCL_PACKAGE
      "turbine"
      "0.0.2"
    TCL_FUN_REF
      ""
    ANNOTATION
      pure
    ANNOTATION
      stc_intrinsic
      FILENAME
  DEFINE_BUILTIN_FUNCTION
    ternary
    TYPE_PARAMETERS
    FORMAL_ARGUMENT_LIST
      DECLARATION
        MULTI_TYPE
          int
        DECLARE_VARIABLE_REST
          o
    FORMAL_ARGUMENT_LIST
      DECLARATION
        MULTI_TYPE
          boolean
        DECLARE_VARIABLE_REST
          b
      DECLARATION
        MULTI_TYPE
          int
        DECLARE_VARIABLE_REST
          i1
      DECLARATION
        MULTI_TYPE
          int
        DECLARE_VARIABLE_REST
          i2
    TCL_PACKAGE
      "turbine"
      "0.0.2"
    INLINE_TCL
      "if { <<b>> } { set <<o>> <<i1>> } else { set <<o>> <<i2>> }"
    ANNOTATION
      pure
  DEFINE_BUILTIN_FUNCTION
    repr
    TYPE_PARAMETERS
      T
    FORMAL_ARGUMENT_LIST
      DECLARATION
        MULTI_TYPE
          string
        DECLARE_VARIABLE_REST
          o
    FORMAL_ARGUMENT_LIST
      DECLARATION
        MULTI_TYPE
          T
        DECLARE_VARIABLE_REST
          i
    TCL_PACKAGE
      "turbine"
      "0.4.0"
    INLINE_TCL
      "set <<o>> <<i>>"
    ANNOTATION
      pure
  DEFINE_BUILTIN_FUNCTION
    array_repr
    TYPE_PARAMETERS
      T
    FORMAL_ARGUMENT_LIST
      DECLARATION
        MULTI_TYPE
          string
        DECLARE_VARIABLE_REST
          O
          ARRAY
    FORMAL_ARGUMENT_LIST
      DECLARATION
        MULTI_TYPE
          T
        DECLARE_VARIABLE_REST
          I
          ARRAY
    TCL_PACKAGE
      "turbine"
      "0.4.0"
    INLINE_TCL
      "set <<O>> <<I>>"
    ANNOTATION
      pure
  DEFINE_BUILTIN_FUNCTION
    __sprintf_op__
    TYPE_PARAMETERS
    FORMAL_ARGUMENT_LIST
      DECLARATION
        MULTI_TYPE
          string
        DECLARE_VARIABLE_REST
          o
    FORMAL_ARGUMENT_LIST
      DECLARATION
        MULTI_TYPE
          string
        DECLARE_VARIABLE_REST
          fmt
      DECLARATION
        MULTI_TYPE
          int
          float
          string
          boolean
        DECLARE_VARIABLE_REST
          args
        ...
    TCL_PACKAGE
      "turbine"
      "0.0.2"
    TCL_FUN_REF
      "sprintf"
    ANNOTATION
      builtin_op
      SPRINTF
  <EOF>

DEBUG stc-preproc7860318451911849934.swift:0: Entered module builtins on pass DEFINITIONS
DEBUG builtins.swift:31:10: builtin: makeVoid ((int|float|string|boolean|void|file)...) -> (void)
DEBUG builtins.swift:34:10: builtin: make_void ((int|float|string|boolean|void|file)...) -> (void)
DEBUG builtins.swift:37:10: builtin: propagate ((int|float|string|boolean|void|file)...) -> (void)
DEBUG builtins.swift:49: Defined work type COASTER
DEBUG builtins.swift:54:11: builtin: pow_integer (int,int) -> (float)
DEBUG builtins.swift:56:11: builtin: pow (int,int) -> (float)
DEBUG builtins.swift:58:11: builtin: pow_float (float,float) -> (float)
DEBUG builtins.swift:60:11: builtin: pow (float,float) -> (float)
DEBUG builtins.swift:65:12: builtin: strcat ((string|int|float)...) -> (string)
DEBUG builtins.swift:68:9: builtin: length (string) -> (int)
DEBUG builtins.swift:74:12: builtin: dircat (string...) -> (string)
DEBUG builtins.swift:77:13: builtin: xor (boolean,boolean) -> (boolean)
DEBUG builtins.swift:81:9: builtin: max_integer (int,int) -> (int)
DEBUG builtins.swift:83:9: builtin: max (int,int) -> (int)
DEBUG builtins.swift:85:9: builtin: min_integer (int,int) -> (int)
DEBUG builtins.swift:87:9: builtin: min (int,int) -> (int)
DEBUG builtins.swift:89:11: builtin: max_float (float,float) -> (float)
DEBUG builtins.swift:91:11: builtin: max (float,float) -> (float)
DEBUG builtins.swift:93:11: builtin: min_float (float,float) -> (float)
DEBUG builtins.swift:95:11: builtin: min (float,float) -> (float)
DEBUG builtins.swift:100:12: builtin: int2string (int) -> (string)
DEBUG builtins.swift:102:12: builtin: fromint (int) -> (string)
DEBUG builtins.swift:104:12: builtin: toString (int) -> (string)
DEBUG builtins.swift:107:12: builtin: float2string (float) -> (string)
DEBUG builtins.swift:109:12: builtin: fromfloat (float) -> (string)
DEBUG builtins.swift:111:12: builtin: toString (float) -> (string)
DEBUG builtins.swift:114:12: builtin: toString (boolean) -> (string)
DEBUG builtins.swift:120:9: builtin: string2int (string,int) -> (int)
DEBUG builtins.swift:122:9: define function: builtins.swift:122:9: toint
DEBUG builtins.swift:126:9: builtin: parseInt (string,int) -> (int)
DEBUG builtins.swift:129:11: builtin: string2float (string) -> (float)
DEBUG builtins.swift:131:11: builtin: tofloat (string) -> (float)
DEBUG builtins.swift:133:11: builtin: parseFloat (string) -> (float)
DEBUG builtins.swift:136:13: builtin: string2bool (string) -> (boolean)
DEBUG builtins.swift:142:11: builtin: int2float (int) -> (float)
DEBUG builtins.swift:144:11: builtin: itof (int) -> (float)
DEBUG builtins.swift:146:11: builtin: toFloat (int) -> (float)
DEBUG builtins.swift:149:9: builtin: float2int (float) -> (int)
DEBUG builtins.swift:151:9: builtin: toInt (float) -> (int)
DEBUG builtins.swift:153:9: builtin: ftoi (float) -> (int)
DEBUG builtins.swift:156:10: builtin: trace ((int|float|string|boolean)...) -> (void)
DEBUG builtins.swift:158:10: builtin: sleep_trace (float,(int|float|string|boolean)...) -> (void)
DEBUG builtins.swift:163:13: builtin: range (int,int) -> (int[int])
DEBUG builtins.swift:166:13: builtin: range_step (int,int,int) -> (int[int])
DEBUG builtins.swift:169:15: builtin: range_float (float,float) -> (float[int])
DEBUG builtins.swift:172:15: builtin: range_float_step (float,float,float) -> (float[int])
DEBUG builtins.swift:175:13: builtin: size (T[int]) -> (int)
DEBUG builtins.swift:177:20: builtin: contains (V[K],K) -> (boolean)
DEBUG builtins.swift:179:20: builtin: exists (V[K],K) -> (boolean)
DEBUG builtins.swift:182:13: builtin: bag_size (bag<T>) -> (int)
DEBUG builtins.swift:186:13: builtin: bagSize (bag<T>) -> (int)
DEBUG builtins.swift:190:22: builtin: init_updateable (float) -> (updateable_float)
DEBUG builtins.swift:195:9: builtin: adlb_servers () -> (int)
DEBUG builtins.swift:199:9: builtin: zero (void) -> (int)
DEBUG builtins.swift:205:9: builtin: turbine_engines () -> (int)
DEBUG builtins.swift:208:9: builtin: turbine_workers () -> (int)
DEBUG builtins.swift:215:12: builtin: filename (file) -> (string)
DEBUG builtins.swift:218:10: builtin: input (string) -> (file)
DEBUG builtins.swift:223:10: builtin: input_file (string) -> (file)
DEBUG builtins.swift:228:9: builtin: input_url (string) -> (url)
DEBUG builtins.swift:233:12: builtin: urlname (url) -> (string)
DEBUG builtins.swift:237:9: builtin: ternary (boolean,int,int) -> (int)
DEBUG builtins.swift:242:16: builtin: repr (T) -> (string)
DEBUG builtins.swift:247:18: builtin: array_repr (T[int]) -> (string[int])
DEBUG builtins.swift:253:12: builtin: __sprintf_op__ (string,(int|float|string|boolean)...) -> (string)
DEBUG builtins.swift:257: Finishing modulebuiltins for pass DEFINITIONS
DEBUG builtins.swift:257: Loading new module VCcallingPipeline
DEBUG builtins.swift:257: printTree:
PROGRAM
  import
    IMPORT_PATH
      sys
  import
    IMPORT_PATH
      files
  import
    IMPORT_PATH
      string
  import
    IMPORT_PATH
      unix
  import
    IMPORT_PATH
      assert
  import
    IMPORT_PATH
      pipelinefunctions
      align_dedup
  import
    IMPORT_PATH
      pipelinefunctions
      realign_varcall_by_chr
  import
    IMPORT_PATH
      pipelinefunctions
      merge_vcf
  import
    IMPORT_PATH
      pipelinefunctions
      joint_vcf
  import
    IMPORT_PATH
      pipelinefunctions
      miscellaneous
  EXPR_STMT
    CALL_FUNCTION
      argv_accept
      ARGUMENT_LIST
        STRING_LITERAL
          "runfile"
  DECLARATION
    string
    DECLARE_ASSIGN
      DECLARE_VARIABLE_REST
        configFilename
      CALL_FUNCTION
        argv
        ARGUMENT_LIST
          STRING_LITERAL
            "runfile"
  DECLARATION
    file
    DECLARE_ASSIGN
      DECLARE_VARIABLE_REST
        configFile
      CALL_FUNCTION
        input_file
        ARGUMENT_LIST
          VARIABLE
            configFilename
  DECLARATION
    string
    DECLARE_ASSIGN
      DECLARE_VARIABLE_REST
        configFileData
        ARRAY
      CALL_FUNCTION
        file_lines
        ARGUMENT_LIST
          VARIABLE
            configFile
  DECLARATION
    string
    DECLARE_ASSIGN
      DECLARE_VARIABLE_REST
        vars
        ARRAY
          STANDALONE_TYPE
            string
      CALL_FUNCTION
        getConfigVariables
        ARGUMENT_LIST
          VARIABLE
            configFileData
  DECLARATION
    file
    DECLARE_ASSIGN
      DECLARE_VARIABLE_REST
        sampleInfoFile
      CALL_FUNCTION
        input_file
        ARGUMENT_LIST
          ARRAY_LOAD
            VARIABLE
              vars
            STRING_LITERAL
              "SAMPLEINFORMATION"
  DECLARATION
    string
    DECLARE_ASSIGN
      DECLARE_VARIABLE_REST
        sampleLines
        ARRAY
      CALL_FUNCTION
        file_lines
        ARGUMENT_LIST
          VARIABLE
            sampleInfoFile
  DECLARATION
    int
    DECLARE_VARIABLE_REST
      samples_processing_done
  FOREACH_LOOP
    VARIABLE
      sampleLines
    BLOCK
      DECLARATION
        string
        DECLARE_ASSIGN
          DECLARE_VARIABLE_REST
            sampleInfo
            ARRAY
          CALL_FUNCTION
            split
            ARGUMENT_LIST
              VARIABLE
                sample
              STRING_LITERAL
                " "
      DECLARATION
        string
        DECLARE_ASSIGN
          DECLARE_VARIABLE_REST
            sampleName
          ARRAY_LOAD
            VARIABLE
              sampleInfo
            INT_LITERAL
              0
      DECLARATION
        string
        DECLARE_ASSIGN
          DECLARE_VARIABLE_REST
            read1
          ARRAY_LOAD
            VARIABLE
              sampleInfo
            INT_LITERAL
              1
      DECLARATION
        string
        DECLARE_ASSIGN
          DECLARE_VARIABLE_REST
            read2
          ARRAY_LOAD
            VARIABLE
              sampleInfo
            INT_LITERAL
              2
      DECLARATION
        string
        DECLARE_ASSIGN
          DECLARE_VARIABLE_REST
            rgheader
          CALL_FUNCTION
            sprintf
            ARGUMENT_LIST
              STRING_LITERAL
                "@RG\tID:%s\tLB:%s\tPL:%s\tPU:%s\tSM:%s\tCN:%s"
              VARIABLE
                sampleName
              ARRAY_LOAD
                VARIABLE
                  vars
                STRING_LITERAL
                  "SAMPLELB"
              ARRAY_LOAD
                VARIABLE
                  vars
                STRING_LITERAL
                  "SAMPLEPL"
              VARIABLE
                sampleName
              VARIABLE
                sampleName
              ARRAY_LOAD
                VARIABLE
                  vars
                STRING_LITERAL
                  "SAMPLECN"
      DECLARATION
        string
        DECLARE_ASSIGN
          DECLARE_VARIABLE_REST
            VarcallDir
          CALL_FUNCTION
            strcat
            ARGUMENT_LIST
              OPERATOR
                /
                ARRAY_LOAD
                  VARIABLE
                    vars
                  STRING_LITERAL
                    "OUTPUTDIR"
                VARIABLE
                  sampleName
              STRING_LITERAL
                "/variant/"
      DECLARATION
        string
        DECLARE_ASSIGN
          DECLARE_VARIABLE_REST
            RealignDir
          CALL_FUNCTION
            strcat
            ARGUMENT_LIST
              OPERATOR
                /
                ARRAY_LOAD
                  VARIABLE
                    vars
                  STRING_LITERAL
                    "OUTPUTDIR"
                VARIABLE
                  sampleName
              STRING_LITERAL
                "/realign/"
      EXPR_STMT
        CALL_FUNCTION
          mkdir
          ARGUMENT_LIST
            VARIABLE
              VarcallDir
      DECLARATION
        file
        DECLARE_VARIABLE_REST
          dedupsortedbam
          MAPPING
            CALL_FUNCTION
              strcat
              ARGUMENT_LIST
                ARRAY_LOAD
                  VARIABLE
                    vars
                  STRING_LITERAL
                    "OUTPUTDIR"
                STRING_LITERAL
                  "/align/"
                VARIABLE
                  sampleName
                STRING_LITERAL
                  ".wdups.sorted.bam"
      DECLARATION
        file
        DECLARE_VARIABLE_REST
          outbam
          MAPPING
            CALL_FUNCTION
              strcat
              ARGUMENT_LIST
                VARIABLE
                  RealignDir
                VARIABLE
                  sampleName
                STRING_LITERAL
                  ".recalibrated.bam"
      DECLARATION
        file
        DECLARE_VARIABLE_REST
          rawvariant
          MAPPING
            CALL_FUNCTION
              strcat
              ARGUMENT_LIST
                VARIABLE
                  VarcallDir
                VARIABLE
                  sampleName
                STRING_LITERAL
                  ".GATKCombineGVCF.raw.vcf"
      DECLARATION
        file
        DECLARE_VARIABLE_REST
          qcfile
          MAPPING
            CALL_FUNCTION
              strcat
              ARGUMENT_LIST
                ARRAY_LOAD
                  VARIABLE
                    vars
                  STRING_LITERAL
                    "OUTPUTDIR"
                STRING_LITERAL
                  "/"
                ARRAY_LOAD
                  VARIABLE
                    vars
                  STRING_LITERAL
                    "DELIVERYFOLDER"
                STRING_LITERAL
                  "/docs/QC_test_results.txt"
      DECLARATION
        file
        DECLARE_VARIABLE_REST
          mergedbam
          MAPPING
            CALL_FUNCTION
              strcat
              ARGUMENT_LIST
                OPERATOR
                  /
                  OPERATOR
                    /
                    ARRAY_LOAD
                      VARIABLE
                        vars
                      STRING_LITERAL
                        "OUTPUTDIR"
                    ARRAY_LOAD
                      VARIABLE
                        vars
                      STRING_LITERAL
                        "DELIVERYFOLDER"
                  VARIABLE
                    sampleName
                STRING_LITERAL
                  ".recalibrated.bam"
      DECLARATION
        file
        DECLARE_VARIABLE_REST
          mergedvariant
          MAPPING
            CALL_FUNCTION
              strcat
              ARGUMENT_LIST
                OPERATOR
                  /
                  OPERATOR
                    /
                    ARRAY_LOAD
                      VARIABLE
                        vars
                      STRING_LITERAL
                        "OUTPUTDIR"
                    ARRAY_LOAD
                      VARIABLE
                        vars
                      STRING_LITERAL
                        "DELIVERYFOLDER"
                  VARIABLE
                    sampleName
                STRING_LITERAL
                  ".GATKCombineGVCF.raw.vcf"
      DECLARATION
        file
        DECLARE_VARIABLE_REST
          flagstats
          MAPPING
            CALL_FUNCTION
              strcat
              ARGUMENT_LIST
                ARRAY_LOAD
                  VARIABLE
                    vars
                  STRING_LITERAL
                    "OUTPUTDIR"
                STRING_LITERAL
                  "/align/"
                VARIABLE
                  sampleName
                STRING_LITERAL
                  ".wdups.sorted.bam"
                STRING_LITERAL
                  ".flagstats"
      DECLARATION
        file
        DECLARE_VARIABLE_REST
          alignedsam
          MAPPING
            CALL_FUNCTION
              strcat
              ARGUMENT_LIST
                ARRAY_LOAD
                  VARIABLE
                    vars
                  STRING_LITERAL
                    "TMPDIR"
                STRING_LITERAL
                  "/align/"
                VARIABLE
                  sampleName
                STRING_LITERAL
                  ".nodups.sam"
      DECLARATION
        file
        DECLARE_VARIABLE_REST
          chr_bamListfile
          MAPPING
            CALL_FUNCTION
              strcat
              ARGUMENT_LIST
                OPERATOR
                  /
                  ARRAY_LOAD
                    VARIABLE
                      vars
                    STRING_LITERAL
                      "TMPDIR"
                  VARIABLE
                    sampleName
                STRING_LITERAL
                  ".chr_bamList.txt"
      DECLARATION
        file
        DECLARE_VARIABLE_REST
          chr_vcfListfile
          MAPPING
            CALL_FUNCTION
              strcat
              ARGUMENT_LIST
                OPERATOR
                  /
                  ARRAY_LOAD
                    VARIABLE
                      vars
                    STRING_LITERAL
                      "TMPDIR"
                  VARIABLE
                    sampleName
                STRING_LITERAL
                  ".chr_vcfList.txt"
      IF_STATEMENT
        OPERATOR
          ==
          ARRAY_LOAD
            VARIABLE
              vars
            STRING_LITERAL
              "MARKDUPLICATESTOOL"
          STRING_LITERAL
            "SAMBLASTER"
        BLOCK
          EXPR_STMT
            CALL_FUNCTION
              trace
              ARGUMENT_LIST
                STRING_LITERAL
                  "##CASE1: dedup tool is ## SAMBLASTER ##. We use a single command for align-deduplication ##"
          DECLARATION
            file
            DECLARE_VARIABLE_REST
              dedupsam
              MAPPING
                CALL_FUNCTION
                  strcat
                  ARGUMENT_LIST
                    ARRAY_LOAD
                      VARIABLE
                        vars
                      STRING_LITERAL
                        "TMPDIR"
                    STRING_LITERAL
                      "/align/"
                    VARIABLE
                      sampleName
                    STRING_LITERAL
                      ".wdups.sam"
          DECLARATION
            file
            DECLARE_VARIABLE_REST
              dedupbam
              MAPPING
                CALL_FUNCTION
                  strcat
                  ARGUMENT_LIST
                    ARRAY_LOAD
                      VARIABLE
                        vars
                      STRING_LITERAL
                        "OUTPUTDIR"
                    STRING_LITERAL
                      "/align/"
                    VARIABLE
                      sampleName
                    STRING_LITERAL
                      ".wdups.bam"
          STATEMENT_CHAIN
            ASSIGN_EXPRESSION
              =
              IDENTIFIER_LIST
                ASSIGN_TARGET
                  VARIABLE
                    alignedsam
              CALL_FUNCTION
                bwa_mem
                ARGUMENT_LIST
                  ARRAY_LOAD
                    VARIABLE
                      vars
                    STRING_LITERAL
                      "BWADIR"
                  VARIABLE
                    read1
                  VARIABLE
                    read2
                  ARRAY_LOAD
                    VARIABLE
                      vars
                    STRING_LITERAL
                      "BWAINDEX"
                  ARRAY_ELEMS
                    ARRAY_LOAD
                      VARIABLE
                        vars
                      STRING_LITERAL
                        "BWAMEMPARAMS"
                  CALL_FUNCTION
                    string2int
                    ARGUMENT_LIST
                      ARRAY_LOAD
                        VARIABLE
                          vars
                        STRING_LITERAL
                          "PBSCORES"
                  VARIABLE
                    rgheader
            STATEMENT_CHAIN
              ASSIGN_EXPRESSION
                =
                IDENTIFIER_LIST
                  ASSIGN_TARGET
                    VARIABLE
                      dedupsam
                CALL_FUNCTION
                  samblaster
                  ARGUMENT_LIST
                    ARRAY_LOAD
                      VARIABLE
                        vars
                      STRING_LITERAL
                        "SAMBLASTERDIR"
                    VARIABLE
                      alignedsam
              STATEMENT_CHAIN
                ASSIGN_EXPRESSION
                  =
                  IDENTIFIER_LIST
                    ASSIGN_TARGET
                      VARIABLE
                        dedupbam
                  CALL_FUNCTION
                    samtools_view
                    ARGUMENT_LIST
                      ARRAY_LOAD
                        VARIABLE
                          vars
                        STRING_LITERAL
                          "SAMTOOLSDIR"
                      VARIABLE
                        dedupsam
                      CALL_FUNCTION
                        string2int
                        ARGUMENT_LIST
                          ARRAY_LOAD
                            VARIABLE
                              vars
                            STRING_LITERAL
                              "PBSCORES"
                      ARRAY_ELEMS
                        STRING_LITERAL
                          "-u"
                DECLARATION
                  int
                  DECLARE_ASSIGN
                    DECLARE_VARIABLE_REST
                      numAlignments_dedup
                    CALL_FUNCTION
                      samtools_view2
                      ARGUMENT_LIST
                        ARRAY_LOAD
                          VARIABLE
                            vars
                          STRING_LITERAL
                            "SAMTOOLSDIR"
                        CALL_FUNCTION
                          filename
                          ARGUMENT_LIST
                            VARIABLE
                              dedupbam
          IF_STATEMENT
            OPERATOR
              ==
              VARIABLE
                numAlignments_dedup
              INT_LITERAL
                0
            BLOCK
              ASSIGN_EXPRESSION
                =
                IDENTIFIER_LIST
                  ASSIGN_TARGET
                    VARIABLE
                      qcfile
                CALL_FUNCTION
                  echo
                  ARGUMENT_LIST
                    CALL_FUNCTION
                      strcat
                      ARGUMENT_LIST
                        VARIABLE
                          sampleName
                        STRING_LITERAL
                          "\tALIGNMENT\tFAIL\tbwa mem command did not produce alignments for "
                        CALL_FUNCTION
                          filename
                          ARGUMENT_LIST
                            VARIABLE
                              dedupbam
                        STRING_LITERAL
                          "\n"
          EXPR_STMT
            CALL_FUNCTION
              assert
              ARGUMENT_LIST
                OPERATOR
                  >
                  VARIABLE
                    numAlignments_dedup
                  INT_LITERAL
                    0
                CALL_FUNCTION
                  strcat
                  ARGUMENT_LIST
                    STRING_LITERAL
                      "bwa mem command did not produce alignments for "
                    CALL_FUNCTION
                      filename
                      ARGUMENT_LIST
                        VARIABLE
                          dedupbam
                    STRING_LITERAL
                      " alignment failed"
          STATEMENT_CHAIN
            ASSIGN_EXPRESSION
              =
              IDENTIFIER_LIST
                ASSIGN_TARGET
                  VARIABLE
                    dedupsortedbam
              CALL_FUNCTION
                novosort
                ARGUMENT_LIST
                  CALL_FUNCTION
                    strcat
                    ARGUMENT_LIST
                      ARRAY_LOAD
                        VARIABLE
                          vars
                        STRING_LITERAL
                          "NOVOCRAFTDIR"
                      STRING_LITERAL
                        "/"
                      STRING_LITERAL
                        "novosort"
                  VARIABLE
                    dedupbam
                  ARRAY_LOAD
                    VARIABLE
                      vars
                    STRING_LITERAL
                      "TMPDIR"
                  CALL_FUNCTION
                    string2int
                    ARGUMENT_LIST
                      ARRAY_LOAD
                        VARIABLE
                          vars
                        STRING_LITERAL
                          "PBSCORES"
                  ARRAY_ELEMS
                    STRING_LITERAL
                      "--compression"
                    STRING_LITERAL
                      "1"
            DECLARATION
              int
              DECLARE_ASSIGN
                DECLARE_VARIABLE_REST
                  numAlignments_dedupsortedbam
                CALL_FUNCTION
                  samtools_view2
                  ARGUMENT_LIST
                    ARRAY_LOAD
                      VARIABLE
                        vars
                      STRING_LITERAL
                        "SAMTOOLSDIR"
                    CALL_FUNCTION
                      filename
                      ARGUMENT_LIST
                        VARIABLE
                          dedupsortedbam
          IF_STATEMENT
            OPERATOR
              ==
              VARIABLE
                numAlignments_dedupsortedbam
              INT_LITERAL
                0
            BLOCK
              ASSIGN_EXPRESSION
                =
                IDENTIFIER_LIST
                  ASSIGN_TARGET
                    VARIABLE
                      qcfile
                CALL_FUNCTION
                  echo
                  ARGUMENT_LIST
                    CALL_FUNCTION
                      strcat
                      ARGUMENT_LIST
                        VARIABLE
                          sampleName
                        STRING_LITERAL
                          "\tALIGNMENT\tFAIL\t novosort command did not produce alignments for "
                        CALL_FUNCTION
                          filename
                          ARGUMENT_LIST
                            VARIABLE
                              dedupsortedbam
                        STRING_LITERAL
                          "\n"
          EXPR_STMT
            CALL_FUNCTION
              assert
              ARGUMENT_LIST
                OPERATOR
                  >
                  VARIABLE
                    numAlignments_dedupsortedbam
                  INT_LITERAL
                    0
                CALL_FUNCTION
                  strcat
                  ARGUMENT_LIST
                    STRING_LITERAL
                      "novosort command did not produce alignments for "
                    CALL_FUNCTION
                      filename
                      ARGUMENT_LIST
                        VARIABLE
                          dedupsortedbam
                    STRING_LITERAL
                      " Sorting bam failed"
        BLOCK
          DECLARATION
            file
            DECLARE_VARIABLE_REST
              alignedbam
              MAPPING
                CALL_FUNCTION
                  strcat
                  ARGUMENT_LIST
                    ARRAY_LOAD
                      VARIABLE
                        vars
                      STRING_LITERAL
                        "OUTPUTDIR"
                    STRING_LITERAL
                      "/align/"
                    VARIABLE
                      sampleName
                    STRING_LITERAL
                      ".nodups.bam"
          IF_STATEMENT
            OPERATOR
              ==
              ARRAY_LOAD
                VARIABLE
                  vars
                STRING_LITERAL
                  "MARKDUPLICATESTOOL"
              STRING_LITERAL
                "PICARD"
            BLOCK
              EXPR_STMT
                CALL_FUNCTION
                  trace
                  ARGUMENT_LIST
                    STRING_LITERAL
                      "##CASE 2: dedup tool is ## PICARD ##. One command for align, one for sort, one for dedup ##"
              DECLARATION
                file
                DECLARE_VARIABLE_REST
                  alignedsortedbam
                  MAPPING
                    CALL_FUNCTION
                      strcat
                      ARGUMENT_LIST
                        ARRAY_LOAD
                          VARIABLE
                            vars
                          STRING_LITERAL
                            "OUTPUTDIR"
                        STRING_LITERAL
                          "/align/"
                        VARIABLE
                          sampleName
                        STRING_LITERAL
                          ".nodups.sorted.bam"
              DECLARATION
                file
                DECLARE_VARIABLE_REST
                  metricsfile
                  MAPPING
                    CALL_FUNCTION
                      strcat
                      ARGUMENT_LIST
                        ARRAY_LOAD
                          VARIABLE
                            vars
                          STRING_LITERAL
                            "OUTPUTDIR"
                        STRING_LITERAL
                          "/align/"
                        VARIABLE
                          sampleName
                        STRING_LITERAL
                          ".picard.metrics"
              STATEMENT_CHAIN
                ASSIGN_EXPRESSION
                  =
                  IDENTIFIER_LIST
                    ASSIGN_TARGET
                      VARIABLE
                        alignedsam
                  CALL_FUNCTION
                    bwa_mem
                    ARGUMENT_LIST
                      ARRAY_LOAD
                        VARIABLE
                          vars
                        STRING_LITERAL
                          "BWADIR"
                      VARIABLE
                        read1
                      VARIABLE
                        read2
                      ARRAY_LOAD
                        VARIABLE
                          vars
                        STRING_LITERAL
                          "BWAINDEX"
                      ARRAY_ELEMS
                        ARRAY_LOAD
                          VARIABLE
                            vars
                          STRING_LITERAL
                            "BWAMEMPARAMS"
                      CALL_FUNCTION
                        string2int
                        ARGUMENT_LIST
                          ARRAY_LOAD
                            VARIABLE
                              vars
                            STRING_LITERAL
                              "PBSCORES"
                      VARIABLE
                        rgheader
                STATEMENT_CHAIN
                  ASSIGN_EXPRESSION
                    =
                    IDENTIFIER_LIST
                      ASSIGN_TARGET
                        VARIABLE
                          alignedbam
                    CALL_FUNCTION
                      samtools_view
                      ARGUMENT_LIST
                        ARRAY_LOAD
                          VARIABLE
                            vars
                          STRING_LITERAL
                            "SAMTOOLSDIR"
                        VARIABLE
                          alignedsam
                        CALL_FUNCTION
                          string2int
                          ARGUMENT_LIST
                            ARRAY_LOAD
                              VARIABLE
                                vars
                              STRING_LITERAL
                                "PBSCORES"
                        ARRAY_ELEMS
                          STRING_LITERAL
                            "-u"
                  DECLARATION
                    int
                    DECLARE_ASSIGN
                      DECLARE_VARIABLE_REST
                        numAlignments_aligned
                      CALL_FUNCTION
                        samtools_view2
                        ARGUMENT_LIST
                          ARRAY_LOAD
                            VARIABLE
                              vars
                            STRING_LITERAL
                              "SAMTOOLSDIR"
                          CALL_FUNCTION
                            filename
                            ARGUMENT_LIST
                              VARIABLE
                                alignedbam
              IF_STATEMENT
                OPERATOR
                  ==
                  VARIABLE
                    numAlignments_aligned
                  INT_LITERAL
                    0
                BLOCK
                  ASSIGN_EXPRESSION
                    =
                    IDENTIFIER_LIST
                      ASSIGN_TARGET
                        VARIABLE
                          qcfile
                    CALL_FUNCTION
                      echo
                      ARGUMENT_LIST
                        CALL_FUNCTION
                          strcat
                          ARGUMENT_LIST
                            VARIABLE
                              sampleName
                            STRING_LITERAL
                              "\tALIGNMENT\tFAIL\tbwa mem command did not produce alignments for "
                            CALL_FUNCTION
                              filename
                              ARGUMENT_LIST
                                VARIABLE
                                  alignedbam
                            STRING_LITERAL
                              "\n"
              EXPR_STMT
                CALL_FUNCTION
                  assert
                  ARGUMENT_LIST
                    OPERATOR
                      >
                      VARIABLE
                        numAlignments_aligned
                      INT_LITERAL
                        0
                    CALL_FUNCTION
                      strcat
                      ARGUMENT_LIST
                        STRING_LITERAL
                          "bwa mem command did not produce alignments for "
                        CALL_FUNCTION
                          filename
                          ARGUMENT_LIST
                            VARIABLE
                              alignedbam
                        STRING_LITERAL
                          " alignment failed"
              STATEMENT_CHAIN
                ASSIGN_EXPRESSION
                  =
                  IDENTIFIER_LIST
                    ASSIGN_TARGET
                      VARIABLE
                        alignedsortedbam
                  CALL_FUNCTION
                    novosort
                    ARGUMENT_LIST
                      CALL_FUNCTION
                        strcat
                        ARGUMENT_LIST
                          ARRAY_LOAD
                            VARIABLE
                              vars
                            STRING_LITERAL
                              "NOVOCRAFTDIR"
                          STRING_LITERAL
                            "/"
                          STRING_LITERAL
                            "novosort"
                      VARIABLE
                        alignedbam
                      ARRAY_LOAD
                        VARIABLE
                          vars
                        STRING_LITERAL
                          "TMPDIR"
                      CALL_FUNCTION
                        string2int
                        ARGUMENT_LIST
                          ARRAY_LOAD
                            VARIABLE
                              vars
                            STRING_LITERAL
                              "PBSCORES"
                      ARRAY_ELEMS
                STATEMENT_CHAIN
                  ASSIGN_EXPRESSION
                    =
                    IDENTIFIER_LIST
                      ASSIGN_TARGET
                        VARIABLE
                          dedupsortedbam
                      ASSIGN_TARGET
                        VARIABLE
                          metricsfile
                    CALL_FUNCTION
                      picard
                      ARGUMENT_LIST
                        ARRAY_LOAD
                          VARIABLE
                            vars
                          STRING_LITERAL
                            "JAVADIR"
                        ARRAY_LOAD
                          VARIABLE
                            vars
                          STRING_LITERAL
                            "PICARDDIR"
                        ARRAY_LOAD
                          VARIABLE
                            vars
                          STRING_LITERAL
                            "TMPDIR"
                        VARIABLE
                          alignedsortedbam
                  DECLARATION
                    int
                    DECLARE_ASSIGN
                      DECLARE_VARIABLE_REST
                        numAlignments_dedupsortedbam
                      CALL_FUNCTION
                        samtools_view2
                        ARGUMENT_LIST
                          ARRAY_LOAD
                            VARIABLE
                              vars
                            STRING_LITERAL
                              "SAMTOOLSDIR"
                          CALL_FUNCTION
                            filename
                            ARGUMENT_LIST
                              VARIABLE
                                dedupsortedbam
              IF_STATEMENT
                OPERATOR
                  ==
                  VARIABLE
                    numAlignments_dedupsortedbam
                  INT_LITERAL
                    0
                BLOCK
                  ASSIGN_EXPRESSION
                    =
                    IDENTIFIER_LIST
                      ASSIGN_TARGET
                        VARIABLE
                          qcfile
                    CALL_FUNCTION
                      echo
                      ARGUMENT_LIST
                        CALL_FUNCTION
                          strcat
                          ARGUMENT_LIST
                            VARIABLE
                              sampleName
                            STRING_LITERAL
                              "\tALIGNMENT\tFAIL\t picard command did not produce alignments for "
                            CALL_FUNCTION
                              filename
                              ARGUMENT_LIST
                                VARIABLE
                                  dedupsortedbam
                            STRING_LITERAL
                              "\n"
              EXPR_STMT
                CALL_FUNCTION
                  assert
                  ARGUMENT_LIST
                    OPERATOR
                      >
                      VARIABLE
                        numAlignments_dedupsortedbam
                      INT_LITERAL
                        0
                    CALL_FUNCTION
                      strcat
                      ARGUMENT_LIST
                        STRING_LITERAL
                          "picard command did not produce alignments for "
                        CALL_FUNCTION
                          filename
                          ARGUMENT_LIST
                            VARIABLE
                              dedupsortedbam
                        STRING_LITERAL
                          " deduplication failed"
            BLOCK
              EXPR_STMT
                CALL_FUNCTION
                  trace
                  ARGUMENT_LIST
                    STRING_LITERAL
                      "##CASE DEFAULT: dedup tool is ## NOVOSORT ##. We use one command for dup-sort ##"
              IF_STATEMENT
                OPERATOR
                  ==
                  ARRAY_LOAD
                    VARIABLE
                      vars
                    STRING_LITERAL
                      "ALIGNERTOOL"
                  STRING_LITERAL
                    "BWAMEM"
                BLOCK
                  STATEMENT_CHAIN
                    ASSIGN_EXPRESSION
                      =
                      IDENTIFIER_LIST
                        ASSIGN_TARGET
                          VARIABLE
                            alignedsam
                      CALL_FUNCTION
                        bwa_mem
                        ARGUMENT_LIST
                          ARRAY_LOAD
                            VARIABLE
                              vars
                            STRING_LITERAL
                              "BWADIR"
                          VARIABLE
                            read1
                          VARIABLE
                            read2
                          ARRAY_LOAD
                            VARIABLE
                              vars
                            STRING_LITERAL
                              "BWAINDEX"
                          ARRAY_ELEMS
                            ARRAY_LOAD
                              VARIABLE
                                vars
                              STRING_LITERAL
                                "BWAMEMPARAMS"
                          CALL_FUNCTION
                            string2int
                            ARGUMENT_LIST
                              ARRAY_LOAD
                                VARIABLE
                                  vars
                                STRING_LITERAL
                                  "PBSCORES"
                          VARIABLE
                            rgheader
                    ASSIGN_EXPRESSION
                      =
                      IDENTIFIER_LIST
                        ASSIGN_TARGET
                          VARIABLE
                            alignedbam
                      CALL_FUNCTION
                        samtools_view
                        ARGUMENT_LIST
                          ARRAY_LOAD
                            VARIABLE
                              vars
                            STRING_LITERAL
                              "SAMTOOLSDIR"
                          VARIABLE
                            alignedsam
                          CALL_FUNCTION
                            string2int
                            ARGUMENT_LIST
                              ARRAY_LOAD
                                VARIABLE
                                  vars
                                STRING_LITERAL
                                  "PBSCORES"
                          ARRAY_ELEMS
                            STRING_LITERAL
                              "-u"
                BLOCK
                  STATEMENT_CHAIN
                    ASSIGN_EXPRESSION
                      =
                      IDENTIFIER_LIST
                        ASSIGN_TARGET
                          VARIABLE
                            alignedsam
                      CALL_FUNCTION
                        novoalign
                        ARGUMENT_LIST
                          CALL_FUNCTION
                            strcat
                            ARGUMENT_LIST
                              ARRAY_LOAD
                                VARIABLE
                                  vars
                                STRING_LITERAL
                                  "NOVOCRAFTDIR"
                              STRING_LITERAL
                                "/"
                              STRING_LITERAL
                                "novoalign"
                          VARIABLE
                            read1
                          VARIABLE
                            read2
                          ARRAY_LOAD
                            VARIABLE
                              vars
                            STRING_LITERAL
                              "NOVOALIGNINDEX"
                          ARRAY_ELEMS
                            ARRAY_LOAD
                              VARIABLE
                                vars
                              STRING_LITERAL
                                "NOVOALIGNPARAMS"
                          CALL_FUNCTION
                            string2int
                            ARGUMENT_LIST
                              ARRAY_LOAD
                                VARIABLE
                                  vars
                                STRING_LITERAL
                                  "PBSCORES"
                          VARIABLE
                            rgheader
                    ASSIGN_EXPRESSION
                      =
                      IDENTIFIER_LIST
                        ASSIGN_TARGET
                          VARIABLE
                            alignedbam
                      CALL_FUNCTION
                        samtools_view
                        ARGUMENT_LIST
                          ARRAY_LOAD
                            VARIABLE
                              vars
                            STRING_LITERAL
                              "SAMTOOLSDIR"
                          VARIABLE
                            alignedsam
                          CALL_FUNCTION
                            string2int
                            ARGUMENT_LIST
                              ARRAY_LOAD
                                VARIABLE
                                  vars
                                STRING_LITERAL
                                  "PBSCORES"
                          ARRAY_ELEMS
                            STRING_LITERAL
                              "-u"
              DECLARATION
                int
                DECLARE_ASSIGN
                  DECLARE_VARIABLE_REST
                    numAlignments_aligned
                  CALL_FUNCTION
                    samtools_view2
                    ARGUMENT_LIST
                      ARRAY_LOAD
                        VARIABLE
                          vars
                        STRING_LITERAL
                          "SAMTOOLSDIR"
                      CALL_FUNCTION
                        filename
                        ARGUMENT_LIST
                          VARIABLE
                            alignedbam
              IF_STATEMENT
                OPERATOR
                  ==
                  VARIABLE
                    numAlignments_aligned
                  INT_LITERAL
                    0
                BLOCK
                  ASSIGN_EXPRESSION
                    =
                    IDENTIFIER_LIST
                      ASSIGN_TARGET
                        VARIABLE
                          qcfile
                    CALL_FUNCTION
                      echo
                      ARGUMENT_LIST
                        CALL_FUNCTION
                          strcat
                          ARGUMENT_LIST
                            VARIABLE
                              sampleName
                            STRING_LITERAL
                              "\tALIGNMENT\tFAIL\tbwa mem or novoalign command did not produce alignments for "
                            CALL_FUNCTION
                              filename
                              ARGUMENT_LIST
                                VARIABLE
                                  alignedbam
                            STRING_LITERAL
                              "\n"
              EXPR_STMT
                CALL_FUNCTION
                  assert
                  ARGUMENT_LIST
                    OPERATOR
                      >
                      VARIABLE
                        numAlignments_aligned
                      INT_LITERAL
                        0
                    CALL_FUNCTION
                      strcat
                      ARGUMENT_LIST
                        STRING_LITERAL
                          "bwa mem command did not produce alignments for "
                        CALL_FUNCTION
                          filename
                          ARGUMENT_LIST
                            VARIABLE
                              alignedbam
                        STRING_LITERAL
                          " alignment failed"
              WAIT_STATEMENT
                ARGUMENT_LIST
                  VARIABLE
                    alignedbam
                BLOCK
                  STATEMENT_CHAIN
                    ASSIGN_EXPRESSION
                      =
                      IDENTIFIER_LIST
                        ASSIGN_TARGET
                          VARIABLE
                            dedupsortedbam
                      CALL_FUNCTION
                        novosort
                        ARGUMENT_LIST
                          CALL_FUNCTION
                            strcat
                            ARGUMENT_LIST
                              ARRAY_LOAD
                                VARIABLE
                                  vars
                                STRING_LITERAL
                                  "NOVOCRAFTDIR"
                              STRING_LITERAL
                                "/"
                              STRING_LITERAL
                                "novosort"
                          VARIABLE
                            alignedbam
                          ARRAY_LOAD
                            VARIABLE
                              vars
                            STRING_LITERAL
                              "TMPDIR"
                          CALL_FUNCTION
                            string2int
                            ARGUMENT_LIST
                              ARRAY_LOAD
                                VARIABLE
                                  vars
                                STRING_LITERAL
                                  "PBSCORES"
                          ARRAY_ELEMS
                            STRING_LITERAL
                              "--markDuplicates"
                    DECLARATION
                      int
                      DECLARE_ASSIGN
                        DECLARE_VARIABLE_REST
                          numAlignments_dedupsortedbam
                        CALL_FUNCTION
                          samtools_view2
                          ARGUMENT_LIST
                            ARRAY_LOAD
                              VARIABLE
                                vars
                              STRING_LITERAL
                                "SAMTOOLSDIR"
                            CALL_FUNCTION
                              filename
                              ARGUMENT_LIST
                                VARIABLE
                                  dedupsortedbam
                  IF_STATEMENT
                    OPERATOR
                      ==
                      VARIABLE
                        numAlignments_dedupsortedbam
                      INT_LITERAL
                        0
                    BLOCK
                      ASSIGN_EXPRESSION
                        =
                        IDENTIFIER_LIST
                          ASSIGN_TARGET
                            VARIABLE
                              qcfile
                        CALL_FUNCTION
                          echo
                          ARGUMENT_LIST
                            CALL_FUNCTION
                              strcat
                              ARGUMENT_LIST
                                VARIABLE
                                  sampleName
                                STRING_LITERAL
                                  "\tALIGNMENT\tFAIL\tnovosort command did not produce alignments for "
                                CALL_FUNCTION
                                  filename
                                  ARGUMENT_LIST
                                    VARIABLE
                                      dedupsortedbam
                                STRING_LITERAL
                                  "\n"
                  EXPR_STMT
                    CALL_FUNCTION
                      assert
                      ARGUMENT_LIST
                        OPERATOR
                          >
                          VARIABLE
                            numAlignments_dedupsortedbam
                          INT_LITERAL
                            0
                        CALL_FUNCTION
                          strcat
                          ARGUMENT_LIST
                            STRING_LITERAL
                              "novosort command did not produce alignments for "
                            CALL_FUNCTION
                              filename
                              ARGUMENT_LIST
                                VARIABLE
                                  dedupsortedbam
                            STRING_LITERAL
                              "sorting and deduplication failed"
      EXPR_STMT
        CALL_FUNCTION
          trace
          ARGUMENT_LIST
            STRING_LITERAL
              "#############     END ALIGNMENT-DEDUPLICATION BLOCK                   ############"
      EXPR_STMT
        CALL_FUNCTION
          trace
          ARGUMENT_LIST
            STRING_LITERAL
              "########   ALIGNMENT QC TEST   FOR SAMPLE"
            VARIABLE
              sampleName
            STRING_LITERAL
              "             ###############"
      EXPR_STMT
        CALL_FUNCTION
          trace
          ARGUMENT_LIST
            STRING_LITERAL
              "########   QC rule1: duplication cutoff <= "
            ARRAY_LOAD
              VARIABLE
                vars
              STRING_LITERAL
                "DUP_CUTOFF"
            STRING_LITERAL
              "          ###############"
      EXPR_STMT
        CALL_FUNCTION
          trace
          ARGUMENT_LIST
            STRING_LITERAL
              "########   QC rule2: mapped_reads cutoff >= "
            ARRAY_LOAD
              VARIABLE
                vars
              STRING_LITERAL
                "MAP_CUTOFF"
            STRING_LITERAL
              "           ###############"
      ASSIGN_EXPRESSION
        =
        IDENTIFIER_LIST
          ASSIGN_TARGET
            VARIABLE
              flagstats
        CALL_FUNCTION
          samtools_flagstat
          ARGUMENT_LIST
            ARRAY_LOAD
              VARIABLE
                vars
              STRING_LITERAL
                "SAMTOOLSDIR"
            VARIABLE
              dedupsortedbam
      DECLARATION
        string
        DECLARE_ASSIGN
          DECLARE_VARIABLE_REST
            stat
            ARRAY
          CALL_FUNCTION
            file_lines
            ARGUMENT_LIST
              VARIABLE
                flagstats
      ASSIGN_EXPRESSION
        =
        IDENTIFIER_LIST
          ASSIGN_TARGET
            VARIABLE
              tot_mapped
        ARRAY_LOAD
          CALL_FUNCTION
            split
            ARGUMENT_LIST
              ARRAY_LOAD
                VARIABLE
                  stat
                INT_LITERAL
                  4
              STRING_LITERAL
                " "
          INT_LITERAL
            0
      ASSIGN_EXPRESSION
        =
        IDENTIFIER_LIST
          ASSIGN_TARGET
            VARIABLE
              tot_reads
        ARRAY_LOAD
          CALL_FUNCTION
            split
            ARGUMENT_LIST
              ARRAY_LOAD
                VARIABLE
                  stat
                INT_LITERAL
                  0
              STRING_LITERAL
                " "
          INT_LITERAL
            0
      ASSIGN_EXPRESSION
        =
        IDENTIFIER_LIST
          ASSIGN_TARGET
            VARIABLE
              tot_dups
        ARRAY_LOAD
          CALL_FUNCTION
            split
            ARGUMENT_LIST
              ARRAY_LOAD
                VARIABLE
                  stat
                INT_LITERAL
                  3
              STRING_LITERAL
                " "
          INT_LITERAL
            0
      ASSIGN_EXPRESSION
        =
        IDENTIFIER_LIST
          ASSIGN_TARGET
            VARIABLE
              perc_dup
        OPERATOR
          /
          OPERATOR
            *
            CALL_FUNCTION
              string2float
              ARGUMENT_LIST
                VARIABLE
                  tot_dups
            INT_LITERAL
              100
          CALL_FUNCTION
            string2float
            ARGUMENT_LIST
              VARIABLE
                tot_reads
      ASSIGN_EXPRESSION
        =
        IDENTIFIER_LIST
          ASSIGN_TARGET
            VARIABLE
              perc_mapped
        OPERATOR
          /
          OPERATOR
            *
            CALL_FUNCTION
              string2float
              ARGUMENT_LIST
                VARIABLE
                  tot_mapped
            INT_LITERAL
              100
          CALL_FUNCTION
            string2float
            ARGUMENT_LIST
              VARIABLE
                tot_reads
      IF_STATEMENT
        OPERATOR
          <
          VARIABLE
            perc_dup
          CALL_FUNCTION
            string2float
            ARGUMENT_LIST
              ARRAY_LOAD
                VARIABLE
                  vars
                STRING_LITERAL
                  "DUP_CUTOFF"
        BLOCK
          EXPR_STMT
            CALL_FUNCTION
              trace
              ARGUMENT_LIST
                OPERATOR
                  +
                  OPERATOR
                    +
                    OPERATOR
                      +
                      OPERATOR
                        +
                        OPERATOR
                          +
                          STRING_LITERAL
                            "#####  "
                          VARIABLE
                            sampleName
                        STRING_LITERAL
                          " passed first filter percent_duplicates with value"
                      VARIABLE
                        perc_dup
                    STRING_LITERAL
                      ", maximum cutoff is "
                  ARRAY_LOAD
                    VARIABLE
                      vars
                    STRING_LITERAL
                      "DUP_CUTOFF"
          IF_STATEMENT
            OPERATOR
              >
              VARIABLE
                perc_mapped
              CALL_FUNCTION
                string2float
                ARGUMENT_LIST
                  ARRAY_LOAD
                    VARIABLE
                      vars
                    STRING_LITERAL
                      "MAP_CUTOFF"
            BLOCK
              EXPR_STMT
                CALL_FUNCTION
                  trace
                  ARGUMENT_LIST
                    OPERATOR
                      +
                      OPERATOR
                        +
                        OPERATOR
                          +
                          OPERATOR
                            +
                            OPERATOR
                              +
                              STRING_LITERAL
                                "#####  "
                              VARIABLE
                                sampleName
                            STRING_LITERAL
                              " passed second filter map_cutoff with value"
                          VARIABLE
                            perc_mapped
                        STRING_LITERAL
                          ", minimum cutoff is "
                      ARRAY_LOAD
                        VARIABLE
                          vars
                        STRING_LITERAL
                          "MAP_CUTOFF"
              ASSIGN_EXPRESSION
                =
                IDENTIFIER_LIST
                  ASSIGN_TARGET
                    VARIABLE
                      qcfile
                CALL_FUNCTION
                  echo
                  ARGUMENT_LIST
                    OPERATOR
                      +
                      OPERATOR
                        +
                        OPERATOR
                          +
                          OPERATOR
                            +
                            OPERATOR
                              +
                              OPERATOR
                                +
                                OPERATOR
                                  +
                                  OPERATOR
                                    +
                                    VARIABLE
                                      sampleName
                                    STRING_LITERAL
                                      "\tQCTEST\tPASS\n\trule1 ok: percent_duplication="
                                  VARIABLE
                                    perc_dup
                                STRING_LITERAL
                                  "<? duplication_cutoff="
                              ARRAY_LOAD
                                VARIABLE
                                  vars
                                STRING_LITERAL
                                  "DUP_CUTOFF"
                            STRING_LITERAL
                              "\n\trule2 ok: percent_mapped="
                          VARIABLE
                            perc_mapped
                        STRING_LITERAL
                          ">? mapping_cutoff="
                      ARRAY_LOAD
                        VARIABLE
                          vars
                        STRING_LITERAL
                          "MAP_CUTOFF"
            BLOCK
              EXPR_STMT
                CALL_FUNCTION
                  trace
                  ARGUMENT_LIST
                    OPERATOR
                      +
                      OPERATOR
                        +
                        OPERATOR
                          +
                          OPERATOR
                            +
                            OPERATOR
                              +
                              STRING_LITERAL
                                "#####  "
                              VARIABLE
                                sampleName
                            STRING_LITERAL
                              " DID NOT pass second filter map_cutoff with value"
                          VARIABLE
                            perc_mapped
                        STRING_LITERAL
                          ", minimum cutoff is "
                      ARRAY_LOAD
                        VARIABLE
                          vars
                        STRING_LITERAL
                          "MAP_CUTOFF"
              ASSIGN_EXPRESSION
                =
                IDENTIFIER_LIST
                  ASSIGN_TARGET
                    VARIABLE
                      qcfile
                CALL_FUNCTION
                  echo
                  ARGUMENT_LIST
                    OPERATOR
                      +
                      OPERATOR
                        +
                        OPERATOR
                          +
                          OPERATOR
                            +
                            OPERATOR
                              +
                              OPERATOR
                                +
                                OPERATOR
                                  +
                                  OPERATOR
                                    +
                                    VARIABLE
                                      sampleName
                                    STRING_LITERAL
                                      "\tQCTEST\tFAIL\n\trule1 ok: percent_duplication="
                                  VARIABLE
                                    perc_dup
                                STRING_LITERAL
                                  "<? duplication_cutoff="
                              ARRAY_LOAD
                                VARIABLE
                                  vars
                                STRING_LITERAL
                                  "DUP_CUTOFF"
                            STRING_LITERAL
                              "\n\trule2 not ok: percent_mapped="
                          VARIABLE
                            perc_mapped
                        STRING_LITERAL
                          ">? mapping_cutoff="
                      ARRAY_LOAD
                        VARIABLE
                          vars
                        STRING_LITERAL
                          "MAP_CUTOFF"
        BLOCK
          EXPR_STMT
            CALL_FUNCTION
              trace
              ARGUMENT_LIST
                OPERATOR
                  +
                  OPERATOR
                    +
                    OPERATOR
                      +
                      OPERATOR
                        +
                        OPERATOR
                          +
                          STRING_LITERAL
                            "#####  "
                          VARIABLE
                            sampleName
                        STRING_LITERAL
                          " DID NOT pass first filter percent_duplicates with value"
                      VARIABLE
                        perc_dup
                    STRING_LITERAL
                      ", maximum cutoff is "
                  ARRAY_LOAD
                    VARIABLE
                      vars
                    STRING_LITERAL
                      "DUP_CUTOFF"
      EXPR_STMT
        CALL_FUNCTION
          trace
          ARGUMENT_LIST
            STRING_LITERAL
              "#############   WRAP UP the align_dedup stage   ############"
      ASSIGN_EXPRESSION
        =
        IDENTIFIER_LIST
          ASSIGN_TARGET
            VARIABLE
              indices
        CALL_FUNCTION
          split
          ARGUMENT_LIST
            ARRAY_LOAD
              VARIABLE
                vars
              STRING_LITERAL
                "CHRNAMES"
            STRING_LITERAL
              ":"
      DECLARATION
        int
        DECLARE_VARIABLE_REST
          chromosomes_processing_done
      WAIT_STATEMENT
        ARGUMENT_LIST
          VARIABLE
            dedupsortedbam
        BLOCK
          FOREACH_LOOP
            VARIABLE
              indices
            BLOCK
              EXPR_STMT
                CALL_FUNCTION
                  trace
                  ARGUMENT_LIST
                    OPERATOR
                      +
                      OPERATOR
                        +
                        OPERATOR
                          +
                          OPERATOR
                            +
                            STRING_LITERAL
                              "####   Realign-Vcall script for SAMPLE "
                            VARIABLE
                              sampleName
                          STRING_LITERAL
                            " chr="
                        VARIABLE
                          chr
                      STRING_LITERAL
                        "                             #######"
              DECLARATION
                file
                DECLARE_VARIABLE_REST
                  chrdedupsortedbam
                  MAPPING
                    CALL_FUNCTION
                      strcat
                      ARGUMENT_LIST
                        VARIABLE
                          RealignDir
                        VARIABLE
                          sampleName
                        STRING_LITERAL
                          "."
                        VARIABLE
                          chr
                        STRING_LITERAL
                          ".wdups.sorted.bam"
              DECLARATION
                file
                DECLARE_VARIABLE_REST
                  realignedbam
                  MAPPING
                    CALL_FUNCTION
                      strcat
                      ARGUMENT_LIST
                        VARIABLE
                          RealignDir
                        VARIABLE
                          sampleName
                        STRING_LITERAL
                          "."
                        VARIABLE
                          chr
                        STRING_LITERAL
                          ".realigned.bam"
              DECLARATION
                file
                DECLARE_VARIABLE_REST
                  recalibratedbam
                  MAPPING
                    CALL_FUNCTION
                      strcat
                      ARGUMENT_LIST
                        VARIABLE
                          RealignDir
                        VARIABLE
                          sampleName
                        STRING_LITERAL
                          "."
                        VARIABLE
                          chr
                        STRING_LITERAL
                          ".recalibrated.bam"
              DECLARATION
                file
                DECLARE_VARIABLE_REST
                  intervals
                  MAPPING
                    CALL_FUNCTION
                      strcat
                      ARGUMENT_LIST
                        VARIABLE
                          RealignDir
                        VARIABLE
                          sampleName
                        STRING_LITERAL
                          "."
                        VARIABLE
                          chr
                        STRING_LITERAL
                          ".realignTargetCreator.intervals"
              DECLARATION
                file
                DECLARE_VARIABLE_REST
                  recalreport
                  MAPPING
                    CALL_FUNCTION
                      strcat
                      ARGUMENT_LIST
                        VARIABLE
                          RealignDir
                        VARIABLE
                          sampleName
                        STRING_LITERAL
                          "."
                        VARIABLE
                          chr
                        STRING_LITERAL
                          ".recal_report.grp"
              DECLARATION
                file
                DECLARE_VARIABLE_REST
                  gvcfvariant
                  MAPPING
                    CALL_FUNCTION
                      strcat
                      ARGUMENT_LIST
                        VARIABLE
                          VarcallDir
                        VARIABLE
                          sampleName
                        STRING_LITERAL
                          "."
                        VARIABLE
                          chr
                        STRING_LITERAL
                          ".raw.g.vcf"
              DECLARATION
                file
                DECLARE_VARIABLE_REST
                  recalfiles
                  MAPPING
                    CALL_FUNCTION
                      strcat
                      ARGUMENT_LIST
                        OPERATOR
                          /
                          ARRAY_LOAD
                            VARIABLE
                              vars
                            STRING_LITERAL
                              "TMPDIR"
                          VARIABLE
                            sampleName
                        STRING_LITERAL
                          "."
                        VARIABLE
                          chr
                        STRING_LITERAL
                          ".recal_foundfiles.txt"
              DECLARATION
                file
                DECLARE_VARIABLE_REST
                  realfiles
                  MAPPING
                    CALL_FUNCTION
                      strcat
                      ARGUMENT_LIST
                        OPERATOR
                          /
                          ARRAY_LOAD
                            VARIABLE
                              vars
                            STRING_LITERAL
                              "TMPDIR"
                          VARIABLE
                            sampleName
                        STRING_LITERAL
                          "."
                        VARIABLE
                          chr
                        STRING_LITERAL
                          ".real_foundfiles.txt"
              EXPR_STMT
                CALL_FUNCTION
                  trace
                  ARGUMENT_LIST
                    OPERATOR
                      +
                      OPERATOR
                        +
                        OPERATOR
                          +
                          STRING_LITERAL
                            "#######   REALIGN-RECALIBRATION BLOCK STARTS HERE   "
                          VARIABLE
                            sampleName
                        VARIABLE
                          chr
                      STRING_LITERAL
                        "        ######"
              DECLARATION
                int
                DECLARE_VARIABLE_REST
                  ploidy
              IF_STATEMENT
                OPERATOR
                  ==
                  VARIABLE
                    chr
                  STRING_LITERAL
                    "M"
                BLOCK
                  ASSIGN_EXPRESSION
                    =
                    IDENTIFIER_LIST
                      ASSIGN_TARGET
                        VARIABLE
                          ploidy
                    INT_LITERAL
                      1
                BLOCK
                  ASSIGN_EXPRESSION
                    =
                    IDENTIFIER_LIST
                      ASSIGN_TARGET
                        VARIABLE
                          ploidy
                    INT_LITERAL
                      2
              STATEMENT_CHAIN
                ASSIGN_EXPRESSION
                  =
                  IDENTIFIER_LIST
                    ASSIGN_TARGET
                      VARIABLE
                        chrdedupsortedbam
                  CALL_FUNCTION
                    samtools_view
                    ARGUMENT_LIST
                      ARRAY_LOAD
                        VARIABLE
                          vars
                        STRING_LITERAL
                          "SAMTOOLSDIR"
                      VARIABLE
                        dedupsortedbam
                      CALL_FUNCTION
                        string2int
                        ARGUMENT_LIST
                          ARRAY_LOAD
                            VARIABLE
                              vars
                            STRING_LITERAL
                              "PBSCORES"
                      ARRAY_ELEMS
                        CALL_FUNCTION
                          strcat
                          ARGUMENT_LIST
                            VARIABLE
                              chr
                DECLARATION
                  int
                  DECLARE_ASSIGN
                    DECLARE_VARIABLE_REST
                      numAlignments_chrdedupsortedbam
                    CALL_FUNCTION
                      samtools_view2
                      ARGUMENT_LIST
                        ARRAY_LOAD
                          VARIABLE
                            vars
                          STRING_LITERAL
                            "SAMTOOLSDIR"
                        CALL_FUNCTION
                          filename
                          ARGUMENT_LIST
                            VARIABLE
                              chrdedupsortedbam
              IF_STATEMENT
                OPERATOR
                  ==
                  VARIABLE
                    numAlignments_chrdedupsortedbam
                  INT_LITERAL
                    0
                BLOCK
                  ASSIGN_EXPRESSION
                    =
                    IDENTIFIER_LIST
                      ASSIGN_TARGET
                        VARIABLE
                          qcfile
                    CALL_FUNCTION
                      echo
                      ARGUMENT_LIST
                        CALL_FUNCTION
                          strcat
                          ARGUMENT_LIST
                            VARIABLE
                              sampleName
                            STRING_LITERAL
                              "\tREALIGNMENT\tFAIL\tsamtools command did not produce alignments for "
                            CALL_FUNCTION
                              filename
                              ARGUMENT_LIST
                                VARIABLE
                                  chrdedupsortedbam
                            STRING_LITERAL
                              "\n"
              EXPR_STMT
                CALL_FUNCTION
                  assert
                  ARGUMENT_LIST
                    OPERATOR
                      >
                      VARIABLE
                        numAlignments_chrdedupsortedbam
                      INT_LITERAL
                        0
                    CALL_FUNCTION
                      strcat
                      ARGUMENT_LIST
                        STRING_LITERAL
                          "samtools command did not produce alignments for "
                        CALL_FUNCTION
                          filename
                          ARGUMENT_LIST
                            VARIABLE
                              chrdedupsortedbam
                        STRING_LITERAL
                          "splitting by chromosome failed"
              EXPR_STMT
                CALL_FUNCTION
                  samtools_index
                  ARGUMENT_LIST
                    ARRAY_LOAD
                      VARIABLE
                        vars
                      STRING_LITERAL
                        "SAMTOOLSDIR"
                    VARIABLE
                      chrdedupsortedbam
              ASSIGN_EXPRESSION
                =
                IDENTIFIER_LIST
                  ASSIGN_TARGET
                    VARIABLE
                      recalfiles
                CALL_FUNCTION
                  find_files
                  ARGUMENT_LIST
                    CALL_FUNCTION
                      strcat
                      ARGUMENT_LIST
                        OPERATOR
                          /
                          ARRAY_LOAD
                            VARIABLE
                              vars
                            STRING_LITERAL
                              "REFGENOMEDIR"
                          ARRAY_LOAD
                            VARIABLE
                              vars
                            STRING_LITERAL
                              "INDELDIR"
                        STRING_LITERAL
                          "/"
                    CALL_FUNCTION
                      strcat
                      ARGUMENT_LIST
                        STRING_LITERAL
                          "*"
                        VARIABLE
                          chr
                        STRING_LITERAL
                          ".vcf"
              DECLARATION
                string
                DECLARE_ASSIGN
                  DECLARE_VARIABLE_REST
                    recalparmsindels
                    ARRAY
                  CALL_FUNCTION
                    split
                    ARGUMENT_LIST
                      CALL_FUNCTION
                        trim
                        ARGUMENT_LIST
                          CALL_FUNCTION
                            replace_all
                            ARGUMENT_LIST
                              CALL_FUNCTION
                                read
                                ARGUMENT_LIST
                                  CALL_FUNCTION
                                    sed
                                    ARGUMENT_LIST
                                      VARIABLE
                                        recalfiles
                                      STRING_LITERAL
                                        "s/^/--knownSites /g"
                              STRING_LITERAL
                                "\n"
                              STRING_LITERAL
                                " "
                              INT_LITERAL
                                0
                      STRING_LITERAL
                        " "
              ASSIGN_EXPRESSION
                =
                IDENTIFIER_LIST
                  ASSIGN_TARGET
                    VARIABLE
                      realfiles
                CALL_FUNCTION
                  find_files
                  ARGUMENT_LIST
                    CALL_FUNCTION
                      strcat
                      ARGUMENT_LIST
                        OPERATOR
                          /
                          ARRAY_LOAD
                            VARIABLE
                              vars
                            STRING_LITERAL
                              "REFGENOMEDIR"
                          ARRAY_LOAD
                            VARIABLE
                              vars
                            STRING_LITERAL
                              "INDELDIR"
                        STRING_LITERAL
                          "/"
                    CALL_FUNCTION
                      strcat
                      ARGUMENT_LIST
                        STRING_LITERAL
                          "*"
                        VARIABLE
                          chr
                        STRING_LITERAL
                          ".vcf"
              DECLARATION
                string
                DECLARE_ASSIGN
                  DECLARE_VARIABLE_REST
                    realparms
                    ARRAY
                  CALL_FUNCTION
                    split
                    ARGUMENT_LIST
                      CALL_FUNCTION
                        trim
                        ARGUMENT_LIST
                          CALL_FUNCTION
                            replace_all
                            ARGUMENT_LIST
                              CALL_FUNCTION
                                read
                                ARGUMENT_LIST
                                  CALL_FUNCTION
                                    sed
                                    ARGUMENT_LIST
                                      VARIABLE
                                        recalfiles
                                      STRING_LITERAL
                                        "s/^/-known /g"
                              STRING_LITERAL
                                "\n"
                              STRING_LITERAL
                                " "
                              INT_LITERAL
                                0
                      STRING_LITERAL
                        " "
              ASSIGN_EXPRESSION
                =
                IDENTIFIER_LIST
                  ASSIGN_TARGET
                    VARIABLE
                      intervals
                CALL_FUNCTION
                  RealignerTargetCreator
                  ARGUMENT_LIST
                    ARRAY_LOAD
                      VARIABLE
                        vars
                      STRING_LITERAL
                        "JAVADIR"
                    CALL_FUNCTION
                      strcat
                      ARGUMENT_LIST
                        OPERATOR
                          /
                          ARRAY_LOAD
                            VARIABLE
                              vars
                            STRING_LITERAL
                              "GATKDIR"
                          STRING_LITERAL
                            "GenomeAnalysisTK.jar"
                    OPERATOR
                      /
                      ARRAY_LOAD
                        VARIABLE
                          vars
                        STRING_LITERAL
                          "REFGENOMEDIR"
                      ARRAY_LOAD
                        VARIABLE
                          vars
                        STRING_LITERAL
                          "REFGENOME"
                    VARIABLE
                      chrdedupsortedbam
                    CALL_FUNCTION
                      string2int
                      ARGUMENT_LIST
                        ARRAY_LOAD
                          VARIABLE
                            vars
                          STRING_LITERAL
                            "PBSCORES"
                    VARIABLE
                      realparms
              STATEMENT_CHAIN
                ASSIGN_EXPRESSION
                  =
                  IDENTIFIER_LIST
                    ASSIGN_TARGET
                      VARIABLE
                        realignedbam
                  CALL_FUNCTION
                    IndelRealigner
                    ARGUMENT_LIST
                      ARRAY_LOAD
                        VARIABLE
                          vars
                        STRING_LITERAL
                          "JAVADIR"
                      CALL_FUNCTION
                        strcat
                        ARGUMENT_LIST
                          OPERATOR
                            /
                            ARRAY_LOAD
                              VARIABLE
                                vars
                              STRING_LITERAL
                                "GATKDIR"
                            STRING_LITERAL
                              "GenomeAnalysisTK.jar"
                      OPERATOR
                        /
                        ARRAY_LOAD
                          VARIABLE
                            vars
                          STRING_LITERAL
                            "REFGENOMEDIR"
                        ARRAY_LOAD
                          VARIABLE
                            vars
                          STRING_LITERAL
                            "REFGENOME"
                      VARIABLE
                        chrdedupsortedbam
                      VARIABLE
                        realparms
                      VARIABLE
                        intervals
                DECLARATION
                  int
                  DECLARE_ASSIGN
                    DECLARE_VARIABLE_REST
                      numAlignments_realignedbam
                    CALL_FUNCTION
                      samtools_view2
                      ARGUMENT_LIST
                        ARRAY_LOAD
                          VARIABLE
                            vars
                          STRING_LITERAL
                            "SAMTOOLSDIR"
                        CALL_FUNCTION
                          filename
                          ARGUMENT_LIST
                            VARIABLE
                              realignedbam
              IF_STATEMENT
                OPERATOR
                  ==
                  VARIABLE
                    numAlignments_realignedbam
                  INT_LITERAL
                    0
                BLOCK
                  ASSIGN_EXPRESSION
                    =
                    IDENTIFIER_LIST
                      ASSIGN_TARGET
                        VARIABLE
                          qcfile
                    CALL_FUNCTION
                      echo
                      ARGUMENT_LIST
                        CALL_FUNCTION
                          strcat
                          ARGUMENT_LIST
                            VARIABLE
                              sampleName
                            STRING_LITERAL
                              "\tREALIGNMENT\tFAIL\tGATK IndelRealigner command did not produce alignments for "
                            CALL_FUNCTION
                              filename
                              ARGUMENT_LIST
                                VARIABLE
                                  realignedbam
                            STRING_LITERAL
                              "\n"
              EXPR_STMT
                CALL_FUNCTION
                  assert
                  ARGUMENT_LIST
                    OPERATOR
                      >
                      VARIABLE
                        numAlignments_realignedbam
                      INT_LITERAL
                        0
                    CALL_FUNCTION
                      strcat
                      ARGUMENT_LIST
                        STRING_LITERAL
                          "GATK IndelRealigner command did not produce alignments for "
                        CALL_FUNCTION
                          filename
                          ARGUMENT_LIST
                            VARIABLE
                              realignedbam
              ASSIGN_EXPRESSION
                =
                IDENTIFIER_LIST
                  ASSIGN_TARGET
                    VARIABLE
                      recalreport
                CALL_FUNCTION
                  BaseRecalibrator
                  ARGUMENT_LIST
                    ARRAY_LOAD
                      VARIABLE
                        vars
                      STRING_LITERAL
                        "JAVADIR"
                    CALL_FUNCTION
                      strcat
                      ARGUMENT_LIST
                        OPERATOR
                          /
                          ARRAY_LOAD
                            VARIABLE
                              vars
                            STRING_LITERAL
                              "GATKDIR"
                          STRING_LITERAL
                            "GenomeAnalysisTK.jar"
                    OPERATOR
                      /
                      ARRAY_LOAD
                        VARIABLE
                          vars
                        STRING_LITERAL
                          "REFGENOMEDIR"
                      ARRAY_LOAD
                        VARIABLE
                          vars
                        STRING_LITERAL
                          "REFGENOME"
                    VARIABLE
                      realignedbam
                    CALL_FUNCTION
                      string2int
                      ARGUMENT_LIST
                        ARRAY_LOAD
                          VARIABLE
                            vars
                          STRING_LITERAL
                            "PBSCORES"
                    VARIABLE
                      recalparmsindels
                    OPERATOR
                      /
                      ARRAY_LOAD
                        VARIABLE
                          vars
                        STRING_LITERAL
                          "REFGENOMEDIR"
                      ARRAY_LOAD
                        VARIABLE
                          vars
                        STRING_LITERAL
                          "DBSNP"
              STATEMENT_CHAIN
                ASSIGN_EXPRESSION
                  =
                  IDENTIFIER_LIST
                    ASSIGN_TARGET
                      VARIABLE
                        recalibratedbam
                  CALL_FUNCTION
                    PrintReads
                    ARGUMENT_LIST
                      ARRAY_LOAD
                        VARIABLE
                          vars
                        STRING_LITERAL
                          "JAVADIR"
                      CALL_FUNCTION
                        strcat
                        ARGUMENT_LIST
                          OPERATOR
                            /
                            ARRAY_LOAD
                              VARIABLE
                                vars
                              STRING_LITERAL
                                "GATKDIR"
                            STRING_LITERAL
                              "GenomeAnalysisTK.jar"
                      OPERATOR
                        /
                        ARRAY_LOAD
                          VARIABLE
                            vars
                          STRING_LITERAL
                            "REFGENOMEDIR"
                        ARRAY_LOAD
                          VARIABLE
                            vars
                          STRING_LITERAL
                            "REFGENOME"
                      VARIABLE
                        realignedbam
                      CALL_FUNCTION
                        string2int
                        ARGUMENT_LIST
                          ARRAY_LOAD
                            VARIABLE
                              vars
                            STRING_LITERAL
                              "PBSCORES"
                      VARIABLE
                        recalreport
                DECLARATION
                  int
                  DECLARE_ASSIGN
                    DECLARE_VARIABLE_REST
                      numAlignments_recalibratedbam
                    CALL_FUNCTION
                      samtools_view2
                      ARGUMENT_LIST
                        ARRAY_LOAD
                          VARIABLE
                            vars
                          STRING_LITERAL
                            "SAMTOOLSDIR"
                        CALL_FUNCTION
                          filename
                          ARGUMENT_LIST
                            VARIABLE
                              recalibratedbam
              IF_STATEMENT
                OPERATOR
                  ==
                  VARIABLE
                    numAlignments_recalibratedbam
                  INT_LITERAL
                    0
                BLOCK
                  ASSIGN_EXPRESSION
                    =
                    IDENTIFIER_LIST
                      ASSIGN_TARGET
                        VARIABLE
                          qcfile
                    CALL_FUNCTION
                      echo
                      ARGUMENT_LIST
                        CALL_FUNCTION
                          strcat
                          ARGUMENT_LIST
                            VARIABLE
                              sampleName
                            STRING_LITERAL
                              "\tRECALIBRATION\tFAIL\tGATK BQSR Recalibration command did not produce alignments for "
                            CALL_FUNCTION
                              filename
                              ARGUMENT_LIST
                                VARIABLE
                                  recalibratedbam
                            STRING_LITERAL
                              "\n"
              EXPR_STMT
                CALL_FUNCTION
                  assert
                  ARGUMENT_LIST
                    OPERATOR
                      >
                      VARIABLE
                        numAlignments_recalibratedbam
                      INT_LITERAL
                        0
                    CALL_FUNCTION
                      strcat
                      ARGUMENT_LIST
                        STRING_LITERAL
                          "GATK BQSR Recalibrator command did not produce alignments for "
                        CALL_FUNCTION
                          filename
                          ARGUMENT_LIST
                            VARIABLE
                              recalibratedbam
              EXPR_STMT
                CALL_FUNCTION
                  trace
                  ARGUMENT_LIST
                    OPERATOR
                      +
                      OPERATOR
                        +
                        OPERATOR
                          +
                          OPERATOR
                            +
                            STRING_LITERAL
                              "#############    GATK VARIANT CALLING   FOR SAMPLE "
                            VARIABLE
                              sampleName
                          STRING_LITERAL
                            " : "
                        VARIABLE
                          chr
                      STRING_LITERAL
                        "   ###########"
              STATEMENT_CHAIN
                ASSIGN_EXPRESSION
                  =
                  IDENTIFIER_LIST
                    ASSIGN_TARGET
                      VARIABLE
                        gvcfvariant
                  CALL_FUNCTION
                    HaplotypeCaller
                    ARGUMENT_LIST
                      ARRAY_LOAD
                        VARIABLE
                          vars
                        STRING_LITERAL
                          "JAVADIR"
                      CALL_FUNCTION
                        strcat
                        ARGUMENT_LIST
                          OPERATOR
                            /
                            ARRAY_LOAD
                              VARIABLE
                                vars
                              STRING_LITERAL
                                "GATKDIR"
                            STRING_LITERAL
                              "GenomeAnalysisTK.jar"
                      OPERATOR
                        /
                        ARRAY_LOAD
                          VARIABLE
                            vars
                          STRING_LITERAL
                            "REFGENOMEDIR"
                        ARRAY_LOAD
                          VARIABLE
                            vars
                          STRING_LITERAL
                            "REFGENOME"
                      VARIABLE
                        recalibratedbam
                      OPERATOR
                        /
                        ARRAY_LOAD
                          VARIABLE
                            vars
                          STRING_LITERAL
                            "REFGENOMEDIR"
                        ARRAY_LOAD
                          VARIABLE
                            vars
                          STRING_LITERAL
                            "DBSNP"
                      CALL_FUNCTION
                        string2int
                        ARGUMENT_LIST
                          ARRAY_LOAD
                            VARIABLE
                              vars
                            STRING_LITERAL
                              "PBSCORES"
                      VARIABLE
                        ploidy
                      VARIABLE
                        chr
                IF_STATEMENT
                  OPERATOR
                    ==
                    CALL_FUNCTION
                      size
                      ARGUMENT_LIST
                        VARIABLE
                          indices
                    CALL_FUNCTION
                      size
                      ARGUMENT_LIST
                        CALL_FUNCTION
                          glob
                          ARGUMENT_LIST
                            CALL_FUNCTION
                              strcat
                              ARGUMENT_LIST
                                VARIABLE
                                  VarcallDir
                                VARIABLE
                                  sampleName
                                STRING_LITERAL
                                  ".*.raw.g.vcf"
                  BLOCK
                    ASSIGN_EXPRESSION
                      =
                      IDENTIFIER_LIST
                        ASSIGN_TARGET
                          VARIABLE
                            chromosomes_processing_done
                      INT_LITERAL
                        1
            chr
      WAIT_STATEMENT
        ARGUMENT_LIST
          VARIABLE
            chromosomes_processing_done
        BLOCK
          ASSIGN_EXPRESSION
            =
            IDENTIFIER_LIST
              ASSIGN_TARGET
                VARIABLE
                  chr_bamListfile
            CALL_FUNCTION
              find_files
              ARGUMENT_LIST
                VARIABLE
                  RealignDir
                CALL_FUNCTION
                  strcat
                  ARGUMENT_LIST
                    VARIABLE
                      sampleName
                    STRING_LITERAL
                      ".*.recalibrated.bam"
          ASSIGN_EXPRESSION
            =
            IDENTIFIER_LIST
              ASSIGN_TARGET
                VARIABLE
                  chr_vcfListfile
            CALL_FUNCTION
              find_files
              ARGUMENT_LIST
                VARIABLE
                  VarcallDir
                CALL_FUNCTION
                  strcat
                  ARGUMENT_LIST
                    VARIABLE
                      sampleName
                    STRING_LITERAL
                      ".*.raw.g.vcf"
      EXPR_STMT
        CALL_FUNCTION
          trace
          ARGUMENT_LIST
            OPERATOR
              +
              OPERATOR
                +
                STRING_LITERAL
                  "#######   MERGE BAMS BLOCK STARTS HERE  FOR             "
                VARIABLE
                  sampleName
              STRING_LITERAL
                "      ######"
      STATEMENT_CHAIN
        DECLARATION
          string
          DECLARE_ASSIGN
            DECLARE_VARIABLE_REST
              chr_bamList
              ARRAY
            CALL_FUNCTION
              split
              ARGUMENT_LIST
                CALL_FUNCTION
                  trim
                  ARGUMENT_LIST
                    CALL_FUNCTION
                      replace_all
                      ARGUMENT_LIST
                        CALL_FUNCTION
                          read
                          ARGUMENT_LIST
                            VARIABLE
                              chr_bamListfile
                        STRING_LITERAL
                          "\n"
                        STRING_LITERAL
                          " "
                        INT_LITERAL
                          0
                STRING_LITERAL
                  " "
        STATEMENT_CHAIN
          ASSIGN_EXPRESSION
            =
            IDENTIFIER_LIST
              ASSIGN_TARGET
                VARIABLE
                  outbam
            CALL_FUNCTION
              novosort
              ARGUMENT_LIST
                CALL_FUNCTION
                  strcat
                  ARGUMENT_LIST
                    ARRAY_LOAD
                      VARIABLE
                        vars
                      STRING_LITERAL
                        "NOVOCRAFTDIR"
                    STRING_LITERAL
                      "/"
                    STRING_LITERAL
                      "novosort"
                VARIABLE
                  chr_bamList
                ARRAY_LOAD
                  VARIABLE
                    vars
                  STRING_LITERAL
                    "TMPDIR"
                CALL_FUNCTION
                  string2int
                  ARGUMENT_LIST
                    ARRAY_LOAD
                      VARIABLE
                        vars
                      STRING_LITERAL
                        "PBSCORES"
                ARRAY_ELEMS
          STATEMENT_CHAIN
            ASSIGN_EXPRESSION
              =
              IDENTIFIER_LIST
                ASSIGN_TARGET
                  VARIABLE
                    mergedbam
              CALL_FUNCTION
                cp
                ARGUMENT_LIST
                  VARIABLE
                    outbam
            DECLARATION
              int
              DECLARE_ASSIGN
                DECLARE_VARIABLE_REST
                  numAlignments_mergedbam
                CALL_FUNCTION
                  samtools_view2
                  ARGUMENT_LIST
                    ARRAY_LOAD
                      VARIABLE
                        vars
                      STRING_LITERAL
                        "SAMTOOLSDIR"
                    CALL_FUNCTION
                      filename
                      ARGUMENT_LIST
                        VARIABLE
                          mergedbam
      IF_STATEMENT
        OPERATOR
          ==
          VARIABLE
            numAlignments_mergedbam
          INT_LITERAL
            0
        BLOCK
          ASSIGN_EXPRESSION
            =
            IDENTIFIER_LIST
              ASSIGN_TARGET
                VARIABLE
                  qcfile
            CALL_FUNCTION
              echo
              ARGUMENT_LIST
                CALL_FUNCTION
                  strcat
                  ARGUMENT_LIST
                    VARIABLE
                      sampleName
                    STRING_LITERAL
                      "\tMERGE\tFAIL\tnovosort command did not produce alignments for "
                    CALL_FUNCTION
                      filename
                      ARGUMENT_LIST
                        VARIABLE
                          mergedbam
                    STRING_LITERAL
                      "\n"
      EXPR_STMT
        CALL_FUNCTION
          assert
          ARGUMENT_LIST
            OPERATOR
              >
              VARIABLE
                numAlignments_mergedbam
              INT_LITERAL
                0
            CALL_FUNCTION
              strcat
              ARGUMENT_LIST
                STRING_LITERAL
                  "novosort command did not produce alignments for "
                CALL_FUNCTION
                  filename
                  ARGUMENT_LIST
                    VARIABLE
                      mergedbam
      EXPR_STMT
        CALL_FUNCTION
          trace
          ARGUMENT_LIST
            OPERATOR
              +
              OPERATOR
                +
                STRING_LITERAL
                  "#######   MERGE VCFs BLOCK STARTS HERE  FOR             "
                VARIABLE
                  sampleName
              STRING_LITERAL
                "       ######"
      STATEMENT_CHAIN
        DECLARATION
          string
          DECLARE_ASSIGN
            DECLARE_VARIABLE_REST
              chr_vcfList
              ARRAY
            CALL_FUNCTION
              split
              ARGUMENT_LIST
                CALL_FUNCTION
                  trim
                  ARGUMENT_LIST
                    CALL_FUNCTION
                      replace_all
                      ARGUMENT_LIST
                        CALL_FUNCTION
                          read
                          ARGUMENT_LIST
                            CALL_FUNCTION
                              sed
                              ARGUMENT_LIST
                                VARIABLE
                                  chr_vcfListfile
                                STRING_LITERAL
                                  "s/^/--variant /g"
                        STRING_LITERAL
                          "\n"
                        STRING_LITERAL
                          " "
                        INT_LITERAL
                          0
                STRING_LITERAL
                  " "
        STATEMENT_CHAIN
          ASSIGN_EXPRESSION
            =
            IDENTIFIER_LIST
              ASSIGN_TARGET
                VARIABLE
                  rawvariant
            CALL_FUNCTION
              CombineGVCFs
              ARGUMENT_LIST
                ARRAY_LOAD
                  VARIABLE
                    vars
                  STRING_LITERAL
                    "JAVADIR"
                CALL_FUNCTION
                  strcat
                  ARGUMENT_LIST
                    OPERATOR
                      /
                      ARRAY_LOAD
                        VARIABLE
                          vars
                        STRING_LITERAL
                          "GATKDIR"
                      STRING_LITERAL
                        "GenomeAnalysisTK.jar"
                OPERATOR
                  /
                  ARRAY_LOAD
                    VARIABLE
                      vars
                    STRING_LITERAL
                      "REFGENOMEDIR"
                  ARRAY_LOAD
                    VARIABLE
                      vars
                    STRING_LITERAL
                      "REFGENOME"
                OPERATOR
                  /
                  ARRAY_LOAD
                    VARIABLE
                      vars
                    STRING_LITERAL
                      "REFGENOMEDIR"
                  ARRAY_LOAD
                    VARIABLE
                      vars
                    STRING_LITERAL
                      "DBSNP"
                VARIABLE
                  chr_vcfList
          STATEMENT_CHAIN
            ASSIGN_EXPRESSION
              =
              IDENTIFIER_LIST
                ASSIGN_TARGET
                  VARIABLE
                    mergedvariant
              CALL_FUNCTION
                cp
                ARGUMENT_LIST
                  VARIABLE
                    rawvariant
            IF_STATEMENT
              OPERATOR
                ==
                CALL_FUNCTION
                  size
                  ARGUMENT_LIST
                    VARIABLE
                      sampleLines
                CALL_FUNCTION
                  size
                  ARGUMENT_LIST
                    CALL_FUNCTION
                      glob
                      ARGUMENT_LIST
                        CALL_FUNCTION
                          strcat
                          ARGUMENT_LIST
                            OPERATOR
                              /
                              ARRAY_LOAD
                                VARIABLE
                                  vars
                                STRING_LITERAL
                                  "OUTPUTDIR"
                              ARRAY_LOAD
                                VARIABLE
                                  vars
                                STRING_LITERAL
                                  "DELIVERYFOLDER"
                            STRING_LITERAL
                              "/*.GATKCombineGVCF.raw.vcf"
              BLOCK
                ASSIGN_EXPRESSION
                  =
                  IDENTIFIER_LIST
                    ASSIGN_TARGET
                      VARIABLE
                        samples_processing_done
                  INT_LITERAL
                    1
    sample
  EXPR_STMT
    CALL_FUNCTION
      trace
      ARGUMENT_LIST
        STRING_LITERAL
          "####    Now launching joint_genotyping script for all SAMPLEs: each 200 together        ##########"
  DECLARATION
    file
    DECLARE_VARIABLE_REST
      jointVCF
      MAPPING
        CALL_FUNCTION
          strcat
          ARGUMENT_LIST
            OPERATOR
              /
              ARRAY_LOAD
                VARIABLE
                  vars
                STRING_LITERAL
                  "OUTPUTDIR"
              ARRAY_LOAD
                VARIABLE
                  vars
                STRING_LITERAL
                  "DELIVERYFOLDER"
            STRING_LITERAL
              "/jointVCFs/"
            STRING_LITERAL
              "jointVCFcalled.vcf"
  DECLARATION
    file
    DECLARE_VARIABLE_REST
      variantFiles
      MAPPING
        CALL_FUNCTION
          strcat
          ARGUMENT_LIST
            ARRAY_LOAD
              VARIABLE
                vars
              STRING_LITERAL
                "TMPDIR"
            STRING_LITERAL
              "/variantFiles.txt"
  EXPR_STMT
    CALL_FUNCTION
      mkdir
      ARGUMENT_LIST
        CALL_FUNCTION
          strcat
          ARGUMENT_LIST
            OPERATOR
              /
              ARRAY_LOAD
                VARIABLE
                  vars
                STRING_LITERAL
                  "OUTPUTDIR"
              ARRAY_LOAD
                VARIABLE
                  vars
                STRING_LITERAL
                  "DELIVERYFOLDER"
            STRING_LITERAL
              "/jointVCFs"
  WAIT_STATEMENT
    ARGUMENT_LIST
      VARIABLE
        samples_processing_done
    BLOCK
      STATEMENT_CHAIN
        ASSIGN_EXPRESSION
          =
          IDENTIFIER_LIST
            ASSIGN_TARGET
              VARIABLE
                variantFiles
          CALL_FUNCTION
            find_files
            ARGUMENT_LIST
              OPERATOR
                /
                ARRAY_LOAD
                  VARIABLE
                    vars
                  STRING_LITERAL
                    "OUTPUTDIR"
                ARRAY_LOAD
                  VARIABLE
                    vars
                  STRING_LITERAL
                    "DELIVERYFOLDER"
              CALL_FUNCTION
                strcat
                ARGUMENT_LIST
                  STRING_LITERAL
                    "*.GATKCombineGVCF.raw.vcf"
        STATEMENT_CHAIN
          DECLARATION
            string
            DECLARE_ASSIGN
              DECLARE_VARIABLE_REST
                varlist
                ARRAY
              CALL_FUNCTION
                split
                ARGUMENT_LIST
                  CALL_FUNCTION
                    trim
                    ARGUMENT_LIST
                      CALL_FUNCTION
                        replace_all
                        ARGUMENT_LIST
                          CALL_FUNCTION
                            read
                            ARGUMENT_LIST
                              CALL_FUNCTION
                                sed
                                ARGUMENT_LIST
                                  VARIABLE
                                    variantFiles
                                  STRING_LITERAL
                                    "s/^/--variant /g"
                          STRING_LITERAL
                            "\n"
                          STRING_LITERAL
                            " "
                          INT_LITERAL
                            0
                  STRING_LITERAL
                    " "
          ASSIGN_EXPRESSION
            =
            IDENTIFIER_LIST
              ASSIGN_TARGET
                VARIABLE
                  jointVCF
            CALL_FUNCTION
              GenotypeGVCFs
              ARGUMENT_LIST
                ARRAY_LOAD
                  VARIABLE
                    vars
                  STRING_LITERAL
                    "JAVADIR"
                CALL_FUNCTION
                  strcat
                  ARGUMENT_LIST
                    OPERATOR
                      /
                      ARRAY_LOAD
                        VARIABLE
                          vars
                        STRING_LITERAL
                          "GATKDIR"
                      STRING_LITERAL
                        "GenomeAnalysisTK.jar"
                OPERATOR
                  /
                  ARRAY_LOAD
                    VARIABLE
                      vars
                    STRING_LITERAL
                      "REFGENOMEDIR"
                  ARRAY_LOAD
                    VARIABLE
                      vars
                    STRING_LITERAL
                      "REFGENOME"
                VARIABLE
                  varlist
  <EOF>

DEBUG builtins.swift:257: Entered module VCcallingPipeline on pass DEFINITIONS
DEBUG VCcallingPipeline.swift:4: Resolved sys to /usr/local/src/swift-t-1.1/turbine/export/sys.swift
DEBUG VCcallingPipeline.swift:4: Loading new module sys
DEBUG VCcallingPipeline.swift:4: printTree:
PROGRAM
  DEFINE_BUILTIN_FUNCTION
    argc
    TYPE_PARAMETERS
    FORMAL_ARGUMENT_LIST
      DECLARATION
        MULTI_TYPE
          int
        DECLARE_VARIABLE_REST
          c
    FORMAL_ARGUMENT_LIST
    TCL_PACKAGE
      "turbine"
      "0.0.2"
    TCL_FUN_REF
      "argc_get"
    INLINE_TCL
      "set <<c>> [ turbine::argc_get_impl ]"
    ANNOTATION
      pure
  DEFINE_BUILTIN_FUNCTION
    args
    TYPE_PARAMETERS
    FORMAL_ARGUMENT_LIST
      DECLARATION
        MULTI_TYPE
          string
        DECLARE_VARIABLE_REST
          s
    FORMAL_ARGUMENT_LIST
    TCL_PACKAGE
      "turbine"
      "0.0.2"
    TCL_FUN_REF
      "args_get"
    INLINE_TCL
      "set <<s>> [ turbine::args_get_local ]"
    ANNOTATION
      pure
  DEFINE_BUILTIN_FUNCTION
    argv_contains
    TYPE_PARAMETERS
    FORMAL_ARGUMENT_LIST
      DECLARATION
        MULTI_TYPE
          boolean
        DECLARE_VARIABLE_REST
          b
    FORMAL_ARGUMENT_LIST
      DECLARATION
        MULTI_TYPE
          string
        DECLARE_VARIABLE_REST
          key
    TCL_PACKAGE
      "turbine"
      "0.0.2"
    TCL_FUN_REF
      "argv_contains"
    INLINE_TCL
      "set <<b>> [ turbine::argv_contains_impl <<key>> ]"
    ANNOTATION
      pure
  DEFINE_BUILTIN_FUNCTION
    argv_accept
    TYPE_PARAMETERS
    FORMAL_ARGUMENT_LIST
    FORMAL_ARGUMENT_LIST
      DECLARATION
        MULTI_TYPE
          string
        DECLARE_VARIABLE_REST
          keys
        ...
    TCL_PACKAGE
      "turbine"
      "0.0.2"
    TCL_FUN_REF
      "argv_accept"
    INLINE_TCL
      "turbine::argv_accept_impl [ list <<keys>> ]"
  DEFINE_BUILTIN_FUNCTION
    argv
    TYPE_PARAMETERS
    FORMAL_ARGUMENT_LIST
      DECLARATION
        MULTI_TYPE
          string
        DECLARE_VARIABLE_REST
          s
    FORMAL_ARGUMENT_LIST
      DECLARATION
        MULTI_TYPE
          string
        DECLARE_VARIABLE_REST
          key
      DECLARATION
        MULTI_TYPE
          string
        DECLARE_VARIABLE_REST
          default_val
        ...
    TCL_PACKAGE
      "turbine"
      "0.0.2"
    TCL_FUN_REF
      "argv_get"
    INLINE_TCL
      "set <<s>> [ turbine::argv_get_impl <<key>> <<default_val>> ]"
    ANNOTATION
      pure
    ANNOTATION
      implements
      argv
  DEFINE_BUILTIN_FUNCTION
    argp
    TYPE_PARAMETERS
    FORMAL_ARGUMENT_LIST
      DECLARATION
        MULTI_TYPE
          string
        DECLARE_VARIABLE_REST
          s
    FORMAL_ARGUMENT_LIST
      DECLARATION
        MULTI_TYPE
          int
        DECLARE_VARIABLE_REST
          pos
      DECLARATION
        MULTI_TYPE
          string
        DECLARE_VARIABLE_REST
          default_val
        ...
    TCL_PACKAGE
      "turbine"
      "0.0.2"
    TCL_FUN_REF
      "argp_get"
    INLINE_TCL
      "set <<s>> [ turbine::argp_get_impl <<pos>> <<default_val>> ]"
    ANNOTATION
      pure
  DEFINE_BUILTIN_FUNCTION
    getenv
    TYPE_PARAMETERS
    FORMAL_ARGUMENT_LIST
      DECLARATION
        MULTI_TYPE
          string
        DECLARE_VARIABLE_REST
          s
    FORMAL_ARGUMENT_LIST
      DECLARATION
        MULTI_TYPE
          string
        DECLARE_VARIABLE_REST
          key
    TCL_PACKAGE
      "turbine"
      "0.0.2"
    TCL_FUN_REF
      "getenv"
    INLINE_TCL
      "set <<s>> [ turbine::getenv_impl <<key>> ]"
    ANNOTATION
      pure
  DEFINE_BUILTIN_FUNCTION
    sleep
    TYPE_PARAMETERS
    FORMAL_ARGUMENT_LIST
      DECLARATION
        MULTI_TYPE
          void
        DECLARE_VARIABLE_REST
          v
    FORMAL_ARGUMENT_LIST
      DECLARATION
        MULTI_TYPE
          float
        DECLARE_VARIABLE_REST
          seconds
    TCL_PACKAGE
      "turbine"
      "0.0.4"
    TCL_FUN_REF
      "sleep"
    INLINE_TCL
      "if { <<seconds>> > 0 } { after [ expr {round(<<seconds>> * 1000)} ] }"
    ANNOTATION
      dispatch
      WORKER
  DEFINE_BUILTIN_FUNCTION
    clock_seconds
    TYPE_PARAMETERS
    FORMAL_ARGUMENT_LIST
      DECLARATION
        MULTI_TYPE
          int
        DECLARE_VARIABLE_REST
          t
    FORMAL_ARGUMENT_LIST
    TCL_PACKAGE
      "turbine"
      "0.1"
    INLINE_TCL
      "set <<t>> [ clock seconds ]"
  DEFINE_BUILTIN_FUNCTION
    clock
    TYPE_PARAMETERS
    FORMAL_ARGUMENT_LIST
      DECLARATION
        MULTI_TYPE
          float
        DECLARE_VARIABLE_REST
          t
    FORMAL_ARGUMENT_LIST
    TCL_PACKAGE
      "turbine"
      "0.1.1"
    INLINE_TCL
      "set <<t>> [ expr {[ clock clicks -milliseconds ] / 1000.0 } ]"
  DEFINE_BUILTIN_FUNCTION
    INT_MAX
    TYPE_PARAMETERS
    FORMAL_ARGUMENT_LIST
      DECLARATION
        MULTI_TYPE
          int
        DECLARE_VARIABLE_REST
          i
    FORMAL_ARGUMENT_LIST
    TCL_PACKAGE
      "turbine"
      "0.0"
    INLINE_TCL
      "set <<i>> [ expr [ regsub F [ format 0x%X -1 ] 7 ] ]"
  <EOF>

DEBUG VCcallingPipeline.swift:4: Entered module sys on pass DEFINITIONS
DEBUG sys.swift:26:12: builtin: argc () -> (int)
DEBUG sys.swift:30:12: builtin: args () -> (string)
DEBUG sys.swift:34:13: builtin: argv_contains (string) -> (boolean)
DEBUG sys.swift:37: builtin: argv_accept (string...) -> ()
DEBUG sys.swift:42:12: builtin: argv (string,string...) -> (string)
DEBUG sys.swift:47:12: builtin: argp (int,string...) -> (string)
DEBUG sys.swift:55:12: builtin: getenv (string) -> (string)
DEBUG sys.swift:60:10: builtin: sleep (float) -> (void)
DEBUG sys.swift:64:9: builtin: clock_seconds () -> (int)
DEBUG sys.swift:68:11: builtin: clock () -> (float)
DEBUG sys.swift:72:9: builtin: INT_MAX () -> (int)
DEBUG sys.swift:76: Finishing modulesys for pass DEFINITIONS
DEBUG VCcallingPipeline.swift:5: Resolved files to /usr/local/src/swift-t-1.1/turbine/export/files.swift
DEBUG VCcallingPipeline.swift:5: Loading new module files
DEBUG VCcallingPipeline.swift:5: printTree:
PROGRAM
  DEFINE_BUILTIN_FUNCTION
    unsafe_uncached_input_file
    TYPE_PARAMETERS
    FORMAL_ARGUMENT_LIST
      DECLARATION
        MULTI_TYPE
          file
        DECLARE_VARIABLE_REST
          f
    FORMAL_ARGUMENT_LIST
      DECLARATION
        MULTI_TYPE
          string
        DECLARE_VARIABLE_REST
          filename
    TCL_PACKAGE
      "turbine"
      "0.0.2"
    TCL_FUN_REF
      "input_file"
    ANNOTATION
      implements
      uncached_input_file
  DEFINE_BUILTIN_FUNCTION
    glob
    TYPE_PARAMETERS
    FORMAL_ARGUMENT_LIST
      DECLARATION
        MULTI_TYPE
          file
        DECLARE_VARIABLE_REST
          t
          ARRAY
    FORMAL_ARGUMENT_LIST
      DECLARATION
        MULTI_TYPE
          string
        DECLARE_VARIABLE_REST
          s
    TCL_PACKAGE
      "turbine"
      "0.0.2"
    TCL_FUN_REF
      "glob"
    ANNOTATION
      pure
  DEFINE_BUILTIN_FUNCTION
    read
    TYPE_PARAMETERS
    FORMAL_ARGUMENT_LIST
      DECLARATION
        MULTI_TYPE
          string
        DECLARE_VARIABLE_REST
          t
    FORMAL_ARGUMENT_LIST
      DECLARATION
        MULTI_TYPE
          file
        DECLARE_VARIABLE_REST
          f
    TCL_PACKAGE
      "turbine"
      "0.0.2"
    TCL_FUN_REF
      "file_read"
    INLINE_TCL
      "set <<t>> [ turbine::file_read_local <<f>> ]"
    ANNOTATION
      pure
    ANNOTATION
      dispatch
      WORKER
  DEFINE_BUILTIN_FUNCTION
    write
    TYPE_PARAMETERS
    FORMAL_ARGUMENT_LIST
      DECLARATION
        MULTI_TYPE
          file
        DECLARE_VARIABLE_REST
          t
    FORMAL_ARGUMENT_LIST
      DECLARATION
        MULTI_TYPE
          string
        DECLARE_VARIABLE_REST
          s
    TCL_PACKAGE
      "turbine"
      "0.0.2"
    TCL_FUN_REF
      "file_write"
    INLINE_TCL
      "turbine::file_write_local <<t>> <<s>>"
    ANNOTATION
      pure
    ANNOTATION
      dispatch
      WORKER
  DEFINE_BUILTIN_FUNCTION
    file_type
    TYPE_PARAMETERS
    FORMAL_ARGUMENT_LIST
      DECLARATION
        MULTI_TYPE
          string
        DECLARE_VARIABLE_REST
          t
    FORMAL_ARGUMENT_LIST
      DECLARATION
        MULTI_TYPE
          file
        DECLARE_VARIABLE_REST
          f
    TCL_PACKAGE
      "turbine"
      "0.0.2"
    INLINE_TCL
      "set <<t>> [ file type [ lindex <<f>> 0 ] ]"
    ANNOTATION
      pure
  DEFINE_BUILTIN_FUNCTION
    file_exists
    TYPE_PARAMETERS
    FORMAL_ARGUMENT_LIST
      DECLARATION
        MULTI_TYPE
          boolean
        DECLARE_VARIABLE_REST
          o
    FORMAL_ARGUMENT_LIST
      DECLARATION
        MULTI_TYPE
          string
        DECLARE_VARIABLE_REST
          f
    TCL_PACKAGE
      "turbine"
      "0.1"
    INLINE_TCL
      "set <<o>> [ file exists <<f>> ]"
  DEFINE_BUILTIN_FUNCTION
    file_mtime
    TYPE_PARAMETERS
    FORMAL_ARGUMENT_LIST
      DECLARATION
        MULTI_TYPE
          int
        DECLARE_VARIABLE_REST
          o
    FORMAL_ARGUMENT_LIST
      DECLARATION
        MULTI_TYPE
          string
        DECLARE_VARIABLE_REST
          f
    TCL_PACKAGE
      "turbine"
      "0.1"
    INLINE_TCL
      "set <<o>> [ file mtime <<f>> ]"
  DEFINE_BUILTIN_FUNCTION
    file_lines
    TYPE_PARAMETERS
    FORMAL_ARGUMENT_LIST
      DECLARATION
        MULTI_TYPE
          string
        DECLARE_VARIABLE_REST
          s
          ARRAY
    FORMAL_ARGUMENT_LIST
      DECLARATION
        MULTI_TYPE
          file
        DECLARE_VARIABLE_REST
          f
    TCL_PACKAGE
      "turbine"
      "0.1"
    TCL_FUN_REF
      "file_lines"
    INLINE_TCL
      "set <<s>> [ turbine::file_lines_impl <<f>> ] "
    ANNOTATION
      pure
  DEFINE_BUILTIN_FUNCTION
    dirname_string
    TYPE_PARAMETERS
    FORMAL_ARGUMENT_LIST
      DECLARATION
        MULTI_TYPE
          string
        DECLARE_VARIABLE_REST
          d
    FORMAL_ARGUMENT_LIST
      DECLARATION
        MULTI_TYPE
          string
        DECLARE_VARIABLE_REST
          p
    TCL_PACKAGE
      "turbine"
      "0.0"
    INLINE_TCL
      "set <<d>> [ file dirname <<p>> ]"
    ANNOTATION
      pure
  DEFINE_BUILTIN_FUNCTION
    dirname
    TYPE_PARAMETERS
    FORMAL_ARGUMENT_LIST
      DECLARATION
        MULTI_TYPE
          string
        DECLARE_VARIABLE_REST
          d
    FORMAL_ARGUMENT_LIST
      DECLARATION
        MULTI_TYPE
          file
        DECLARE_VARIABLE_REST
          p
    TCL_PACKAGE
      "turbine"
      "0.0"
    INLINE_TCL
      "set <<d>> [ file dirname <<p>> ]"
    ANNOTATION
      pure
  DEFINE_BUILTIN_FUNCTION
    basename_string
    TYPE_PARAMETERS
    FORMAL_ARGUMENT_LIST
      DECLARATION
        MULTI_TYPE
          string
        DECLARE_VARIABLE_REST
          f
    FORMAL_ARGUMENT_LIST
      DECLARATION
        MULTI_TYPE
          string
        DECLARE_VARIABLE_REST
          p
    TCL_PACKAGE
      "turbine"
      "0.0"
    INLINE_TCL
      "set <<f>> [ file tail <<p>> ]"
    ANNOTATION
      pure
  DEFINE_BUILTIN_FUNCTION
    basename
    TYPE_PARAMETERS
    FORMAL_ARGUMENT_LIST
      DECLARATION
        MULTI_TYPE
          string
        DECLARE_VARIABLE_REST
          f
    FORMAL_ARGUMENT_LIST
      DECLARATION
        MULTI_TYPE
          file
        DECLARE_VARIABLE_REST
          p
    TCL_PACKAGE
      "turbine"
      "0.0"
    INLINE_TCL
      "set <<f>> [ file tail <<p>> ]"
    ANNOTATION
      pure
  <EOF>

DEBUG VCcallingPipeline.swift:5: Entered module files on pass DEFINITIONS
DEBUG files.swift:24:10: builtin: unsafe_uncached_input_file (string) -> (file)
DEBUG files.swift:27:12: builtin: glob (string) -> (file[int])
DEBUG files.swift:32:12: builtin: read (file) -> (string)
DEBUG files.swift:38:10: builtin: write (string) -> (file)
DEBUG files.swift:43:12: builtin: file_type (file) -> (string)
DEBUG files.swift:47:13: builtin: file_exists (string) -> (boolean)
DEBUG files.swift:51:9: builtin: file_mtime (string) -> (int)
DEBUG files.swift:56:14: builtin: file_lines (file) -> (string[int])
DEBUG files.swift:61:12: builtin: dirname_string (string) -> (string)
DEBUG files.swift:66:12: builtin: dirname (file) -> (string)
DEBUG files.swift:71:12: builtin: basename_string (string) -> (string)
DEBUG files.swift:76:12: builtin: basename (file) -> (string)
DEBUG files.swift:81: Finishing modulefiles for pass DEFINITIONS
DEBUG VCcallingPipeline.swift:6: Resolved string to /usr/local/src/swift-t-1.1/turbine/export/string.swift
DEBUG VCcallingPipeline.swift:6: Loading new module string
DEBUG VCcallingPipeline.swift:6: printTree:
PROGRAM
  DEFINE_BUILTIN_FUNCTION
    strlen
    TYPE_PARAMETERS
    FORMAL_ARGUMENT_LIST
      DECLARATION
        MULTI_TYPE
          int
        DECLARE_VARIABLE_REST
          n
    FORMAL_ARGUMENT_LIST
      DECLARATION
        MULTI_TYPE
          string
        DECLARE_VARIABLE_REST
          s
    TCL_PACKAGE
      "turbine"
      "0.0.2"
    INLINE_TCL
      "set <<n>> [ string length <<s>> ]"
    ANNOTATION
      pure
  DEFINE_BUILTIN_FUNCTION
    substring
    TYPE_PARAMETERS
    FORMAL_ARGUMENT_LIST
      DECLARATION
        MULTI_TYPE
          string
        DECLARE_VARIABLE_REST
          o
    FORMAL_ARGUMENT_LIST
      DECLARATION
        MULTI_TYPE
          string
        DECLARE_VARIABLE_REST
          s
      DECLARATION
        MULTI_TYPE
          int
        DECLARE_VARIABLE_REST
          start
      DECLARATION
        MULTI_TYPE
          int
        DECLARE_VARIABLE_REST
          length
    TCL_PACKAGE
      "turbine"
      "0.0.2"
    TCL_FUN_REF
      "substring"
    ANNOTATION
      pure
    ANNOTATION
      builtin_op
      SUBSTRING
  DEFINE_BUILTIN_FUNCTION
    split
    TYPE_PARAMETERS
    FORMAL_ARGUMENT_LIST
      DECLARATION
        MULTI_TYPE
          string
        DECLARE_VARIABLE_REST
          t
          ARRAY
    FORMAL_ARGUMENT_LIST
      DECLARATION
        MULTI_TYPE
          string
        DECLARE_VARIABLE_REST
          s
      DECLARATION
        MULTI_TYPE
          string
        DECLARE_VARIABLE_REST
          delimiter
    TCL_PACKAGE
      "turbine"
      "0.0.2"
    TCL_FUN_REF
      "split"
    INLINE_TCL
      "set <<t>> [ turbine::split_impl <<s>> <<delimiter>> ]"
    ANNOTATION
      pure
  DEFINE_BUILTIN_FUNCTION
    sprintf
    TYPE_PARAMETERS
    FORMAL_ARGUMENT_LIST
      DECLARATION
        MULTI_TYPE
          string
        DECLARE_VARIABLE_REST
          o
    FORMAL_ARGUMENT_LIST
      DECLARATION
        MULTI_TYPE
          string
        DECLARE_VARIABLE_REST
          fmt
      DECLARATION
        MULTI_TYPE
          int
          float
          string
          boolean
        DECLARE_VARIABLE_REST
          args
        ...
    TCL_PACKAGE
      "turbine"
      "0.0.2"
    TCL_FUN_REF
      "sprintf"
    ANNOTATION
      builtin_op
      SPRINTF
  DEFINE_BUILTIN_FUNCTION
    find
    TYPE_PARAMETERS
    FORMAL_ARGUMENT_LIST
      DECLARATION
        MULTI_TYPE
          int
        DECLARE_VARIABLE_REST
          o
    FORMAL_ARGUMENT_LIST
      DECLARATION
        MULTI_TYPE
          string
        DECLARE_VARIABLE_REST
          s
      DECLARATION
        MULTI_TYPE
          string
        DECLARE_VARIABLE_REST
          substring
      DECLARATION
        MULTI_TYPE
          int
        DECLARE_VARIABLE_REST
          start_index
      DECLARATION
        MULTI_TYPE
          int
        DECLARE_VARIABLE_REST
          end_index
    TCL_PACKAGE
      "turbine"
      "0.0.1"
    TCL_FUN_REF
      "find"
    INLINE_TCL
      "set <<o>> [ turbine::find_impl <<s>> <<substring>> <<start_index>> <<end_index>> ]"
    ANNOTATION
      pure
  DEFINE_BUILTIN_FUNCTION
    string_count
    TYPE_PARAMETERS
    FORMAL_ARGUMENT_LIST
      DECLARATION
        MULTI_TYPE
          int
        DECLARE_VARIABLE_REST
          o
    FORMAL_ARGUMENT_LIST
      DECLARATION
        MULTI_TYPE
          string
        DECLARE_VARIABLE_REST
          s
      DECLARATION
        MULTI_TYPE
          string
        DECLARE_VARIABLE_REST
          substring
      DECLARATION
        MULTI_TYPE
          int
        DECLARE_VARIABLE_REST
          start_index
      DECLARATION
        MULTI_TYPE
          int
        DECLARE_VARIABLE_REST
          end_index
    TCL_PACKAGE
      "turbine"
      "0.0.1"
    TCL_FUN_REF
      "count"
    INLINE_TCL
      "set <<o>> [ turbine::count_impl <<s>> <<substring>> <<start_index>> <<end_index>> ]"
    ANNOTATION
      pure
  DEFINE_BUILTIN_FUNCTION
    isint
    TYPE_PARAMETERS
    FORMAL_ARGUMENT_LIST
      DECLARATION
        MULTI_TYPE
          boolean
        DECLARE_VARIABLE_REST
          o
    FORMAL_ARGUMENT_LIST
      DECLARATION
        MULTI_TYPE
          string
        DECLARE_VARIABLE_REST
          s
    TCL_PACKAGE
      "turbine"
      "0.0.1"
    TCL_FUN_REF
      "isint"
    INLINE_TCL
      "set <<o>> [ turbine::isint_impl <<s>> ]"
    ANNOTATION
      pure
  DEFINE_BUILTIN_FUNCTION
    replace
    TYPE_PARAMETERS
    FORMAL_ARGUMENT_LIST
      DECLARATION
        MULTI_TYPE
          string
        DECLARE_VARIABLE_REST
          o
    FORMAL_ARGUMENT_LIST
      DECLARATION
        MULTI_TYPE
          string
        DECLARE_VARIABLE_REST
          s
      DECLARATION
        MULTI_TYPE
          string
        DECLARE_VARIABLE_REST
          substring
      DECLARATION
        MULTI_TYPE
          string
        DECLARE_VARIABLE_REST
          rep_string
      DECLARATION
        MULTI_TYPE
          int
        DECLARE_VARIABLE_REST
          start_index
    TCL_PACKAGE
      "turbine"
      "0.0.1"
    TCL_FUN_REF
      "replace"
    INLINE_TCL
      "set <<o>> [ turbine::replace_impl <<s>> <<substring>> <<rep_string>> <<start_index>> ]"
    ANNOTATION
      pure
  DEFINE_BUILTIN_FUNCTION
    replaceAll
    TYPE_PARAMETERS
    FORMAL_ARGUMENT_LIST
      DECLARATION
        MULTI_TYPE
          string
        DECLARE_VARIABLE_REST
          o
    FORMAL_ARGUMENT_LIST
      DECLARATION
        MULTI_TYPE
          string
        DECLARE_VARIABLE_REST
          s
      DECLARATION
        MULTI_TYPE
          string
        DECLARE_VARIABLE_REST
          substring
      DECLARATION
        MULTI_TYPE
          string
        DECLARE_VARIABLE_REST
          rep_string
      DECLARATION
        MULTI_TYPE
          int
        DECLARE_VARIABLE_REST
          start_index
      DECLARATION
        MULTI_TYPE
          int
        DECLARE_VARIABLE_REST
          end_index
    TCL_PACKAGE
      "turbine"
      "0.0.1"
    TCL_FUN_REF
      "replace_all"
    INLINE_TCL
      "set <<o>> [ turbine::replace_all_impl <<s>> <<substring>> <<rep_string>> <<start_index>> <<end_index>> ]"
    ANNOTATION
      pure
  DEFINE_FUNCTION
    replaceAll
    TYPE_PARAMETERS
    FORMAL_ARGUMENT_LIST
      DECLARATION
        MULTI_TYPE
          string
        DECLARE_VARIABLE_REST
          o
    FORMAL_ARGUMENT_LIST
      DECLARATION
        MULTI_TYPE
          string
        DECLARE_VARIABLE_REST
          s
      DECLARATION
        MULTI_TYPE
          string
        DECLARE_VARIABLE_REST
          substring
      DECLARATION
        MULTI_TYPE
          string
        DECLARE_VARIABLE_REST
          rep_string
    BLOCK
      ASSIGN_EXPRESSION
        =
        IDENTIFIER_LIST
          ASSIGN_TARGET
            VARIABLE
              o
        CALL_FUNCTION
          replaceAll
          ARGUMENT_LIST
            VARIABLE
              s
            VARIABLE
              substring
            VARIABLE
              rep_string
            INT_LITERAL
              0
            CALL_FUNCTION
              length
              ARGUMENT_LIST
                VARIABLE
                  s
    ANNOTATION
      pure
  DEFINE_FUNCTION
    replace_all
    TYPE_PARAMETERS
    FORMAL_ARGUMENT_LIST
      DECLARATION
        MULTI_TYPE
          string
        DECLARE_VARIABLE_REST
          o
    FORMAL_ARGUMENT_LIST
      DECLARATION
        MULTI_TYPE
          string
        DECLARE_VARIABLE_REST
          s
      DECLARATION
        MULTI_TYPE
          string
        DECLARE_VARIABLE_REST
          substring
      DECLARATION
        MULTI_TYPE
          string
        DECLARE_VARIABLE_REST
          rep_string
      DECLARATION
        MULTI_TYPE
          int
        DECLARE_VARIABLE_REST
          start_index
    BLOCK
      ASSIGN_EXPRESSION
        =
        IDENTIFIER_LIST
          ASSIGN_TARGET
            VARIABLE
              o
        CALL_FUNCTION
          replaceAll
          ARGUMENT_LIST
            VARIABLE
              s
            VARIABLE
              substring
            VARIABLE
              rep_string
            VARIABLE
              start_index
            CALL_FUNCTION
              length
              ARGUMENT_LIST
                VARIABLE
                  s
    ANNOTATION
      pure
  DEFINE_BUILTIN_FUNCTION
    trim
    TYPE_PARAMETERS
    FORMAL_ARGUMENT_LIST
      DECLARATION
        MULTI_TYPE
          string
        DECLARE_VARIABLE_REST
          o
    FORMAL_ARGUMENT_LIST
      DECLARATION
        MULTI_TYPE
          string
        DECLARE_VARIABLE_REST
          s
    TCL_PACKAGE
      "turbine"
      "0.0.1"
    INLINE_TCL
      "set <<o>> [ string trim <<s>> ]"
    ANNOTATION
      pure
  DEFINE_BUILTIN_FUNCTION
    hash
    TYPE_PARAMETERS
    FORMAL_ARGUMENT_LIST
      DECLARATION
        MULTI_TYPE
          int
        DECLARE_VARIABLE_REST
          h
    FORMAL_ARGUMENT_LIST
      DECLARATION
        MULTI_TYPE
          string
        DECLARE_VARIABLE_REST
          s
    TCL_PACKAGE
      "turbine"
      "0.0.1"
    INLINE_TCL
      "set <<h>> [ c_utils::hash <<s>> ]"
    ANNOTATION
      pure
  DEFINE_FUNCTION
    string_from_floats
    TYPE_PARAMETERS
    FORMAL_ARGUMENT_LIST
      DECLARATION
        MULTI_TYPE
          string
        DECLARE_VARIABLE_REST
          s
    FORMAL_ARGUMENT_LIST
      DECLARATION
        MULTI_TYPE
          float
        DECLARE_VARIABLE_REST
          F
          ARRAY
    BLOCK
      ASSIGN_EXPRESSION
        =
        IDENTIFIER_LIST
          ASSIGN_TARGET
            VARIABLE
              s
        CALL_FUNCTION
          string_join
          ARGUMENT_LIST
            CALL_FUNCTION
              array_repr
              ARGUMENT_LIST
                VARIABLE
                  F
            STRING_LITERAL
              ","
    ANNOTATION
      pure
  DEFINE_BUILTIN_FUNCTION
    string_join
    TYPE_PARAMETERS
    FORMAL_ARGUMENT_LIST
      DECLARATION
        MULTI_TYPE
          string
        DECLARE_VARIABLE_REST
          s
    FORMAL_ARGUMENT_LIST
      DECLARATION
        MULTI_TYPE
          string
        DECLARE_VARIABLE_REST
          A
          ARRAY
      DECLARATION
        MULTI_TYPE
          string
        DECLARE_VARIABLE_REST
          separator
    TCL_PACKAGE
      "turbine"
      "0.4.0"
    INLINE_TCL
      "set <<s>> [ turbine::string_join_impl <<A>> <<separator>> ]"
    ANNOTATION
      pure
  DEFINE_BUILTIN_FUNCTION
    join
    TYPE_PARAMETERS
    FORMAL_ARGUMENT_LIST
      DECLARATION
        MULTI_TYPE
          string
        DECLARE_VARIABLE_REST
          s
    FORMAL_ARGUMENT_LIST
      DECLARATION
        MULTI_TYPE
          string
        DECLARE_VARIABLE_REST
          A
          ARRAY
      DECLARATION
        MULTI_TYPE
          string
        DECLARE_VARIABLE_REST
          separator
    TCL_PACKAGE
      "turbine"
      "0.4.0"
    INLINE_TCL
      "set <<s>> [ turbine::string_join_impl <<A>> <<separator>> ]"
    ANNOTATION
      pure
  DEFINE_BUILTIN_FUNCTION
    toUpper
    TYPE_PARAMETERS
    FORMAL_ARGUMENT_LIST
      DECLARATION
        MULTI_TYPE
          string
        DECLARE_VARIABLE_REST
          o
    FORMAL_ARGUMENT_LIST
      DECLARATION
        MULTI_TYPE
          string
        DECLARE_VARIABLE_REST
          s
    TCL_PACKAGE
      "turbine"
      "0.8.0"
    INLINE_TCL
      "set <<o>> [ string toupper <<s>> ] "
    ANNOTATION
      pure
  DEFINE_BUILTIN_FUNCTION
    toLower
    TYPE_PARAMETERS
    FORMAL_ARGUMENT_LIST
      DECLARATION
        MULTI_TYPE
          string
        DECLARE_VARIABLE_REST
          o
    FORMAL_ARGUMENT_LIST
      DECLARATION
        MULTI_TYPE
          string
        DECLARE_VARIABLE_REST
          s
    TCL_PACKAGE
      "turbine"
      "0.8.0"
    INLINE_TCL
      "set <<o>> [ string tolower <<s>> ] "
    ANNOTATION
      pure
  <EOF>

DEBUG VCcallingPipeline.swift:6: Entered module string on pass DEFINITIONS
DEBUG string.swift:23:9: builtin: strlen (string) -> (int)
DEBUG string.swift:28:12: builtin: substring (string,int,int) -> (string)
DEBUG string.swift:32:14: builtin: split (string,string) -> (string[int])
DEBUG string.swift:37:12: builtin: sprintf (string,(int|float|string|boolean)...) -> (string)
DEBUG string.swift:42:9: builtin: find (string,string,int,int) -> (int)
DEBUG string.swift:48:9: builtin: string_count (string,string,int,int) -> (int)
DEBUG string.swift:55:13: builtin: isint (string) -> (boolean)
DEBUG string.swift:61:12: builtin: replace (string,string,string,int) -> (string)
DEBUG string.swift:67:12: builtin: replaceAll (string,string,string,int,int) -> (string)
DEBUG string.swift:72:12: define function: string.swift:72:12: replaceAll
DEBUG string.swift:78:12: define function: string.swift:78:12: replace_all
DEBUG string.swift:83:12: builtin: trim (string) -> (string)
DEBUG string.swift:88:9: builtin: hash (string) -> (int)
DEBUG string.swift:93:12: define function: string.swift:93:12: string_from_floats
DEBUG string.swift:99:12: builtin: string_join (string[int],string) -> (string)
DEBUG string.swift:104:12: builtin: join (string[int],string) -> (string)
DEBUG string.swift:109:12: builtin: toUpper (string) -> (string)
DEBUG string.swift:113:12: builtin: toLower (string) -> (string)
DEBUG string.swift:117: Finishing modulestring for pass DEFINITIONS
DEBUG VCcallingPipeline.swift:7: Resolved unix to /usr/local/src/swift-t-1.1/turbine/export/unix.swift
DEBUG VCcallingPipeline.swift:7: Loading new module unix
DEBUG VCcallingPipeline.swift:7: printTree:
PROGRAM
  DEFINE_APP_FUNCTION
    cp
    FORMAL_ARGUMENT_LIST
      DECLARATION
        MULTI_TYPE
          file
        DECLARE_VARIABLE_REST
          o
    FORMAL_ARGUMENT_LIST
      DECLARATION
        MULTI_TYPE
          file
        DECLARE_VARIABLE_REST
          i
    APP_BODY
      COMMAND
        STRING_LITERAL
          "cp"
        VARIABLE
          i
        VARIABLE
          o
  DEFINE_APP_FUNCTION
    catp
    FORMAL_ARGUMENT_LIST
    FORMAL_ARGUMENT_LIST
      DECLARATION
        MULTI_TYPE
          file
        DECLARE_VARIABLE_REST
          f
          ARRAY
    APP_BODY
      COMMAND
        STRING_LITERAL
          "cat"
        VARIABLE
          f
  DEFINE_APP_FUNCTION
    cat
    FORMAL_ARGUMENT_LIST
      DECLARATION
        MULTI_TYPE
          file
        DECLARE_VARIABLE_REST
          o
    FORMAL_ARGUMENT_LIST
      DECLARATION
        MULTI_TYPE
          file
        DECLARE_VARIABLE_REST
          f
          ARRAY
    APP_BODY
      COMMAND
        STRING_LITERAL
          "cat"
        VARIABLE
          f
      APP_REDIRECTION
        stdout
        VARIABLE
          o
  DEFINE_APP_FUNCTION
    sed
    FORMAL_ARGUMENT_LIST
      DECLARATION
        MULTI_TYPE
          file
        DECLARE_VARIABLE_REST
          o
    FORMAL_ARGUMENT_LIST
      DECLARATION
        MULTI_TYPE
          file
        DECLARE_VARIABLE_REST
          i
      DECLARATION
        MULTI_TYPE
          string
        DECLARE_VARIABLE_REST
          command
    APP_BODY
      COMMAND
        STRING_LITERAL
          "sed"
        VARIABLE
          command
        VARIABLE
          i
      APP_REDIRECTION
        stdout
        VARIABLE
          o
  DEFINE_APP_FUNCTION
    touch
    FORMAL_ARGUMENT_LIST
      DECLARATION
        MULTI_TYPE
          file
        DECLARE_VARIABLE_REST
          o
    FORMAL_ARGUMENT_LIST
    APP_BODY
      COMMAND
        STRING_LITERAL
          "touch"
        VARIABLE
          o
  DEFINE_APP_FUNCTION
    printenv
    FORMAL_ARGUMENT_LIST
    FORMAL_ARGUMENT_LIST
    APP_BODY
      COMMAND
        STRING_LITERAL
          "printenv"
  DEFINE_APP_FUNCTION
    echo
    FORMAL_ARGUMENT_LIST
      DECLARATION
        MULTI_TYPE
          file
        DECLARE_VARIABLE_REST
          o
    FORMAL_ARGUMENT_LIST
      DECLARATION
        MULTI_TYPE
          string
        DECLARE_VARIABLE_REST
          s
    APP_BODY
      COMMAND
        STRING_LITERAL
          "echo"
        VARIABLE
          s
      APP_REDIRECTION
        stdout
        VARIABLE
          o
  DEFINE_APP_FUNCTION
    sleep
    FORMAL_ARGUMENT_LIST
      DECLARATION
        MULTI_TYPE
          void
        DECLARE_VARIABLE_REST
          v
    FORMAL_ARGUMENT_LIST
      DECLARATION
        MULTI_TYPE
          int
        DECLARE_VARIABLE_REST
          i
    APP_BODY
      COMMAND
        STRING_LITERAL
          "sleep"
        VARIABLE
          i
  DEFINE_APP_FUNCTION
    mkdir
    FORMAL_ARGUMENT_LIST
      DECLARATION
        MULTI_TYPE
          void
        DECLARE_VARIABLE_REST
          v
    FORMAL_ARGUMENT_LIST
      DECLARATION
        MULTI_TYPE
          string
        DECLARE_VARIABLE_REST
          dirname
    APP_BODY
      COMMAND
        STRING_LITERAL
          "mkdir"
        STRING_LITERAL
          "-p"
        VARIABLE
          dirname
  <EOF>

DEBUG VCcallingPipeline.swift:7: Entered module unix on pass DEFINITIONS
INFO  defineAppFunction
INFO  defineAppFunction
INFO  defineAppFunction
INFO  defineAppFunction
INFO  defineAppFunction
INFO  defineAppFunction
INFO  defineAppFunction
INFO  defineAppFunction
INFO  defineAppFunction
DEBUG unix.swift:69: Finishing moduleunix for pass DEFINITIONS
DEBUG VCcallingPipeline.swift:8: Resolved assert to /usr/local/src/swift-t-1.1/turbine/export/assert.swift
DEBUG VCcallingPipeline.swift:8: Loading new module assert
DEBUG VCcallingPipeline.swift:8: printTree:
PROGRAM
  DEFINE_BUILTIN_FUNCTION
    assert
    TYPE_PARAMETERS
    FORMAL_ARGUMENT_LIST
      DECLARATION
        MULTI_TYPE
          void
        DECLARE_VARIABLE_REST
          o
    FORMAL_ARGUMENT_LIST
      DECLARATION
        MULTI_TYPE
          boolean
        DECLARE_VARIABLE_REST
          condition
      DECLARATION
        MULTI_TYPE
          string
        DECLARE_VARIABLE_REST
          msg
    TCL_PACKAGE
      "turbine"
      "0.0.2"
    TCL_FUN_REF
      "assert"
    ANNOTATION
      assertion
    ANNOTATION
      builtin_op
      ASSERT
  DEFINE_BUILTIN_FUNCTION
    assertEqual
    TYPE_PARAMETERS
    FORMAL_ARGUMENT_LIST
      DECLARATION
        MULTI_TYPE
          void
        DECLARE_VARIABLE_REST
          o
    FORMAL_ARGUMENT_LIST
      DECLARATION
        MULTI_TYPE
          int
        DECLARE_VARIABLE_REST
          v1
      DECLARATION
        MULTI_TYPE
          int
        DECLARE_VARIABLE_REST
          v2
      DECLARATION
        MULTI_TYPE
          string
        DECLARE_VARIABLE_REST
          msg
    TCL_PACKAGE
      "turbine"
      "0.0.2"
    TCL_FUN_REF
      "assertEqual"
    ANNOTATION
      assertion
    ANNOTATION
      builtin_op
      ASSERT_EQ
  DEFINE_BUILTIN_FUNCTION
    assertEqual
    TYPE_PARAMETERS
    FORMAL_ARGUMENT_LIST
      DECLARATION
        MULTI_TYPE
          void
        DECLARE_VARIABLE_REST
          o
    FORMAL_ARGUMENT_LIST
      DECLARATION
        MULTI_TYPE
          float
        DECLARE_VARIABLE_REST
          v1
      DECLARATION
        MULTI_TYPE
          float
        DECLARE_VARIABLE_REST
          v2
      DECLARATION
        MULTI_TYPE
          string
        DECLARE_VARIABLE_REST
          msg
    TCL_PACKAGE
      "turbine"
      "0.0.2"
    TCL_FUN_REF
      "assertEqual"
  DEFINE_BUILTIN_FUNCTION
    assertEqual
    TYPE_PARAMETERS
    FORMAL_ARGUMENT_LIST
      DECLARATION
        MULTI_TYPE
          void
        DECLARE_VARIABLE_REST
          o
    FORMAL_ARGUMENT_LIST
      DECLARATION
        MULTI_TYPE
          boolean
        DECLARE_VARIABLE_REST
          v1
      DECLARATION
        MULTI_TYPE
          boolean
        DECLARE_VARIABLE_REST
          v2
      DECLARATION
        MULTI_TYPE
          string
        DECLARE_VARIABLE_REST
          msg
    TCL_PACKAGE
      "turbine"
      "0.0.2"
    TCL_FUN_REF
      "assertEqual"
  DEFINE_BUILTIN_FUNCTION
    assertEqual
    TYPE_PARAMETERS
    FORMAL_ARGUMENT_LIST
      DECLARATION
        MULTI_TYPE
          void
        DECLARE_VARIABLE_REST
          o
    FORMAL_ARGUMENT_LIST
      DECLARATION
        MULTI_TYPE
          string
        DECLARE_VARIABLE_REST
          v1
      DECLARATION
        MULTI_TYPE
          string
        DECLARE_VARIABLE_REST
          v2
      DECLARATION
        MULTI_TYPE
          string
        DECLARE_VARIABLE_REST
          msg
    TCL_PACKAGE
      "turbine"
      "0.0.2"
    TCL_FUN_REF
      "assertEqual"
  DEFINE_BUILTIN_FUNCTION
    assertLT
    TYPE_PARAMETERS
    FORMAL_ARGUMENT_LIST
      DECLARATION
        MULTI_TYPE
          void
        DECLARE_VARIABLE_REST
          o
    FORMAL_ARGUMENT_LIST
      DECLARATION
        MULTI_TYPE
          int
        DECLARE_VARIABLE_REST
          v1
      DECLARATION
        MULTI_TYPE
          int
        DECLARE_VARIABLE_REST
          v2
      DECLARATION
        MULTI_TYPE
          string
        DECLARE_VARIABLE_REST
          msg
    TCL_PACKAGE
      "turbine"
      "0.0.2"
    TCL_FUN_REF
      "assertLT"
    ANNOTATION
      assertion
  DEFINE_BUILTIN_FUNCTION
    assertLT
    TYPE_PARAMETERS
    FORMAL_ARGUMENT_LIST
      DECLARATION
        MULTI_TYPE
          void
        DECLARE_VARIABLE_REST
          o
    FORMAL_ARGUMENT_LIST
      DECLARATION
        MULTI_TYPE
          float
        DECLARE_VARIABLE_REST
          v1
      DECLARATION
        MULTI_TYPE
          float
        DECLARE_VARIABLE_REST
          v2
      DECLARATION
        MULTI_TYPE
          string
        DECLARE_VARIABLE_REST
          msg
    TCL_PACKAGE
      "turbine"
      "0.0.2"
    TCL_FUN_REF
      "assertLT"
    ANNOTATION
      assertion
  DEFINE_BUILTIN_FUNCTION
    assertLTE
    TYPE_PARAMETERS
    FORMAL_ARGUMENT_LIST
      DECLARATION
        MULTI_TYPE
          void
        DECLARE_VARIABLE_REST
          o
    FORMAL_ARGUMENT_LIST
      DECLARATION
        MULTI_TYPE
          int
        DECLARE_VARIABLE_REST
          v1
      DECLARATION
        MULTI_TYPE
          int
        DECLARE_VARIABLE_REST
          v2
      DECLARATION
        MULTI_TYPE
          string
        DECLARE_VARIABLE_REST
          msg
    TCL_PACKAGE
      "turbine"
      "0.0.2"
    TCL_FUN_REF
      "assertLTE"
    ANNOTATION
      assertion
  DEFINE_BUILTIN_FUNCTION
    assertLTE
    TYPE_PARAMETERS
    FORMAL_ARGUMENT_LIST
      DECLARATION
        MULTI_TYPE
          void
        DECLARE_VARIABLE_REST
          o
    FORMAL_ARGUMENT_LIST
      DECLARATION
        MULTI_TYPE
          float
        DECLARE_VARIABLE_REST
          v1
      DECLARATION
        MULTI_TYPE
          float
        DECLARE_VARIABLE_REST
          v2
      DECLARATION
        MULTI_TYPE
          string
        DECLARE_VARIABLE_REST
          msg
    TCL_PACKAGE
      "turbine"
      "0.0.2"
    TCL_FUN_REF
      "assertLTE"
    ANNOTATION
      assertion
  <EOF>

DEBUG VCcallingPipeline.swift:8: Entered module assert on pass DEFINITIONS
DEBUG assert.swift:23:10: builtin: assert (boolean,string) -> (void)
DEBUG assert.swift:26:10: builtin: assertEqual (int,int,string) -> (void)
DEBUG assert.swift:27:10: builtin: assertEqual (float,float,string) -> (void)
DEBUG assert.swift:28:10: builtin: assertEqual (boolean,boolean,string) -> (void)
DEBUG assert.swift:29:10: builtin: assertEqual (string,string,string) -> (void)
DEBUG assert.swift:32:10: builtin: assertLT (int,int,string) -> (void)
DEBUG assert.swift:34:10: builtin: assertLT (float,float,string) -> (void)
DEBUG assert.swift:37:10: builtin: assertLTE (int,int,string) -> (void)
DEBUG assert.swift:39:10: builtin: assertLTE (float,float,string) -> (void)
DEBUG assert.swift:42: Finishing moduleassert for pass DEFINITIONS
DEBUG VCcallingPipeline.swift:9: Resolved pipelinefunctions.align_dedup to ./pipelinefunctions/align_dedup.swift
DEBUG VCcallingPipeline.swift:9: Loading new module pipelinefunctions.align_dedup
DEBUG VCcallingPipeline.swift:9: printTree:
PROGRAM
  DEFINE_APP_FUNCTION
    bwa_mem
    FORMAL_ARGUMENT_LIST
      DECLARATION
        MULTI_TYPE
          file
        DECLARE_VARIABLE_REST
          output
    FORMAL_ARGUMENT_LIST
      DECLARATION
        MULTI_TYPE
          string
        DECLARE_VARIABLE_REST
          bwadir
      DECLARATION
        MULTI_TYPE
          string
        DECLARE_VARIABLE_REST
          read1
      DECLARATION
        MULTI_TYPE
          string
        DECLARE_VARIABLE_REST
          read2
      DECLARATION
        MULTI_TYPE
          string
        DECLARE_VARIABLE_REST
          INDEX
      DECLARATION
        MULTI_TYPE
          string
        DECLARE_VARIABLE_REST
          bwamemparams
          ARRAY
      DECLARATION
        MULTI_TYPE
          int
        DECLARE_VARIABLE_REST
          PBSCORES
      DECLARATION
        MULTI_TYPE
          string
        DECLARE_VARIABLE_REST
          rgheader
    APP_BODY
      COMMAND
        VARIABLE
          bwadir
        STRING_LITERAL
          "mem"
        STRING_LITERAL
          "-M"
        VARIABLE
          bwamemparams
        STRING_LITERAL
          "-t"
        VARIABLE
          PBSCORES
        STRING_LITERAL
          "-R"
        VARIABLE
          rgheader
        VARIABLE
          INDEX
        VARIABLE
          read1
        VARIABLE
          read2
      APP_REDIRECTION
        stdout
        VARIABLE
          output
    ANNOTATION
      dispatch
      WORKER
  DEFINE_APP_FUNCTION
    novoalign
    FORMAL_ARGUMENT_LIST
      DECLARATION
        MULTI_TYPE
          file
        DECLARE_VARIABLE_REST
          output
    FORMAL_ARGUMENT_LIST
      DECLARATION
        MULTI_TYPE
          string
        DECLARE_VARIABLE_REST
          novoaligndir
      DECLARATION
        MULTI_TYPE
          string
        DECLARE_VARIABLE_REST
          read1
      DECLARATION
        MULTI_TYPE
          string
        DECLARE_VARIABLE_REST
          read2
      DECLARATION
        MULTI_TYPE
          string
        DECLARE_VARIABLE_REST
          INDEX
      DECLARATION
        MULTI_TYPE
          string
        DECLARE_VARIABLE_REST
          novoalignparams
          ARRAY
      DECLARATION
        MULTI_TYPE
          int
        DECLARE_VARIABLE_REST
          PBSCORES
      DECLARATION
        MULTI_TYPE
          string
        DECLARE_VARIABLE_REST
          rgheader
    APP_BODY
      COMMAND
        VARIABLE
          novoaligndir
        STRING_LITERAL
          "-c"
        VARIABLE
          PBSCORES
        STRING_LITERAL
          "-d"
        VARIABLE
          INDEX
        STRING_LITERAL
          "-f"
        VARIABLE
          read1
        VARIABLE
          read2
        STRING_LITERAL
          "-o"
        STRING_LITERAL
          "SAM"
        VARIABLE
          rgheader
      APP_REDIRECTION
        stdout
        VARIABLE
          output
    ANNOTATION
      dispatch
      WORKER
  DEFINE_APP_FUNCTION
    samtools_view
    FORMAL_ARGUMENT_LIST
      DECLARATION
        MULTI_TYPE
          file
        DECLARE_VARIABLE_REST
          output
    FORMAL_ARGUMENT_LIST
      DECLARATION
        MULTI_TYPE
          string
        DECLARE_VARIABLE_REST
          samtoolsdir
      DECLARATION
        MULTI_TYPE
          file
        DECLARE_VARIABLE_REST
          inputFile
      DECLARATION
        MULTI_TYPE
          int
        DECLARE_VARIABLE_REST
          thr
      DECLARATION
        MULTI_TYPE
          string
        DECLARE_VARIABLE_REST
          args
          ARRAY
    APP_BODY
      COMMAND
        VARIABLE
          samtoolsdir
        STRING_LITERAL
          "view"
        STRING_LITERAL
          "-@"
        VARIABLE
          thr
        STRING_LITERAL
          "-bS"
        VARIABLE
          inputFile
        VARIABLE
          args
      APP_REDIRECTION
        stdout
        VARIABLE
          output
    ANNOTATION
      dispatch
      WORKER
  DEFINE_BUILTIN_FUNCTION
    samtools_view2
    TYPE_PARAMETERS
    FORMAL_ARGUMENT_LIST
      DECLARATION
        MULTI_TYPE
          int
        DECLARE_VARIABLE_REST
          numAlignments
    FORMAL_ARGUMENT_LIST
      DECLARATION
        MULTI_TYPE
          string
        DECLARE_VARIABLE_REST
          samtoolsdir
      DECLARATION
        MULTI_TYPE
          string
        DECLARE_VARIABLE_REST
          inputFile
    TCL_PACKAGE
      "align"
      "0.2"
    INLINE_TCL
      "set <<numAlignments>> [ alignment::samtools_view <<samtoolsdir>> <<inputFile>> ]"
    ANNOTATION
      dispatch
      WORKER
  DEFINE_APP_FUNCTION
    samblaster
    FORMAL_ARGUMENT_LIST
      DECLARATION
        MULTI_TYPE
          file
        DECLARE_VARIABLE_REST
          output
    FORMAL_ARGUMENT_LIST
      DECLARATION
        MULTI_TYPE
          string
        DECLARE_VARIABLE_REST
          samblasterdir
      DECLARATION
        MULTI_TYPE
          file
        DECLARE_VARIABLE_REST
          inputFile
    APP_BODY
      COMMAND
        VARIABLE
          samblasterdir
        STRING_LITERAL
          "-M"
        STRING_LITERAL
          "-i"
        VARIABLE
          inputFile
      APP_REDIRECTION
        stdout
        VARIABLE
          output
    ANNOTATION
      dispatch
      WORKER
  DEFINE_APP_FUNCTION
    novosort
    FORMAL_ARGUMENT_LIST
      DECLARATION
        MULTI_TYPE
          file
        DECLARE_VARIABLE_REST
          output
    FORMAL_ARGUMENT_LIST
      DECLARATION
        MULTI_TYPE
          string
        DECLARE_VARIABLE_REST
          novosortdir
      DECLARATION
        MULTI_TYPE
          file
        DECLARE_VARIABLE_REST
          inputFile
      DECLARATION
        MULTI_TYPE
          string
        DECLARE_VARIABLE_REST
          tmpdir
      DECLARATION
        MULTI_TYPE
          int
        DECLARE_VARIABLE_REST
          thr
      DECLARATION
        MULTI_TYPE
          string
        DECLARE_VARIABLE_REST
          sortoptions
          ARRAY
    APP_BODY
      COMMAND
        VARIABLE
          novosortdir
        STRING_LITERAL
          "--index"
        STRING_LITERAL
          "--tmpdir"
        VARIABLE
          tmpdir
        STRING_LITERAL
          "--threads"
        VARIABLE
          thr
        VARIABLE
          inputFile
        STRING_LITERAL
          "-o"
        VARIABLE
          output
        VARIABLE
          sortoptions
    ANNOTATION
      dispatch
      WORKER
  DEFINE_APP_FUNCTION
    novosort
    FORMAL_ARGUMENT_LIST
      DECLARATION
        MULTI_TYPE
          file
        DECLARE_VARIABLE_REST
          output
    FORMAL_ARGUMENT_LIST
      DECLARATION
        MULTI_TYPE
          string
        DECLARE_VARIABLE_REST
          novosortdir
      DECLARATION
        MULTI_TYPE
          string
        DECLARE_VARIABLE_REST
          inputFile
          ARRAY
      DECLARATION
        MULTI_TYPE
          string
        DECLARE_VARIABLE_REST
          tmpdir
      DECLARATION
        MULTI_TYPE
          int
        DECLARE_VARIABLE_REST
          thr
      DECLARATION
        MULTI_TYPE
          string
        DECLARE_VARIABLE_REST
          sortoptions
          ARRAY
    APP_BODY
      COMMAND
        VARIABLE
          novosortdir
        STRING_LITERAL
          "--index"
        STRING_LITERAL
          "--tmpdir"
        VARIABLE
          tmpdir
        STRING_LITERAL
          "--threads"
        VARIABLE
          thr
        VARIABLE
          inputFile
        STRING_LITERAL
          "-o"
        VARIABLE
          output
    ANNOTATION
      dispatch
      WORKER
  DEFINE_APP_FUNCTION
    picard
    FORMAL_ARGUMENT_LIST
      DECLARATION
        MULTI_TYPE
          file
        DECLARE_VARIABLE_REST
          outputfile
      DECLARATION
        MULTI_TYPE
          file
        DECLARE_VARIABLE_REST
          metricsfile
    FORMAL_ARGUMENT_LIST
      DECLARATION
        MULTI_TYPE
          string
        DECLARE_VARIABLE_REST
          javadir
      DECLARATION
        MULTI_TYPE
          string
        DECLARE_VARIABLE_REST
          picarddir
      DECLARATION
        MULTI_TYPE
          string
        DECLARE_VARIABLE_REST
          tmpdir
      DECLARATION
        MULTI_TYPE
          file
        DECLARE_VARIABLE_REST
          inputFile
    APP_BODY
      COMMAND
        VARIABLE
          javadir
        STRING_LITERAL
          "-Xmx8g"
        STRING_LITERAL
          "-jar"
        VARIABLE
          picarddir
        STRING_LITERAL
          "MarkDuplicates"
        STRING_LITERAL
          "INPUT="
        VARIABLE
          inputFile
        STRING_LITERAL
          "OUTPUT="
        VARIABLE
          outputfile
        STRING_LITERAL
          "METRICS_FILE="
        VARIABLE
          metricsfile
        STRING_LITERAL
          "TMP_DIR="
        VARIABLE
          tmpdir
        STRING_LITERAL
          "ASSUME_SORTED=true MAX_RECORDS_IN_RAM=null CREATE_INDEX=true VALIDATION_STRINGENCY=SILENT"
    ANNOTATION
      dispatch
      WORKER
  DEFINE_APP_FUNCTION
    samtools_flagstat
    FORMAL_ARGUMENT_LIST
      DECLARATION
        MULTI_TYPE
          file
        DECLARE_VARIABLE_REST
          output
    FORMAL_ARGUMENT_LIST
      DECLARATION
        MULTI_TYPE
          string
        DECLARE_VARIABLE_REST
          samtoolsdir
      DECLARATION
        MULTI_TYPE
          file
        DECLARE_VARIABLE_REST
          inputFile
    APP_BODY
      COMMAND
        VARIABLE
          samtoolsdir
        STRING_LITERAL
          "flagstat"
        VARIABLE
          inputFile
      APP_REDIRECTION
        stdout
        VARIABLE
          output
    ANNOTATION
      dispatch
      WORKER
  <EOF>

DEBUG VCcallingPipeline.swift:9: Entered module pipelinefunctions.align_dedup on pass DEFINITIONS
INFO  defineAppFunction
INFO  defineAppFunction
INFO  defineAppFunction
DEBUG align_dedup.swift:20:21: builtin: samtools_view2 (string,string) -> (int)
INFO  defineAppFunction
INFO  defineAppFunction
INFO  defineAppFunction
INFO  defineAppFunction
INFO  defineAppFunction
DEBUG align_dedup.swift:54: Finishing modulepipelinefunctions.align_dedup for pass DEFINITIONS
DEBUG VCcallingPipeline.swift:10: Resolved pipelinefunctions.realign_varcall_by_chr to ./pipelinefunctions/realign_varcall_by_chr.swift
DEBUG VCcallingPipeline.swift:10: Loading new module pipelinefunctions.realign_varcall_by_chr
DEBUG VCcallingPipeline.swift:10: printTree:
PROGRAM
  DEFINE_APP_FUNCTION
    find
    FORMAL_ARGUMENT_LIST
      DECLARATION
        MULTI_TYPE
          file
        DECLARE_VARIABLE_REST
          output
    FORMAL_ARGUMENT_LIST
      DECLARATION
        MULTI_TYPE
          string
        DECLARE_VARIABLE_REST
          dir
      DECLARATION
        MULTI_TYPE
          string
        DECLARE_VARIABLE_REST
          pattern
    APP_BODY
      COMMAND
        STRING_LITERAL
          "/usr/bin/find"
        VARIABLE
          dir
        STRING_LITERAL
          "-name"
        VARIABLE
          pattern
      APP_REDIRECTION
        stdout
        VARIABLE
          output
  DEFINE_APP_FUNCTION
    samtools_index
    FORMAL_ARGUMENT_LIST
    FORMAL_ARGUMENT_LIST
      DECLARATION
        MULTI_TYPE
          string
        DECLARE_VARIABLE_REST
          samtoolsdir
      DECLARATION
        MULTI_TYPE
          file
        DECLARE_VARIABLE_REST
          inputFilename
    APP_BODY
      COMMAND
        VARIABLE
          samtoolsdir
        STRING_LITERAL
          "index"
        VARIABLE
          inputFilename
    ANNOTATION
      dispatch
      WORKER
  DEFINE_APP_FUNCTION
    RealignerTargetCreator
    FORMAL_ARGUMENT_LIST
      DECLARATION
        MULTI_TYPE
          file
        DECLARE_VARIABLE_REST
          outputfile
    FORMAL_ARGUMENT_LIST
      DECLARATION
        MULTI_TYPE
          string
        DECLARE_VARIABLE_REST
          javadir
      DECLARATION
        MULTI_TYPE
          string
        DECLARE_VARIABLE_REST
          gatkdir
      DECLARATION
        MULTI_TYPE
          string
        DECLARE_VARIABLE_REST
          reference
      DECLARATION
        MULTI_TYPE
          file
        DECLARE_VARIABLE_REST
          inputFile
      DECLARATION
        MULTI_TYPE
          int
        DECLARE_VARIABLE_REST
          thr
      DECLARATION
        MULTI_TYPE
          string
        DECLARE_VARIABLE_REST
          known
          ARRAY
    APP_BODY
      COMMAND
        VARIABLE
          javadir
        STRING_LITERAL
          "-Xmx8g"
        STRING_LITERAL
          "-jar"
        VARIABLE
          gatkdir
        STRING_LITERAL
          "-T"
        STRING_LITERAL
          "RealignerTargetCreator"
        STRING_LITERAL
          "-R"
        VARIABLE
          reference
        STRING_LITERAL
          "-I"
        VARIABLE
          inputFile
        VARIABLE
          known
        STRING_LITERAL
          "-nt"
        VARIABLE
          thr
        STRING_LITERAL
          "-o"
        VARIABLE
          outputfile
    ANNOTATION
      dispatch
      WORKER
  DEFINE_APP_FUNCTION
    IndelRealigner
    FORMAL_ARGUMENT_LIST
      DECLARATION
        MULTI_TYPE
          file
        DECLARE_VARIABLE_REST
          outputfile
    FORMAL_ARGUMENT_LIST
      DECLARATION
        MULTI_TYPE
          string
        DECLARE_VARIABLE_REST
          javadir
      DECLARATION
        MULTI_TYPE
          string
        DECLARE_VARIABLE_REST
          gatkdir
      DECLARATION
        MULTI_TYPE
          string
        DECLARE_VARIABLE_REST
          reference
      DECLARATION
        MULTI_TYPE
          file
        DECLARE_VARIABLE_REST
          inputFile
      DECLARATION
        MULTI_TYPE
          string
        DECLARE_VARIABLE_REST
          known
          ARRAY
      DECLARATION
        MULTI_TYPE
          file
        DECLARE_VARIABLE_REST
          intervals
    APP_BODY
      COMMAND
        VARIABLE
          javadir
        STRING_LITERAL
          "-Xmx8g"
        STRING_LITERAL
          "-jar"
        VARIABLE
          gatkdir
        STRING_LITERAL
          "-T"
        STRING_LITERAL
          "IndelRealigner"
        STRING_LITERAL
          "-R"
        VARIABLE
          reference
        STRING_LITERAL
          "-I"
        VARIABLE
          inputFile
        VARIABLE
          known
        STRING_LITERAL
          "--targetIntervals"
        VARIABLE
          intervals
        STRING_LITERAL
          "-o"
        VARIABLE
          outputfile
    ANNOTATION
      dispatch
      WORKER
  DEFINE_APP_FUNCTION
    BaseRecalibrator
    FORMAL_ARGUMENT_LIST
      DECLARATION
        MULTI_TYPE
          file
        DECLARE_VARIABLE_REST
          outputfile
    FORMAL_ARGUMENT_LIST
      DECLARATION
        MULTI_TYPE
          string
        DECLARE_VARIABLE_REST
          javadir
      DECLARATION
        MULTI_TYPE
          string
        DECLARE_VARIABLE_REST
          gatkdir
      DECLARATION
        MULTI_TYPE
          string
        DECLARE_VARIABLE_REST
          reference
      DECLARATION
        MULTI_TYPE
          file
        DECLARE_VARIABLE_REST
          inputFile
      DECLARATION
        MULTI_TYPE
          int
        DECLARE_VARIABLE_REST
          thr
      DECLARATION
        MULTI_TYPE
          string
        DECLARE_VARIABLE_REST
          knownindels
          ARRAY
      DECLARATION
        MULTI_TYPE
          string
        DECLARE_VARIABLE_REST
          dbsnp
    APP_BODY
      COMMAND
        VARIABLE
          javadir
        STRING_LITERAL
          "-Xmx16g"
        STRING_LITERAL
          "-jar"
        VARIABLE
          gatkdir
        STRING_LITERAL
          "-T"
        STRING_LITERAL
          "BaseRecalibrator"
        STRING_LITERAL
          "-R"
        VARIABLE
          reference
        STRING_LITERAL
          "-I"
        VARIABLE
          inputFile
        STRING_LITERAL
          "-knownSites"
        VARIABLE
          dbsnp
        VARIABLE
          knownindels
        STRING_LITERAL
          "-nct"
        VARIABLE
          thr
        STRING_LITERAL
          "-o"
        VARIABLE
          outputfile
    ANNOTATION
      dispatch
      WORKER
  DEFINE_APP_FUNCTION
    PrintReads
    FORMAL_ARGUMENT_LIST
      DECLARATION
        MULTI_TYPE
          file
        DECLARE_VARIABLE_REST
          outputfile
    FORMAL_ARGUMENT_LIST
      DECLARATION
        MULTI_TYPE
          string
        DECLARE_VARIABLE_REST
          javadir
      DECLARATION
        MULTI_TYPE
          string
        DECLARE_VARIABLE_REST
          gatkdir
      DECLARATION
        MULTI_TYPE
          string
        DECLARE_VARIABLE_REST
          reference
      DECLARATION
        MULTI_TYPE
          file
        DECLARE_VARIABLE_REST
          inputFile
      DECLARATION
        MULTI_TYPE
          int
        DECLARE_VARIABLE_REST
          thr
      DECLARATION
        MULTI_TYPE
          file
        DECLARE_VARIABLE_REST
          recalreport
    APP_BODY
      COMMAND
        VARIABLE
          javadir
        STRING_LITERAL
          "-Xmx16g"
        STRING_LITERAL
          "-jar"
        VARIABLE
          gatkdir
        STRING_LITERAL
          "-T"
        STRING_LITERAL
          "PrintReads"
        STRING_LITERAL
          "-R"
        VARIABLE
          reference
        STRING_LITERAL
          "-I"
        VARIABLE
          inputFile
        STRING_LITERAL
          "-BQSR"
        VARIABLE
          recalreport
        STRING_LITERAL
          "-nct"
        VARIABLE
          thr
        STRING_LITERAL
          "--out"
        VARIABLE
          outputfile
    ANNOTATION
      dispatch
      WORKER
  DEFINE_APP_FUNCTION
    HaplotypeCaller
    FORMAL_ARGUMENT_LIST
      DECLARATION
        MULTI_TYPE
          file
        DECLARE_VARIABLE_REST
          outputfile
    FORMAL_ARGUMENT_LIST
      DECLARATION
        MULTI_TYPE
          string
        DECLARE_VARIABLE_REST
          javadir
      DECLARATION
        MULTI_TYPE
          string
        DECLARE_VARIABLE_REST
          gatkdir
      DECLARATION
        MULTI_TYPE
          string
        DECLARE_VARIABLE_REST
          reference
      DECLARATION
        MULTI_TYPE
          file
        DECLARE_VARIABLE_REST
          inputFile
      DECLARATION
        MULTI_TYPE
          string
        DECLARE_VARIABLE_REST
          dbsnp
      DECLARATION
        MULTI_TYPE
          int
        DECLARE_VARIABLE_REST
          thr
      DECLARATION
        MULTI_TYPE
          int
        DECLARE_VARIABLE_REST
          ploidy
      DECLARATION
        MULTI_TYPE
          string
        DECLARE_VARIABLE_REST
          chr
    APP_BODY
      COMMAND
        VARIABLE
          javadir
        STRING_LITERAL
          "-Xmx8g"
        STRING_LITERAL
          "-jar"
        VARIABLE
          gatkdir
        STRING_LITERAL
          "-T"
        STRING_LITERAL
          "HaplotypeCaller"
        STRING_LITERAL
          "-R"
        VARIABLE
          reference
        STRING_LITERAL
          "-I"
        VARIABLE
          inputFile
        STRING_LITERAL
          "--dbsnp"
        VARIABLE
          dbsnp
        STRING_LITERAL
          "-o"
        VARIABLE
          outputfile
        STRING_LITERAL
          "--emitRefConfidence"
        STRING_LITERAL
          "GVCF"
        STRING_LITERAL
          "-gt_mode"
        STRING_LITERAL
          "DISCOVERY"
        STRING_LITERAL
          "-A"
        STRING_LITERAL
          "Coverage"
        STRING_LITERAL
          "-A"
        STRING_LITERAL
          "FisherStrand"
        STRING_LITERAL
          "-A"
        STRING_LITERAL
          "StrandOddsRatio"
        STRING_LITERAL
          "-A"
        STRING_LITERAL
          "HaplotypeScore"
        STRING_LITERAL
          "-A"
        STRING_LITERAL
          "MappingQualityRankSumTest"
        STRING_LITERAL
          "-A"
        STRING_LITERAL
          "QualByDepth"
        STRING_LITERAL
          "-A"
        STRING_LITERAL
          "RMSMappingQuality"
        STRING_LITERAL
          "-A"
        STRING_LITERAL
          "ReadPosRankSumTest"
        STRING_LITERAL
          "-stand_call_conf"
        INT_LITERAL
          30
        STRING_LITERAL
          "-stand_emit_conf"
        INT_LITERAL
          30
        STRING_LITERAL
          "--sample_ploidy"
        VARIABLE
          ploidy
        STRING_LITERAL
          "-nt"
        INT_LITERAL
          1
        STRING_LITERAL
          "-nct"
        VARIABLE
          thr
        STRING_LITERAL
          "-L"
        VARIABLE
          chr
    ANNOTATION
      dispatch
      WORKER
  <EOF>

DEBUG VCcallingPipeline.swift:10: Entered module pipelinefunctions.realign_varcall_by_chr on pass DEFINITIONS
INFO  defineAppFunction
INFO  defineAppFunction
INFO  defineAppFunction
INFO  defineAppFunction
INFO  defineAppFunction
INFO  defineAppFunction
INFO  defineAppFunction
DEBUG realign_varcall_by_chr.swift:36: Finishing modulepipelinefunctions.realign_varcall_by_chr for pass DEFINITIONS
DEBUG VCcallingPipeline.swift:11: Resolved pipelinefunctions.merge_vcf to ./pipelinefunctions/merge_vcf.swift
DEBUG VCcallingPipeline.swift:11: Loading new module pipelinefunctions.merge_vcf
DEBUG VCcallingPipeline.swift:11: printTree:
PROGRAM
  DEFINE_APP_FUNCTION
    CombineGVCFs
    FORMAL_ARGUMENT_LIST
      DECLARATION
        MULTI_TYPE
          file
        DECLARE_VARIABLE_REST
          outputfile
    FORMAL_ARGUMENT_LIST
      DECLARATION
        MULTI_TYPE
          string
        DECLARE_VARIABLE_REST
          javadir
      DECLARATION
        MULTI_TYPE
          string
        DECLARE_VARIABLE_REST
          gatkdir
      DECLARATION
        MULTI_TYPE
          string
        DECLARE_VARIABLE_REST
          reference
      DECLARATION
        MULTI_TYPE
          string
        DECLARE_VARIABLE_REST
          dbsnp
      DECLARATION
        MULTI_TYPE
          string
        DECLARE_VARIABLE_REST
          variants
          ARRAY
    APP_BODY
      COMMAND
        VARIABLE
          javadir
        STRING_LITERAL
          "-Xmx8g"
        STRING_LITERAL
          "-jar"
        VARIABLE
          gatkdir
        STRING_LITERAL
          "-T"
        STRING_LITERAL
          "CombineGVCFs"
        STRING_LITERAL
          "-R"
        VARIABLE
          reference
        STRING_LITERAL
          "--dbsnp"
        VARIABLE
          dbsnp
        VARIABLE
          variants
        STRING_LITERAL
          "-o"
        VARIABLE
          outputfile
    ANNOTATION
      dispatch
      WORKER
  <EOF>

DEBUG VCcallingPipeline.swift:11: Entered module pipelinefunctions.merge_vcf on pass DEFINITIONS
INFO  defineAppFunction
DEBUG merge_vcf.swift:7: Finishing modulepipelinefunctions.merge_vcf for pass DEFINITIONS
DEBUG VCcallingPipeline.swift:12: Resolved pipelinefunctions.joint_vcf to ./pipelinefunctions/joint_vcf.swift
DEBUG VCcallingPipeline.swift:12: Loading new module pipelinefunctions.joint_vcf
DEBUG VCcallingPipeline.swift:12: printTree:
PROGRAM
  DEFINE_APP_FUNCTION
    GenotypeGVCFs
    FORMAL_ARGUMENT_LIST
      DECLARATION
        MULTI_TYPE
          file
        DECLARE_VARIABLE_REST
          outputfile
    FORMAL_ARGUMENT_LIST
      DECLARATION
        MULTI_TYPE
          string
        DECLARE_VARIABLE_REST
          javadir
      DECLARATION
        MULTI_TYPE
          string
        DECLARE_VARIABLE_REST
          gatkdir
      DECLARATION
        MULTI_TYPE
          string
        DECLARE_VARIABLE_REST
          reference
      DECLARATION
        MULTI_TYPE
          string
        DECLARE_VARIABLE_REST
          variants
          ARRAY
    APP_BODY
      COMMAND
        VARIABLE
          javadir
        STRING_LITERAL
          "-Xmx8g"
        STRING_LITERAL
          "-jar"
        VARIABLE
          gatkdir
        STRING_LITERAL
          "-T"
        STRING_LITERAL
          "GenotypeGVCFs"
        STRING_LITERAL
          "-R"
        VARIABLE
          reference
        VARIABLE
          variants
        STRING_LITERAL
          "-o"
        VARIABLE
          outputfile
    ANNOTATION
      dispatch
      WORKER
  <EOF>

DEBUG VCcallingPipeline.swift:12: Entered module pipelinefunctions.joint_vcf on pass DEFINITIONS
INFO  defineAppFunction
DEBUG joint_vcf.swift:7: Finishing modulepipelinefunctions.joint_vcf for pass DEFINITIONS
DEBUG VCcallingPipeline.swift:13: Resolved pipelinefunctions.miscellaneous to ./pipelinefunctions/miscellaneous.swift
DEBUG VCcallingPipeline.swift:13: Loading new module pipelinefunctions.miscellaneous
DEBUG VCcallingPipeline.swift:13: printTree:
PROGRAM
  DEFINE_FUNCTION
    getConfigVariables
    TYPE_PARAMETERS
    FORMAL_ARGUMENT_LIST
      DECLARATION
        MULTI_TYPE
          string
        DECLARE_VARIABLE_REST
          data
          ARRAY
            STANDALONE_TYPE
              string
    FORMAL_ARGUMENT_LIST
      DECLARATION
        MULTI_TYPE
          string
        DECLARE_VARIABLE_REST
          lines
          ARRAY
    BLOCK
      FOREACH_LOOP
        VARIABLE
          lines
        BLOCK
          DECLARATION
            string
            DECLARE_ASSIGN
              DECLARE_VARIABLE_REST
                keyValuePair
                ARRAY
              CALL_FUNCTION
                split
                ARGUMENT_LIST
                  VARIABLE
                    line
                  STRING_LITERAL
                    "="
          DECLARATION
            string
            DECLARE_ASSIGN
              DECLARE_VARIABLE_REST
                name
              ARRAY_LOAD
                VARIABLE
                  keyValuePair
                INT_LITERAL
                  0
          DECLARATION
            string
            DECLARE_ASSIGN
              DECLARE_VARIABLE_REST
                value
              ARRAY_LOAD
                VARIABLE
                  keyValuePair
                INT_LITERAL
                  1
          ASSIGN_EXPRESSION
            =
            IDENTIFIER_LIST
              ASSIGN_TARGET
                VARIABLE
                  data
                ARRAY_PATH
                  VARIABLE
                    name
            VARIABLE
              value
        line
  DEFINE_APP_FUNCTION
    find_files
    FORMAL_ARGUMENT_LIST
      DECLARATION
        MULTI_TYPE
          file
        DECLARE_VARIABLE_REST
          output
    FORMAL_ARGUMENT_LIST
      DECLARATION
        MULTI_TYPE
          string
        DECLARE_VARIABLE_REST
          dir
      DECLARATION
        MULTI_TYPE
          string
        DECLARE_VARIABLE_REST
          pattern
    APP_BODY
      COMMAND
        STRING_LITERAL
          "find"
        VARIABLE
          dir
        STRING_LITERAL
          "-name"
        VARIABLE
          pattern
      APP_REDIRECTION
        stdout
        VARIABLE
          output
    ANNOTATION
      dispatch
      WORKER
  <EOF>

DEBUG VCcallingPipeline.swift:13: Entered module pipelinefunctions.miscellaneous on pass DEFINITIONS
DEBUG miscellaneous.swift:4:23: define function: miscellaneous.swift:4:23: getConfigVariables
INFO  defineAppFunction
DEBUG miscellaneous.swift:20: Finishing modulepipelinefunctions.miscellaneous for pass DEFINITIONS
DEBUG VCcallingPipeline.swift:241: Finishing moduleVCcallingPipeline for pass DEFINITIONS
DEBUG VCcallingPipeline.swift:241: analyzer: starting: top level
DEBUG builtins.swift:42:  Variable HARD was declared and assigned
DEBUG builtins.swift:43:  Variable SOFT was declared and assigned
DEBUG builtins.swift:45:  Variable RANK was declared and assigned
DEBUG builtins.swift:46:  Variable NODE was declared and assigned
DEBUG VCcallingPipeline.swift:241: analyzer: done: top level
DEBUG VCcallingPipeline.swift:241: analyzer: starting: top level
DEBUG VCcallingPipeline.swift:4:  Resolved sys to /usr/local/src/swift-t-1.1/turbine/export/sys.swift
DEBUG sys.swift:26:12:  Resolved files to /usr/local/src/swift-t-1.1/turbine/export/files.swift
DEBUG files.swift:24:10:  Resolved string to /usr/local/src/swift-t-1.1/turbine/export/string.swift
DEBUG string.swift:23:9:  Resolved unix to /usr/local/src/swift-t-1.1/turbine/export/unix.swift
DEBUG unix.swift:22:14:  Resolved assert to /usr/local/src/swift-t-1.1/turbine/export/assert.swift
DEBUG assert.swift:23:10:  Resolved pipelinefunctions.align_dedup to ./pipelinefunctions/align_dedup.swift
DEBUG align_dedup.swift:3:19:  Resolved pipelinefunctions.realign_varcall_by_chr to ./pipelinefunctions/realign_varcall_by_chr.swift
DEBUG realign_varcall_by_chr.swift:1:19:  Resolved pipelinefunctions.merge_vcf to ./pipelinefunctions/merge_vcf.swift
DEBUG merge_vcf.swift:2:23:  Resolved pipelinefunctions.joint_vcf to ./pipelinefunctions/joint_vcf.swift
DEBUG joint_vcf.swift:2:23:  Resolved pipelinefunctions.miscellaneous to ./pipelinefunctions/miscellaneous.swift
DEBUG VCcallingPipeline.swift:20:  Variable configFilename was declared and assigned
DEBUG VCcallingPipeline.swift:22:  Variable configFile was declared and assigned
DEBUG VCcallingPipeline.swift:23:  Variable configFileData was declared and assigned
DEBUG VCcallingPipeline.swift:25:  Variable vars was declared and assigned
DEBUG VCcallingPipeline.swift:27:  Variable sampleInfoFile was declared and assigned
DEBUG VCcallingPipeline.swift:27:34:  Complex read rooted at var: vars
DEBUG VCcallingPipeline.swift:28:  Variable sampleLines was declared and assigned
DEBUG VCcallingPipeline.swift:34:2:   Variable sampleInfo was declared and assigned
DEBUG VCcallingPipeline.swift:35:2:   Variable sampleName was declared and assigned
DEBUG VCcallingPipeline.swift:35:22:   Complex read rooted at var: sampleInfo
DEBUG VCcallingPipeline.swift:36:2:   Variable read1 was declared and assigned
DEBUG VCcallingPipeline.swift:36:17:   Complex read rooted at var: sampleInfo
DEBUG VCcallingPipeline.swift:37:2:   Variable read2 was declared and assigned
DEBUG VCcallingPipeline.swift:37:17:   Complex read rooted at var: sampleInfo
DEBUG VCcallingPipeline.swift:39:2:   Variable rgheader was declared and assigned
DEBUG VCcallingPipeline.swift:39:149:   Complex read rooted at var: vars
DEBUG VCcallingPipeline.swift:39:107:   Complex read rooted at var: vars
DEBUG VCcallingPipeline.swift:39:89:   Complex read rooted at var: vars
DEBUG VCcallingPipeline.swift:43:2:   Variable VarcallDir was declared and assigned
DEBUG VCcallingPipeline.swift:43:29:   Complex read rooted at var: vars
DEBUG VCcallingPipeline.swift:44:2:   Variable RealignDir was declared and assigned
DEBUG VCcallingPipeline.swift:44:29:   Complex read rooted at var: vars
DEBUG VCcallingPipeline.swift:48:30:   Complex read rooted at var: vars
DEBUG VCcallingPipeline.swift:52:46:   Complex read rooted at var: vars
DEBUG VCcallingPipeline.swift:52:22:   Complex read rooted at var: vars
DEBUG VCcallingPipeline.swift:53:44:   Complex read rooted at var: vars
DEBUG VCcallingPipeline.swift:53:26:   Complex read rooted at var: vars
DEBUG VCcallingPipeline.swift:54:48:   Complex read rooted at var: vars
DEBUG VCcallingPipeline.swift:54:30:   Complex read rooted at var: vars
DEBUG VCcallingPipeline.swift:57:25:   Complex read rooted at var: vars
DEBUG VCcallingPipeline.swift:60:26:   Complex read rooted at var: vars
DEBUG VCcallingPipeline.swift:61:32:   Complex read rooted at var: vars
DEBUG VCcallingPipeline.swift:62:32:   Complex read rooted at var: vars
DEBUG VCcallingPipeline.swift:64:6:   Complex read rooted at var: vars
DEBUG VCcallingPipeline.swift:66:25:    Complex read rooted at var: vars
DEBUG VCcallingPipeline.swift:67:25:    Complex read rooted at var: vars
DEBUG VCcallingPipeline.swift:69:107:    Complex read rooted at var: vars
DEBUG VCcallingPipeline.swift:69:73:    Complex read rooted at var: vars
DEBUG VCcallingPipeline.swift:69:54:    Complex read rooted at var: vars
DEBUG VCcallingPipeline.swift:69:24:    Complex read rooted at var: vars
DEBUG VCcallingPipeline.swift:70:25:    Complex read rooted at var: vars
DEBUG VCcallingPipeline.swift:71:70:    Complex read rooted at var: vars
DEBUG VCcallingPipeline.swift:71:28:    Complex read rooted at var: vars
DEBUG VCcallingPipeline.swift:72:3:    Variable numAlignments_dedup was declared and assigned
DEBUG VCcallingPipeline.swift:72:44:    Complex read rooted at var: vars
DEBUG VCcallingPipeline.swift:75:110:    Complex read rooted at var: vars
DEBUG VCcallingPipeline.swift:75:83:    Complex read rooted at var: vars
DEBUG VCcallingPipeline.swift:75:36:    Complex read rooted at var: vars
DEBUG VCcallingPipeline.swift:76:3:    Variable numAlignments_dedupsortedbam was declared and assigned
DEBUG VCcallingPipeline.swift:76:53:    Complex read rooted at var: vars
DEBUG VCcallingPipeline.swift:80:27:    Complex read rooted at var: vars
DEBUG VCcallingPipeline.swift:81:7:    Complex read rooted at var: vars
DEBUG VCcallingPipeline.swift:83:34:     Complex read rooted at var: vars
DEBUG VCcallingPipeline.swift:84:29:     Complex read rooted at var: vars
DEBUG VCcallingPipeline.swift:85:108:     Complex read rooted at var: vars
DEBUG VCcallingPipeline.swift:85:74:     Complex read rooted at var: vars
DEBUG VCcallingPipeline.swift:85:55:     Complex read rooted at var: vars
DEBUG VCcallingPipeline.swift:85:25:     Complex read rooted at var: vars
DEBUG VCcallingPipeline.swift:86:75:     Complex read rooted at var: vars
DEBUG VCcallingPipeline.swift:86:31:     Complex read rooted at var: vars
DEBUG VCcallingPipeline.swift:87:4:     Variable numAlignments_aligned was declared and assigned
DEBUG VCcallingPipeline.swift:87:47:     Complex read rooted at var: vars
DEBUG VCcallingPipeline.swift:90:116:     Complex read rooted at var: vars
DEBUG VCcallingPipeline.swift:90:89:     Complex read rooted at var: vars
DEBUG VCcallingPipeline.swift:90:39:     Complex read rooted at var: vars
DEBUG VCcallingPipeline.swift:91:76:     Complex read rooted at var: vars
DEBUG VCcallingPipeline.swift:91:57:     Complex read rooted at var: vars
DEBUG VCcallingPipeline.swift:91:40:     Complex read rooted at var: vars
DEBUG VCcallingPipeline.swift:92:4:     Variable numAlignments_dedupsortedbam was declared and assigned
DEBUG VCcallingPipeline.swift:92:54:     Complex read rooted at var: vars
DEBUG VCcallingPipeline.swift:97:8:     Complex read rooted at var: vars
DEBUG VCcallingPipeline.swift:98:109:      Complex read rooted at var: vars
DEBUG VCcallingPipeline.swift:98:75:      Complex read rooted at var: vars
DEBUG VCcallingPipeline.swift:98:56:      Complex read rooted at var: vars
DEBUG VCcallingPipeline.swift:98:26:      Complex read rooted at var: vars
DEBUG VCcallingPipeline.swift:99:75:      Complex read rooted at var: vars
DEBUG VCcallingPipeline.swift:99:32:      Complex read rooted at var: vars
DEBUG VCcallingPipeline.swift:101:150:      Complex read rooted at var: vars
DEBUG VCcallingPipeline.swift:101:113:      Complex read rooted at var: vars
DEBUG VCcallingPipeline.swift:101:88:      Complex read rooted at var: vars
DEBUG VCcallingPipeline.swift:101:35:      Complex read rooted at var: vars
DEBUG VCcallingPipeline.swift:102:76:      Complex read rooted at var: vars
DEBUG VCcallingPipeline.swift:102:32:      Complex read rooted at var: vars
DEBUG VCcallingPipeline.swift:104:4:     Variable numAlignments_aligned was declared and assigned
DEBUG VCcallingPipeline.swift:104:47:     Complex read rooted at var: vars
DEBUG VCcallingPipeline.swift:108:114:      Complex read rooted at var: vars
DEBUG VCcallingPipeline.swift:108:87:      Complex read rooted at var: vars
DEBUG VCcallingPipeline.swift:108:38:      Complex read rooted at var: vars
DEBUG VCcallingPipeline.swift:109:5:      Variable numAlignments_dedupsortedbam was declared and assigned
DEBUG VCcallingPipeline.swift:109:55:      Complex read rooted at var: vars
DEBUG VCcallingPipeline.swift:119:55:   Complex read rooted at var: vars
DEBUG VCcallingPipeline.swift:120:56:   Complex read rooted at var: vars
DEBUG VCcallingPipeline.swift:122:32:   Complex read rooted at var: vars
DEBUG VCcallingPipeline.swift:124:2:   Variable stat was declared and assigned
DEBUG Undeclared var tot_mapped
DEBUG VCcallingPipeline.swift:125:21:   Complex read rooted at var: stat
DEBUG Undeclared var tot_reads
DEBUG VCcallingPipeline.swift:126:20:   Complex read rooted at var: stat
DEBUG Undeclared var tot_dups
DEBUG VCcallingPipeline.swift:127:19:   Complex read rooted at var: stat
DEBUG Undeclared var perc_dup
DEBUG Undeclared var perc_mapped
DEBUG VCcallingPipeline.swift:132:31:   Complex read rooted at var: vars
DEBUG VCcallingPipeline.swift:133:124:    Complex read rooted at var: vars
DEBUG VCcallingPipeline.swift:134:35:    Complex read rooted at var: vars
DEBUG VCcallingPipeline.swift:135:121:     Complex read rooted at var: vars
DEBUG VCcallingPipeline.swift:136:207:     Complex read rooted at var: vars
DEBUG VCcallingPipeline.swift:136:119:     Complex read rooted at var: vars
DEBUG VCcallingPipeline.swift:138:127:     Complex read rooted at var: vars
DEBUG VCcallingPipeline.swift:139:211:     Complex read rooted at var: vars
DEBUG VCcallingPipeline.swift:139:119:     Complex read rooted at var: vars
DEBUG VCcallingPipeline.swift:142:129:    Complex read rooted at var: vars
DEBUG Undeclared var indices
DEBUG VCcallingPipeline.swift:155:18:   Complex read rooted at var: vars
DEBUG VCcallingPipeline.swift:169:29:     Complex read rooted at var: vars
DEBUG VCcallingPipeline.swift:170:28:     Complex read rooted at var: vars
DEBUG VCcallingPipeline.swift:175:86:     Complex read rooted at var: vars
DEBUG VCcallingPipeline.swift:175:38:     Complex read rooted at var: vars
DEBUG VCcallingPipeline.swift:176:4:     Variable numAlignments_chrdedupsortedbam was declared and assigned
DEBUG VCcallingPipeline.swift:176:57:     Complex read rooted at var: vars
DEBUG VCcallingPipeline.swift:179:19:     Complex read rooted at var: vars
DEBUG VCcallingPipeline.swift:181:57:     Complex read rooted at var: vars
DEBUG VCcallingPipeline.swift:181:36:     Complex read rooted at var: vars
DEBUG VCcallingPipeline.swift:182:4:     Variable recalparmsindels was declared and assigned
DEBUG VCcallingPipeline.swift:184:56:     Complex read rooted at var: vars
DEBUG VCcallingPipeline.swift:184:35:     Complex read rooted at var: vars
DEBUG VCcallingPipeline.swift:185:4:     Variable realparms was declared and assigned
DEBUG VCcallingPipeline.swift:190:175:     Complex read rooted at var: vars
DEBUG VCcallingPipeline.swift:190:126:     Complex read rooted at var: vars
DEBUG VCcallingPipeline.swift:190:105:     Complex read rooted at var: vars
DEBUG VCcallingPipeline.swift:190:64:     Complex read rooted at var: vars
DEBUG VCcallingPipeline.swift:190:40:     Complex read rooted at var: vars
DEBUG VCcallingPipeline.swift:191:121:     Complex read rooted at var: vars
DEBUG VCcallingPipeline.swift:191:100:     Complex read rooted at var: vars
DEBUG VCcallingPipeline.swift:191:59:     Complex read rooted at var: vars
DEBUG VCcallingPipeline.swift:191:35:     Complex read rooted at var: vars
DEBUG VCcallingPipeline.swift:192:4:     Variable numAlignments_realignedbam was declared and assigned
DEBUG VCcallingPipeline.swift:192:52:     Complex read rooted at var: vars
DEBUG VCcallingPipeline.swift:195:224:     Complex read rooted at var: vars
DEBUG VCcallingPipeline.swift:195:203:     Complex read rooted at var: vars
DEBUG VCcallingPipeline.swift:195:166:     Complex read rooted at var: vars
DEBUG VCcallingPipeline.swift:195:122:     Complex read rooted at var: vars
DEBUG VCcallingPipeline.swift:195:101:     Complex read rooted at var: vars
DEBUG VCcallingPipeline.swift:195:60:     Complex read rooted at var: vars
DEBUG VCcallingPipeline.swift:195:36:     Complex read rooted at var: vars
DEBUG VCcallingPipeline.swift:196:164:     Complex read rooted at var: vars
DEBUG VCcallingPipeline.swift:196:120:     Complex read rooted at var: vars
DEBUG VCcallingPipeline.swift:196:99:     Complex read rooted at var: vars
DEBUG VCcallingPipeline.swift:196:58:     Complex read rooted at var: vars
DEBUG VCcallingPipeline.swift:196:34:     Complex read rooted at var: vars
DEBUG VCcallingPipeline.swift:197:4:     Variable numAlignments_recalibratedbam was declared and assigned
DEBUG VCcallingPipeline.swift:197:55:     Complex read rooted at var: vars
DEBUG VCcallingPipeline.swift:201:204:     Complex read rooted at var: vars
DEBUG VCcallingPipeline.swift:201:178:     Complex read rooted at var: vars
DEBUG VCcallingPipeline.swift:201:157:     Complex read rooted at var: vars
DEBUG VCcallingPipeline.swift:201:121:     Complex read rooted at var: vars
DEBUG VCcallingPipeline.swift:201:100:     Complex read rooted at var: vars
DEBUG VCcallingPipeline.swift:201:59:     Complex read rooted at var: vars
DEBUG VCcallingPipeline.swift:201:35:     Complex read rooted at var: vars
DEBUG VCcallingPipeline.swift:215:2:   Variable chr_bamList was declared and assigned
DEBUG VCcallingPipeline.swift:216:106:   Complex read rooted at var: vars
DEBUG VCcallingPipeline.swift:216:79:   Complex read rooted at var: vars
DEBUG VCcallingPipeline.swift:216:28:   Complex read rooted at var: vars
DEBUG VCcallingPipeline.swift:218:2:   Variable numAlignments_mergedbam was declared and assigned
DEBUG VCcallingPipeline.swift:218:47:   Complex read rooted at var: vars
DEBUG VCcallingPipeline.swift:223:2:   Variable chr_vcfList was declared and assigned
DEBUG VCcallingPipeline.swift:224:155:   Complex read rooted at var: vars
DEBUG VCcallingPipeline.swift:224:134:   Complex read rooted at var: vars
DEBUG VCcallingPipeline.swift:224:115:   Complex read rooted at var: vars
DEBUG VCcallingPipeline.swift:224:94:   Complex read rooted at var: vars
DEBUG VCcallingPipeline.swift:224:53:   Complex read rooted at var: vars
DEBUG VCcallingPipeline.swift:224:29:   Complex read rooted at var: vars
DEBUG VCcallingPipeline.swift:226:63:   Complex read rooted at var: vars
DEBUG VCcallingPipeline.swift:226:45:   Complex read rooted at var: vars
DEBUG VCcallingPipeline.swift:233:42:  Complex read rooted at var: vars
DEBUG VCcallingPipeline.swift:233:24:  Complex read rooted at var: vars
DEBUG VCcallingPipeline.swift:234:28:  Complex read rooted at var: vars
DEBUG VCcallingPipeline.swift:235:32:  Complex read rooted at var: vars
DEBUG VCcallingPipeline.swift:235:14:  Complex read rooted at var: vars
DEBUG VCcallingPipeline.swift:237:47:   Complex read rooted at var: vars
DEBUG VCcallingPipeline.swift:237:29:   Complex read rooted at var: vars
DEBUG VCcallingPipeline.swift:238:2:   Variable varlist was declared and assigned
DEBUG VCcallingPipeline.swift:239:114:   Complex read rooted at var: vars
DEBUG VCcallingPipeline.swift:239:93:   Complex read rooted at var: vars
DEBUG VCcallingPipeline.swift:239:52:   Complex read rooted at var: vars
DEBUG VCcallingPipeline.swift:239:28:   Complex read rooted at var: vars
WARN  VCcallingPipeline.swift:77:35: Variable usage warning. Variable qcfile is assigned on some code paths but not others
WARN  VCcallingPipeline.swift:77:35: Variable usage warning. Variable qcfile might be assigned twice
WARN  VCcallingPipeline.swift:93:36: Variable usage warning. Variable qcfile is assigned on some code paths but not others
WARN  VCcallingPipeline.swift:93:36: Variable usage warning. Variable qcfile might be assigned twice
WARN  VCcallingPipeline.swift:107:10: Variable usage warning. Variable qcfile is assigned on some code paths but not others
WARN  VCcallingPipeline.swift:107:10: Variable usage warning. Variable qcfile might be assigned twice
WARN  VCcallingPipeline.swift:132:16: Variable usage warning. Variable qcfile is assigned on some code paths but not others
WARN  VCcallingPipeline.swift:132:16: Variable usage warning. Variable qcfile might be assigned twice
WARN  VCcallingPipeline.swift:193:34: Variable usage warning. Variable qcfile is assigned on some code paths but not others
WARN  VCcallingPipeline.swift:193:34: Variable usage warning. Variable qcfile might be assigned twice
WARN  VCcallingPipeline.swift:198:37: Variable usage warning. Variable qcfile is assigned on some code paths but not others
WARN  VCcallingPipeline.swift:198:37: Variable usage warning. Variable qcfile might be assigned twice
WARN  VCcallingPipeline.swift:193:34: Variable usage warning. Variable qcfile is assigned on some code paths but not others
WARN  VCcallingPipeline.swift:193:34: Variable usage warning. Variable qcfile might be assigned twice
WARN  VCcallingPipeline.swift:198:37: Variable usage warning. Variable qcfile is assigned on some code paths but not others
WARN  VCcallingPipeline.swift:198:37: Variable usage warning. Variable qcfile might be assigned twice
WARN  VCcallingPipeline.swift:158:7: Variable usage warning. Variable qcfile is assigned on some code paths but not others
WARN  VCcallingPipeline.swift:158:7: Variable usage warning. Variable qcfile might be assigned twice
WARN  VCcallingPipeline.swift:219:29: Variable usage warning. Variable qcfile is assigned on some code paths but not others
WARN  VCcallingPipeline.swift:219:29: Variable usage warning. Variable qcfile might be assigned twice
WARN  VCcallingPipeline.swift:34:2: Variable usage warning. Variable chromosomes_processing_done might be read and not written, possibly leading to deadlock
WARN  VCcallingPipeline.swift:34:2: Variable usage warning. Mapped variable qcfile might not be written
WARN  VCcallingPipeline.swift:77:35: Variable usage warning. Variable qcfile is assigned on some code paths but not others
WARN  VCcallingPipeline.swift:77:35: Variable usage warning. Variable qcfile might be assigned twice
WARN  VCcallingPipeline.swift:93:36: Variable usage warning. Variable qcfile is assigned on some code paths but not others
WARN  VCcallingPipeline.swift:93:36: Variable usage warning. Variable qcfile might be assigned twice
WARN  VCcallingPipeline.swift:107:10: Variable usage warning. Variable qcfile is assigned on some code paths but not others
WARN  VCcallingPipeline.swift:107:10: Variable usage warning. Variable qcfile might be assigned twice
WARN  VCcallingPipeline.swift:132:16: Variable usage warning. Variable qcfile is assigned on some code paths but not others
WARN  VCcallingPipeline.swift:132:16: Variable usage warning. Variable qcfile might be assigned twice
WARN  VCcallingPipeline.swift:193:34: Variable usage warning. Variable qcfile is assigned on some code paths but not others
WARN  VCcallingPipeline.swift:193:34: Variable usage warning. Variable qcfile might be assigned twice
WARN  VCcallingPipeline.swift:198:37: Variable usage warning. Variable qcfile is assigned on some code paths but not others
WARN  VCcallingPipeline.swift:198:37: Variable usage warning. Variable qcfile might be assigned twice
WARN  VCcallingPipeline.swift:193:34: Variable usage warning. Variable qcfile is assigned on some code paths but not others
WARN  VCcallingPipeline.swift:193:34: Variable usage warning. Variable qcfile might be assigned twice
WARN  VCcallingPipeline.swift:198:37: Variable usage warning. Variable qcfile is assigned on some code paths but not others
WARN  VCcallingPipeline.swift:198:37: Variable usage warning. Variable qcfile might be assigned twice
WARN  VCcallingPipeline.swift:158:7: Variable usage warning. Variable qcfile is assigned on some code paths but not others
WARN  VCcallingPipeline.swift:158:7: Variable usage warning. Variable qcfile might be assigned twice
WARN  VCcallingPipeline.swift:219:29: Variable usage warning. Variable qcfile is assigned on some code paths but not others
WARN  VCcallingPipeline.swift:219:29: Variable usage warning. Variable qcfile might be assigned twice
WARN  VCcallingPipeline.swift:34:2: Variable usage warning. Variable chromosomes_processing_done might be read and not written, possibly leading to deadlock
WARN  VCcallingPipeline.swift:34:2: Variable usage warning. Mapped variable qcfile might not be written
WARN  VCcallingPipeline.swift:4: Variable usage warning. Variable samples_processing_done might be read and not written, possibly leading to deadlock
DEBUG VCcallingPipeline.swift:241: analyzer: done: top level
DEBUG VCcallingPipeline.swift:241: Entered module builtins on pass COMPILE_TOPLEVEL
DEBUG builtins.swift:42:20:  walkExpr CALL_FUNCTION assigning to vars: [LocationStrictness:HARD]
DEBUG builtins.swift:42:46:  Create tmp string:__t:1 to eval expr STRING_LITERAL
DEBUG builtins.swift:42:46:  walkExpr STRING_LITERAL assigning to vars: [string:__t:1]
DEBUG builtins.swift:43:20:  walkExpr CALL_FUNCTION assigning to vars: [LocationStrictness:SOFT]
DEBUG builtins.swift:43:46:  Create tmp string:__t:2 to eval expr STRING_LITERAL
DEBUG builtins.swift:43:46:  walkExpr STRING_LITERAL assigning to vars: [string:__t:2]
DEBUG builtins.swift:45:18:  walkExpr CALL_FUNCTION assigning to vars: [LocationAccuracy:RANK]
DEBUG builtins.swift:45:42:  Create tmp string:__t:3 to eval expr STRING_LITERAL
DEBUG builtins.swift:45:42:  walkExpr STRING_LITERAL assigning to vars: [string:__t:3]
DEBUG builtins.swift:46:18:  walkExpr CALL_FUNCTION assigning to vars: [LocationAccuracy:NODE]
DEBUG builtins.swift:46:42:  Create tmp string:__t:4 to eval expr STRING_LITERAL
DEBUG builtins.swift:46:42:  walkExpr STRING_LITERAL assigning to vars: [string:__t:4]
DEBUG VCcallingPipeline.swift:241: Finishing modulebuiltins for pass COMPILE_TOPLEVEL
DEBUG VCcallingPipeline.swift:241: Entered module VCcallingPipeline on pass COMPILE_TOPLEVEL
DEBUG VCcallingPipeline.swift:241: Resolved sys to /usr/local/src/swift-t-1.1/turbine/export/sys.swift
DEBUG VCcallingPipeline.swift:241: Entered module sys on pass COMPILE_TOPLEVEL
DEBUG VCcallingPipeline.swift:241: Finishing modulesys for pass COMPILE_TOPLEVEL
DEBUG VCcallingPipeline.swift:241: Resolved files to /usr/local/src/swift-t-1.1/turbine/export/files.swift
DEBUG VCcallingPipeline.swift:241: Entered module files on pass COMPILE_TOPLEVEL
DEBUG VCcallingPipeline.swift:241: Finishing modulefiles for pass COMPILE_TOPLEVEL
DEBUG VCcallingPipeline.swift:241: Resolved string to /usr/local/src/swift-t-1.1/turbine/export/string.swift
DEBUG VCcallingPipeline.swift:241: Entered module string on pass COMPILE_TOPLEVEL
DEBUG VCcallingPipeline.swift:241: Finishing modulestring for pass COMPILE_TOPLEVEL
DEBUG VCcallingPipeline.swift:241: Resolved unix to /usr/local/src/swift-t-1.1/turbine/export/unix.swift
DEBUG VCcallingPipeline.swift:241: Entered module unix on pass COMPILE_TOPLEVEL
DEBUG VCcallingPipeline.swift:241: Finishing moduleunix for pass COMPILE_TOPLEVEL
DEBUG VCcallingPipeline.swift:241: Resolved assert to /usr/local/src/swift-t-1.1/turbine/export/assert.swift
DEBUG VCcallingPipeline.swift:241: Entered module assert on pass COMPILE_TOPLEVEL
DEBUG VCcallingPipeline.swift:241: Finishing moduleassert for pass COMPILE_TOPLEVEL
DEBUG VCcallingPipeline.swift:241: Resolved pipelinefunctions.align_dedup to ./pipelinefunctions/align_dedup.swift
DEBUG VCcallingPipeline.swift:241: Entered module pipelinefunctions.align_dedup on pass COMPILE_TOPLEVEL
DEBUG VCcallingPipeline.swift:241: Finishing modulepipelinefunctions.align_dedup for pass COMPILE_TOPLEVEL
DEBUG VCcallingPipeline.swift:241: Resolved pipelinefunctions.realign_varcall_by_chr to ./pipelinefunctions/realign_varcall_by_chr.swift
DEBUG VCcallingPipeline.swift:241: Entered module pipelinefunctions.realign_varcall_by_chr on pass COMPILE_TOPLEVEL
DEBUG VCcallingPipeline.swift:241: Finishing modulepipelinefunctions.realign_varcall_by_chr for pass COMPILE_TOPLEVEL
DEBUG VCcallingPipeline.swift:241: Resolved pipelinefunctions.merge_vcf to ./pipelinefunctions/merge_vcf.swift
DEBUG VCcallingPipeline.swift:241: Entered module pipelinefunctions.merge_vcf on pass COMPILE_TOPLEVEL
DEBUG VCcallingPipeline.swift:241: Finishing modulepipelinefunctions.merge_vcf for pass COMPILE_TOPLEVEL
DEBUG VCcallingPipeline.swift:241: Resolved pipelinefunctions.joint_vcf to ./pipelinefunctions/joint_vcf.swift
DEBUG VCcallingPipeline.swift:241: Entered module pipelinefunctions.joint_vcf on pass COMPILE_TOPLEVEL
DEBUG VCcallingPipeline.swift:241: Finishing modulepipelinefunctions.joint_vcf for pass COMPILE_TOPLEVEL
DEBUG VCcallingPipeline.swift:241: Resolved pipelinefunctions.miscellaneous to ./pipelinefunctions/miscellaneous.swift
DEBUG VCcallingPipeline.swift:241: Entered module pipelinefunctions.miscellaneous on pass COMPILE_TOPLEVEL
DEBUG VCcallingPipeline.swift:241: Finishing modulepipelinefunctions.miscellaneous for pass COMPILE_TOPLEVEL
DEBUG VCcallingPipeline.swift:19:  walkExpr CALL_FUNCTION assigning to vars: []
DEBUG VCcallingPipeline.swift:19:13:  Create tmp string:__t:5 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:19:13:  walkExpr STRING_LITERAL assigning to vars: [string:__t:5]
DEBUG VCcallingPipeline.swift:20:8:  walkExpr CALL_FUNCTION assigning to vars: [string:configFilename]
DEBUG VCcallingPipeline.swift:20:30:  Create tmp string:__t:6 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:20:30:  walkExpr STRING_LITERAL assigning to vars: [string:__t:6]
DEBUG VCcallingPipeline.swift:22:6:  walkExpr CALL_FUNCTION assigning to vars: [file:configFile]
DEBUG VCcallingPipeline.swift:23:8:  walkExpr CALL_FUNCTION assigning to vars: [string[int]:configFileData]
DEBUG VCcallingPipeline.swift:25:8:  walkExpr CALL_FUNCTION assigning to vars: [string[string]:vars]
DEBUG VCcallingPipeline.swift:27:6:  walkExpr CALL_FUNCTION assigning to vars: [file:sampleInfoFile]
DEBUG VCcallingPipeline.swift:27:34:  Create tmp string:__t:7 to eval expr ARRAY_LOAD
DEBUG VCcallingPipeline.swift:27:34:  walkExpr ARRAY_LOAD assigning to vars: [string:__t:7]
DEBUG VCcallingPipeline.swift:27:39:  Create tmp string:__t:8 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:27:39:  walkExpr STRING_LITERAL assigning to vars: [string:__t:8]
DEBUG VCcallingPipeline.swift:28:8:  walkExpr CALL_FUNCTION assigning to vars: [string[int]:sampleLines]
DEBUG VCcallingPipeline.swift:34:9:   walkExpr CALL_FUNCTION assigning to vars: [string[int]:sampleInfo]
DEBUG VCcallingPipeline.swift:34:38:   Create tmp string:__t:9 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:34:38:   walkExpr STRING_LITERAL assigning to vars: [string:__t:9]
DEBUG VCcallingPipeline.swift:35:9:   walkExpr ARRAY_LOAD assigning to vars: [string:sampleName]
DEBUG VCcallingPipeline.swift:36:9:   walkExpr ARRAY_LOAD assigning to vars: [string:read1]
DEBUG VCcallingPipeline.swift:37:9:   walkExpr ARRAY_LOAD assigning to vars: [string:read2]
DEBUG VCcallingPipeline.swift:39:9:   walkExpr CALL_FUNCTION assigning to vars: [string:rgheader]
DEBUG VCcallingPipeline.swift:39:28:   Create tmp string:__t:10 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:39:28:   walkExpr STRING_LITERAL assigning to vars: [string:__t:10]
DEBUG VCcallingPipeline.swift:39:89:   Create tmp string:__t:11 to eval expr ARRAY_LOAD
DEBUG VCcallingPipeline.swift:39:89:   walkExpr ARRAY_LOAD assigning to vars: [string:__t:11]
DEBUG VCcallingPipeline.swift:39:94:   Create tmp string:__t:12 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:39:94:   walkExpr STRING_LITERAL assigning to vars: [string:__t:12]
DEBUG VCcallingPipeline.swift:39:107:   Create tmp string:__t:13 to eval expr ARRAY_LOAD
DEBUG VCcallingPipeline.swift:39:107:   walkExpr ARRAY_LOAD assigning to vars: [string:__t:13]
DEBUG VCcallingPipeline.swift:39:112:   Create tmp string:__t:14 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:39:112:   walkExpr STRING_LITERAL assigning to vars: [string:__t:14]
DEBUG VCcallingPipeline.swift:39:149:   Create tmp string:__t:15 to eval expr ARRAY_LOAD
DEBUG VCcallingPipeline.swift:39:149:   walkExpr ARRAY_LOAD assigning to vars: [string:__t:15]
DEBUG VCcallingPipeline.swift:39:154:   Create tmp string:__t:16 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:39:154:   walkExpr STRING_LITERAL assigning to vars: [string:__t:16]
DEBUG VCcallingPipeline.swift:43:9:   walkExpr CALL_FUNCTION assigning to vars: [string:VarcallDir]
DEBUG VCcallingPipeline.swift:43:46:   Create tmp string:__t:17 to eval expr OPERATOR
DEBUG VCcallingPipeline.swift:43:46:   walkExpr OPERATOR assigning to vars: [string:__t:17]
DEBUG VCcallingPipeline.swift:43:29:   Create tmp string:__t:18 to eval expr ARRAY_LOAD
DEBUG VCcallingPipeline.swift:43:29:   walkExpr ARRAY_LOAD assigning to vars: [string:__t:18]
DEBUG VCcallingPipeline.swift:43:34:   Create tmp string:__t:19 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:43:34:   walkExpr STRING_LITERAL assigning to vars: [string:__t:19]
DEBUG VCcallingPipeline.swift:43:59:   Create tmp string:__t:20 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:43:59:   walkExpr STRING_LITERAL assigning to vars: [string:__t:20]
DEBUG VCcallingPipeline.swift:44:9:   walkExpr CALL_FUNCTION assigning to vars: [string:RealignDir]
DEBUG VCcallingPipeline.swift:44:46:   Create tmp string:__t:21 to eval expr OPERATOR
DEBUG VCcallingPipeline.swift:44:46:   walkExpr OPERATOR assigning to vars: [string:__t:21]
DEBUG VCcallingPipeline.swift:44:29:   Create tmp string:__t:22 to eval expr ARRAY_LOAD
DEBUG VCcallingPipeline.swift:44:29:   walkExpr ARRAY_LOAD assigning to vars: [string:__t:22]
DEBUG VCcallingPipeline.swift:44:34:   Create tmp string:__t:23 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:44:34:   walkExpr STRING_LITERAL assigning to vars: [string:__t:23]
DEBUG VCcallingPipeline.swift:44:59:   Create tmp string:__t:24 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:44:59:   walkExpr STRING_LITERAL assigning to vars: [string:__t:24]
DEBUG VCcallingPipeline.swift:46:2:   walkExpr CALL_FUNCTION assigning to vars: [void:__t:25]
DEBUG VCcallingPipeline.swift:48:23:   Create tmp string:__t:26 to eval expr CALL_FUNCTION
DEBUG VCcallingPipeline.swift:48:23:   walkExpr CALL_FUNCTION assigning to vars: [string:__t:26]
DEBUG VCcallingPipeline.swift:48:30:   Create tmp string:__t:27 to eval expr ARRAY_LOAD
DEBUG VCcallingPipeline.swift:48:30:   walkExpr ARRAY_LOAD assigning to vars: [string:__t:27]
DEBUG VCcallingPipeline.swift:48:35:   Create tmp string:__t:28 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:48:35:   walkExpr STRING_LITERAL assigning to vars: [string:__t:28]
DEBUG VCcallingPipeline.swift:48:49:   Create tmp string:__t:29 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:48:49:   walkExpr STRING_LITERAL assigning to vars: [string:__t:29]
DEBUG VCcallingPipeline.swift:48:72:   Create tmp string:__t:30 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:48:72:   walkExpr STRING_LITERAL assigning to vars: [string:__t:30]
DEBUG VCcallingPipeline.swift:49:16:   Create tmp string:__t:31 to eval expr CALL_FUNCTION
DEBUG VCcallingPipeline.swift:49:16:   walkExpr CALL_FUNCTION assigning to vars: [string:__t:31]
DEBUG VCcallingPipeline.swift:49:47:   Create tmp string:__t:32 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:49:47:   walkExpr STRING_LITERAL assigning to vars: [string:__t:32]
DEBUG VCcallingPipeline.swift:50:20:   Create tmp string:__t:33 to eval expr CALL_FUNCTION
DEBUG VCcallingPipeline.swift:50:20:   walkExpr CALL_FUNCTION assigning to vars: [string:__t:33]
DEBUG VCcallingPipeline.swift:50:51:   Create tmp string:__t:34 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:50:51:   walkExpr STRING_LITERAL assigning to vars: [string:__t:34]
DEBUG VCcallingPipeline.swift:52:15:   Create tmp string:__t:35 to eval expr CALL_FUNCTION
DEBUG VCcallingPipeline.swift:52:15:   walkExpr CALL_FUNCTION assigning to vars: [string:__t:35]
DEBUG VCcallingPipeline.swift:52:22:   Create tmp string:__t:36 to eval expr ARRAY_LOAD
DEBUG VCcallingPipeline.swift:52:22:   walkExpr ARRAY_LOAD assigning to vars: [string:__t:36]
DEBUG VCcallingPipeline.swift:52:27:   Create tmp string:__t:37 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:52:27:   walkExpr STRING_LITERAL assigning to vars: [string:__t:37]
DEBUG VCcallingPipeline.swift:52:41:   Create tmp string:__t:38 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:52:41:   walkExpr STRING_LITERAL assigning to vars: [string:__t:38]
DEBUG VCcallingPipeline.swift:52:46:   Create tmp string:__t:39 to eval expr ARRAY_LOAD
DEBUG VCcallingPipeline.swift:52:46:   walkExpr ARRAY_LOAD assigning to vars: [string:__t:39]
DEBUG VCcallingPipeline.swift:52:51:   Create tmp string:__t:40 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:52:51:   walkExpr STRING_LITERAL assigning to vars: [string:__t:40]
DEBUG VCcallingPipeline.swift:52:70:   Create tmp string:__t:41 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:52:70:   walkExpr STRING_LITERAL assigning to vars: [string:__t:41]
DEBUG VCcallingPipeline.swift:53:19:   Create tmp string:__t:42 to eval expr CALL_FUNCTION
DEBUG VCcallingPipeline.swift:53:19:   walkExpr CALL_FUNCTION assigning to vars: [string:__t:42]
DEBUG VCcallingPipeline.swift:53:66:   Create tmp string:__t:43 to eval expr OPERATOR
DEBUG VCcallingPipeline.swift:53:66:   walkExpr OPERATOR assigning to vars: [string:__t:43]
DEBUG VCcallingPipeline.swift:53:43:   Create tmp string:__t:44 to eval expr OPERATOR
DEBUG VCcallingPipeline.swift:53:43:   walkExpr OPERATOR assigning to vars: [string:__t:44]
DEBUG VCcallingPipeline.swift:53:26:   Create tmp string:__t:45 to eval expr ARRAY_LOAD
DEBUG VCcallingPipeline.swift:53:26:   walkExpr ARRAY_LOAD assigning to vars: [string:__t:45]
DEBUG VCcallingPipeline.swift:53:31:   Create tmp string:__t:46 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:53:31:   walkExpr STRING_LITERAL assigning to vars: [string:__t:46]
DEBUG VCcallingPipeline.swift:53:44:   Create tmp string:__t:47 to eval expr ARRAY_LOAD
DEBUG VCcallingPipeline.swift:53:44:   walkExpr ARRAY_LOAD assigning to vars: [string:__t:47]
DEBUG VCcallingPipeline.swift:53:49:   Create tmp string:__t:48 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:53:49:   walkExpr STRING_LITERAL assigning to vars: [string:__t:48]
DEBUG VCcallingPipeline.swift:53:79:   Create tmp string:__t:49 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:53:79:   walkExpr STRING_LITERAL assigning to vars: [string:__t:49]
DEBUG VCcallingPipeline.swift:54:23:   Create tmp string:__t:50 to eval expr CALL_FUNCTION
DEBUG VCcallingPipeline.swift:54:23:   walkExpr CALL_FUNCTION assigning to vars: [string:__t:50]
DEBUG VCcallingPipeline.swift:54:70:   Create tmp string:__t:51 to eval expr OPERATOR
DEBUG VCcallingPipeline.swift:54:70:   walkExpr OPERATOR assigning to vars: [string:__t:51]
DEBUG VCcallingPipeline.swift:54:47:   Create tmp string:__t:52 to eval expr OPERATOR
DEBUG VCcallingPipeline.swift:54:47:   walkExpr OPERATOR assigning to vars: [string:__t:52]
DEBUG VCcallingPipeline.swift:54:30:   Create tmp string:__t:53 to eval expr ARRAY_LOAD
DEBUG VCcallingPipeline.swift:54:30:   walkExpr ARRAY_LOAD assigning to vars: [string:__t:53]
DEBUG VCcallingPipeline.swift:54:35:   Create tmp string:__t:54 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:54:35:   walkExpr STRING_LITERAL assigning to vars: [string:__t:54]
DEBUG VCcallingPipeline.swift:54:48:   Create tmp string:__t:55 to eval expr ARRAY_LOAD
DEBUG VCcallingPipeline.swift:54:48:   walkExpr ARRAY_LOAD assigning to vars: [string:__t:55]
DEBUG VCcallingPipeline.swift:54:53:   Create tmp string:__t:56 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:54:53:   walkExpr STRING_LITERAL assigning to vars: [string:__t:56]
DEBUG VCcallingPipeline.swift:54:83:   Create tmp string:__t:57 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:54:83:   walkExpr STRING_LITERAL assigning to vars: [string:__t:57]
DEBUG VCcallingPipeline.swift:57:18:   Create tmp string:__t:58 to eval expr CALL_FUNCTION
DEBUG VCcallingPipeline.swift:57:18:   walkExpr CALL_FUNCTION assigning to vars: [string:__t:58]
DEBUG VCcallingPipeline.swift:57:25:   Create tmp string:__t:59 to eval expr ARRAY_LOAD
DEBUG VCcallingPipeline.swift:57:25:   walkExpr ARRAY_LOAD assigning to vars: [string:__t:59]
DEBUG VCcallingPipeline.swift:57:30:   Create tmp string:__t:60 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:57:30:   walkExpr STRING_LITERAL assigning to vars: [string:__t:60]
DEBUG VCcallingPipeline.swift:57:44:   Create tmp string:__t:61 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:57:44:   walkExpr STRING_LITERAL assigning to vars: [string:__t:61]
DEBUG VCcallingPipeline.swift:57:67:   Create tmp string:__t:62 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:57:67:   walkExpr STRING_LITERAL assigning to vars: [string:__t:62]
DEBUG VCcallingPipeline.swift:57:88:   Create tmp string:__t:63 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:57:88:   walkExpr STRING_LITERAL assigning to vars: [string:__t:63]
DEBUG VCcallingPipeline.swift:60:19:   Create tmp string:__t:64 to eval expr CALL_FUNCTION
DEBUG VCcallingPipeline.swift:60:19:   walkExpr CALL_FUNCTION assigning to vars: [string:__t:64]
DEBUG VCcallingPipeline.swift:60:26:   Create tmp string:__t:65 to eval expr ARRAY_LOAD
DEBUG VCcallingPipeline.swift:60:26:   walkExpr ARRAY_LOAD assigning to vars: [string:__t:65]
DEBUG VCcallingPipeline.swift:60:31:   Create tmp string:__t:66 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:60:31:   walkExpr STRING_LITERAL assigning to vars: [string:__t:66]
DEBUG VCcallingPipeline.swift:60:41:   Create tmp string:__t:67 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:60:41:   walkExpr STRING_LITERAL assigning to vars: [string:__t:67]
DEBUG VCcallingPipeline.swift:60:64:   Create tmp string:__t:68 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:60:64:   walkExpr STRING_LITERAL assigning to vars: [string:__t:68]
DEBUG VCcallingPipeline.swift:61:25:   Create tmp string:__t:69 to eval expr CALL_FUNCTION
DEBUG VCcallingPipeline.swift:61:25:   walkExpr CALL_FUNCTION assigning to vars: [string:__t:69]
DEBUG VCcallingPipeline.swift:61:46:   Create tmp string:__t:70 to eval expr OPERATOR
DEBUG VCcallingPipeline.swift:61:46:   walkExpr OPERATOR assigning to vars: [string:__t:70]
DEBUG VCcallingPipeline.swift:61:32:   Create tmp string:__t:71 to eval expr ARRAY_LOAD
DEBUG VCcallingPipeline.swift:61:32:   walkExpr ARRAY_LOAD assigning to vars: [string:__t:71]
DEBUG VCcallingPipeline.swift:61:37:   Create tmp string:__t:72 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:61:37:   walkExpr STRING_LITERAL assigning to vars: [string:__t:72]
DEBUG VCcallingPipeline.swift:61:58:   Create tmp string:__t:73 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:61:58:   walkExpr STRING_LITERAL assigning to vars: [string:__t:73]
DEBUG VCcallingPipeline.swift:62:25:   Create tmp string:__t:74 to eval expr CALL_FUNCTION
DEBUG VCcallingPipeline.swift:62:25:   walkExpr CALL_FUNCTION assigning to vars: [string:__t:74]
DEBUG VCcallingPipeline.swift:62:46:   Create tmp string:__t:75 to eval expr OPERATOR
DEBUG VCcallingPipeline.swift:62:46:   walkExpr OPERATOR assigning to vars: [string:__t:75]
DEBUG VCcallingPipeline.swift:62:32:   Create tmp string:__t:76 to eval expr ARRAY_LOAD
DEBUG VCcallingPipeline.swift:62:32:   walkExpr ARRAY_LOAD assigning to vars: [string:__t:76]
DEBUG VCcallingPipeline.swift:62:37:   Create tmp string:__t:77 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:62:37:   walkExpr STRING_LITERAL assigning to vars: [string:__t:77]
DEBUG VCcallingPipeline.swift:62:58:   Create tmp string:__t:78 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:62:58:   walkExpr STRING_LITERAL assigning to vars: [string:__t:78]
DEBUG VCcallingPipeline.swift:64:33:   Create tmp boolean:__t:79 to eval expr OPERATOR
DEBUG VCcallingPipeline.swift:64:33:   walkExpr OPERATOR assigning to vars: [boolean:__t:79]
DEBUG VCcallingPipeline.swift:64:6:   Create tmp string:__t:80 to eval expr ARRAY_LOAD
DEBUG VCcallingPipeline.swift:64:6:   walkExpr ARRAY_LOAD assigning to vars: [string:__t:80]
DEBUG VCcallingPipeline.swift:64:11:   Create tmp string:__t:81 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:64:11:   walkExpr STRING_LITERAL assigning to vars: [string:__t:81]
DEBUG VCcallingPipeline.swift:64:36:   Create tmp string:__t:82 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:64:36:   walkExpr STRING_LITERAL assigning to vars: [string:__t:82]
DEBUG VCcallingPipeline.swift:65:3:     walkExpr CALL_FUNCTION assigning to vars: [void:__t:83]
DEBUG VCcallingPipeline.swift:65:9:     Create tmp string:__t:84 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:65:9:     walkExpr STRING_LITERAL assigning to vars: [string:__t:84]
DEBUG VCcallingPipeline.swift:66:18:     Create tmp string:__t:85 to eval expr CALL_FUNCTION
DEBUG VCcallingPipeline.swift:66:18:     walkExpr CALL_FUNCTION assigning to vars: [string:__t:85]
DEBUG VCcallingPipeline.swift:66:25:     Create tmp string:__t:86 to eval expr ARRAY_LOAD
DEBUG VCcallingPipeline.swift:66:25:     walkExpr ARRAY_LOAD assigning to vars: [string:__t:86]
DEBUG VCcallingPipeline.swift:66:30:     Create tmp string:__t:87 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:66:30:     walkExpr STRING_LITERAL assigning to vars: [string:__t:87]
DEBUG VCcallingPipeline.swift:66:41:     Create tmp string:__t:88 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:66:41:     walkExpr STRING_LITERAL assigning to vars: [string:__t:88]
DEBUG VCcallingPipeline.swift:66:64:     Create tmp string:__t:89 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:66:64:     walkExpr STRING_LITERAL assigning to vars: [string:__t:89]
DEBUG VCcallingPipeline.swift:67:18:     Create tmp string:__t:90 to eval expr CALL_FUNCTION
DEBUG VCcallingPipeline.swift:67:18:     walkExpr CALL_FUNCTION assigning to vars: [string:__t:90]
DEBUG VCcallingPipeline.swift:67:25:     Create tmp string:__t:91 to eval expr ARRAY_LOAD
DEBUG VCcallingPipeline.swift:67:25:     walkExpr ARRAY_LOAD assigning to vars: [string:__t:91]
DEBUG VCcallingPipeline.swift:67:30:     Create tmp string:__t:92 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:67:30:     walkExpr STRING_LITERAL assigning to vars: [string:__t:92]
DEBUG VCcallingPipeline.swift:67:44:     Create tmp string:__t:93 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:67:44:     walkExpr STRING_LITERAL assigning to vars: [string:__t:93]
DEBUG VCcallingPipeline.swift:67:67:     Create tmp string:__t:94 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:67:67:     walkExpr STRING_LITERAL assigning to vars: [string:__t:94]
DEBUG VCcallingPipeline.swift:69:14:     assignment: 
DEBUG VCcallingPipeline.swift:70:12:     assignment: 
DEBUG VCcallingPipeline.swift:71:12:     assignment: 
DEBUG VCcallingPipeline.swift:69:14:     assignment: 
DEBUG VCcallingPipeline.swift:69:3:     walkExpr CALL_FUNCTION assigning to vars: [file:alignedsam]
DEBUG VCcallingPipeline.swift:69:24:     Create tmp string:__t:95 to eval expr ARRAY_LOAD
DEBUG VCcallingPipeline.swift:69:24:     walkExpr ARRAY_LOAD assigning to vars: [string:__t:95]
DEBUG VCcallingPipeline.swift:69:29:     Create tmp string:__t:96 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:69:29:     walkExpr STRING_LITERAL assigning to vars: [string:__t:96]
DEBUG VCcallingPipeline.swift:69:54:     Create tmp string:__t:97 to eval expr ARRAY_LOAD
DEBUG VCcallingPipeline.swift:69:54:     walkExpr ARRAY_LOAD assigning to vars: [string:__t:97]
DEBUG VCcallingPipeline.swift:69:59:     Create tmp string:__t:98 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:69:59:     walkExpr STRING_LITERAL assigning to vars: [string:__t:98]
DEBUG VCcallingPipeline.swift:69:73:     Create tmp string[int]:__t:99 to eval expr ARRAY_ELEMS
DEBUG VCcallingPipeline.swift:69:73:     walkExpr ARRAY_ELEMS assigning to vars: [string[int]:__t:99]
DEBUG VCcallingPipeline.swift:69:73:     Create tmp string:__t:100 to eval expr ARRAY_LOAD
DEBUG VCcallingPipeline.swift:69:73:     walkExpr ARRAY_LOAD assigning to vars: [string:__t:100]
DEBUG VCcallingPipeline.swift:69:78:     Create tmp string:__t:101 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:69:78:     walkExpr STRING_LITERAL assigning to vars: [string:__t:101]
DEBUG VCcallingPipeline.swift:69:96:     Create tmp int:__t:102 to eval expr CALL_FUNCTION
DEBUG VCcallingPipeline.swift:69:96:     walkExpr CALL_FUNCTION assigning to vars: [int:__t:102]
DEBUG VCcallingPipeline.swift:69:107:     Create tmp string:__t:103 to eval expr ARRAY_LOAD
DEBUG VCcallingPipeline.swift:69:107:     walkExpr ARRAY_LOAD assigning to vars: [string:__t:103]
DEBUG VCcallingPipeline.swift:69:112:     Create tmp string:__t:104 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:69:112:     walkExpr STRING_LITERAL assigning to vars: [string:__t:104]
DEBUG VCcallingPipeline.swift:70:12:     assignment: 
DEBUG VCcallingPipeline.swift:70:3:     walkExpr CALL_FUNCTION assigning to vars: [file:dedupsam]
DEBUG VCcallingPipeline.swift:70:25:     Create tmp string:__t:105 to eval expr ARRAY_LOAD
DEBUG VCcallingPipeline.swift:70:25:     walkExpr ARRAY_LOAD assigning to vars: [string:__t:105]
DEBUG VCcallingPipeline.swift:70:30:     Create tmp string:__t:106 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:70:30:     walkExpr STRING_LITERAL assigning to vars: [string:__t:106]
DEBUG VCcallingPipeline.swift:71:12:     assignment: 
DEBUG VCcallingPipeline.swift:71:3:     walkExpr CALL_FUNCTION assigning to vars: [file:dedupbam]
DEBUG VCcallingPipeline.swift:71:28:     Create tmp string:__t:107 to eval expr ARRAY_LOAD
DEBUG VCcallingPipeline.swift:71:28:     walkExpr ARRAY_LOAD assigning to vars: [string:__t:107]
DEBUG VCcallingPipeline.swift:71:33:     Create tmp string:__t:108 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:71:33:     walkExpr STRING_LITERAL assigning to vars: [string:__t:108]
DEBUG VCcallingPipeline.swift:71:59:     Create tmp int:__t:109 to eval expr CALL_FUNCTION
DEBUG VCcallingPipeline.swift:71:59:     walkExpr CALL_FUNCTION assigning to vars: [int:__t:109]
DEBUG VCcallingPipeline.swift:71:70:     Create tmp string:__t:110 to eval expr ARRAY_LOAD
DEBUG VCcallingPipeline.swift:71:70:     walkExpr ARRAY_LOAD assigning to vars: [string:__t:110]
DEBUG VCcallingPipeline.swift:71:75:     Create tmp string:__t:111 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:71:75:     walkExpr STRING_LITERAL assigning to vars: [string:__t:111]
DEBUG VCcallingPipeline.swift:71:90:     Create tmp string[int]:__t:112 to eval expr ARRAY_ELEMS
DEBUG VCcallingPipeline.swift:71:90:     walkExpr ARRAY_ELEMS assigning to vars: [string[int]:__t:112]
DEBUG VCcallingPipeline.swift:71:90:     Create tmp string:__t:113 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:71:90:     walkExpr STRING_LITERAL assigning to vars: [string:__t:113]
DEBUG VCcallingPipeline.swift:72:7:     walkExpr CALL_FUNCTION assigning to vars: [int:numAlignments_dedup]
DEBUG VCcallingPipeline.swift:72:44:     Create tmp string:__t:114 to eval expr ARRAY_LOAD
DEBUG VCcallingPipeline.swift:72:44:     walkExpr ARRAY_LOAD assigning to vars: [string:__t:114]
DEBUG VCcallingPipeline.swift:72:49:     Create tmp string:__t:115 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:72:49:     walkExpr STRING_LITERAL assigning to vars: [string:__t:115]
DEBUG VCcallingPipeline.swift:72:65:     Create tmp string:__t:116 to eval expr CALL_FUNCTION
DEBUG VCcallingPipeline.swift:72:65:     walkExpr CALL_FUNCTION assigning to vars: [string:__t:116]
DEBUG VCcallingPipeline.swift:73:26:     Create tmp boolean:__t:117 to eval expr OPERATOR
DEBUG VCcallingPipeline.swift:73:26:     walkExpr OPERATOR assigning to vars: [boolean:__t:117]
DEBUG VCcallingPipeline.swift:73:28:     Create tmp int:__t:118 to eval expr INT_LITERAL
DEBUG VCcallingPipeline.swift:73:28:     walkExpr INT_LITERAL assigning to vars: [int:__t:118]
DEBUG VCcallingPipeline.swift:73:40:       assignment: 
DEBUG VCcallingPipeline.swift:73:33:       walkExpr CALL_FUNCTION assigning to vars: [file:qcfile]
DEBUG VCcallingPipeline.swift:73:47:       Create tmp string:__t:119 to eval expr CALL_FUNCTION
DEBUG VCcallingPipeline.swift:73:47:       walkExpr CALL_FUNCTION assigning to vars: [string:__t:119]
DEBUG VCcallingPipeline.swift:73:66:       Create tmp string:__t:120 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:73:66:       walkExpr STRING_LITERAL assigning to vars: [string:__t:120]
DEBUG VCcallingPipeline.swift:73:136:       Create tmp string:__t:121 to eval expr CALL_FUNCTION
DEBUG VCcallingPipeline.swift:73:136:       walkExpr CALL_FUNCTION assigning to vars: [string:__t:121]
DEBUG VCcallingPipeline.swift:73:156:       Create tmp string:__t:122 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:73:156:       walkExpr STRING_LITERAL assigning to vars: [string:__t:122]
DEBUG VCcallingPipeline.swift:74:3:     walkExpr CALL_FUNCTION assigning to vars: [void:__t:123]
DEBUG VCcallingPipeline.swift:74:31:     Create tmp boolean:__t:124 to eval expr OPERATOR
DEBUG VCcallingPipeline.swift:74:31:     walkExpr OPERATOR assigning to vars: [boolean:__t:124]
DEBUG VCcallingPipeline.swift:74:33:     Create tmp int:__t:125 to eval expr INT_LITERAL
DEBUG VCcallingPipeline.swift:74:33:     walkExpr INT_LITERAL assigning to vars: [int:__t:125]
DEBUG VCcallingPipeline.swift:74:36:     Create tmp string:__t:126 to eval expr CALL_FUNCTION
DEBUG VCcallingPipeline.swift:74:36:     walkExpr CALL_FUNCTION assigning to vars: [string:__t:126]
DEBUG VCcallingPipeline.swift:74:43:     Create tmp string:__t:127 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:74:43:     walkExpr STRING_LITERAL assigning to vars: [string:__t:127]
DEBUG VCcallingPipeline.swift:74:94:     Create tmp string:__t:128 to eval expr CALL_FUNCTION
DEBUG VCcallingPipeline.swift:74:94:     walkExpr CALL_FUNCTION assigning to vars: [string:__t:128]
DEBUG VCcallingPipeline.swift:74:114:     Create tmp string:__t:129 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:74:114:     walkExpr STRING_LITERAL assigning to vars: [string:__t:129]
DEBUG VCcallingPipeline.swift:75:18:     assignment: 
DEBUG VCcallingPipeline.swift:75:18:     assignment: 
DEBUG VCcallingPipeline.swift:75:3:     walkExpr CALL_FUNCTION assigning to vars: [file:dedupsortedbam]
DEBUG VCcallingPipeline.swift:75:29:     Create tmp string:__t:130 to eval expr CALL_FUNCTION
DEBUG VCcallingPipeline.swift:75:29:     walkExpr CALL_FUNCTION assigning to vars: [string:__t:130]
DEBUG VCcallingPipeline.swift:75:36:     Create tmp string:__t:131 to eval expr ARRAY_LOAD
DEBUG VCcallingPipeline.swift:75:36:     walkExpr ARRAY_LOAD assigning to vars: [string:__t:131]
DEBUG VCcallingPipeline.swift:75:41:     Create tmp string:__t:132 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:75:41:     walkExpr STRING_LITERAL assigning to vars: [string:__t:132]
DEBUG VCcallingPipeline.swift:75:57:     Create tmp string:__t:133 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:75:57:     walkExpr STRING_LITERAL assigning to vars: [string:__t:133]
DEBUG VCcallingPipeline.swift:75:61:     Create tmp string:__t:134 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:75:61:     walkExpr STRING_LITERAL assigning to vars: [string:__t:134]
DEBUG VCcallingPipeline.swift:75:83:     Create tmp string:__t:135 to eval expr ARRAY_LOAD
DEBUG VCcallingPipeline.swift:75:83:     walkExpr ARRAY_LOAD assigning to vars: [string:__t:135]
DEBUG VCcallingPipeline.swift:75:88:     Create tmp string:__t:136 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:75:88:     walkExpr STRING_LITERAL assigning to vars: [string:__t:136]
DEBUG VCcallingPipeline.swift:75:99:     Create tmp int:__t:137 to eval expr CALL_FUNCTION
DEBUG VCcallingPipeline.swift:75:99:     walkExpr CALL_FUNCTION assigning to vars: [int:__t:137]
DEBUG VCcallingPipeline.swift:75:110:     Create tmp string:__t:138 to eval expr ARRAY_LOAD
DEBUG VCcallingPipeline.swift:75:110:     walkExpr ARRAY_LOAD assigning to vars: [string:__t:138]
DEBUG VCcallingPipeline.swift:75:115:     Create tmp string:__t:139 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:75:115:     walkExpr STRING_LITERAL assigning to vars: [string:__t:139]
DEBUG VCcallingPipeline.swift:75:130:     Create tmp string[int]:__t:140 to eval expr ARRAY_ELEMS
DEBUG VCcallingPipeline.swift:75:130:     walkExpr ARRAY_ELEMS assigning to vars: [string[int]:__t:140]
DEBUG VCcallingPipeline.swift:75:130:     Create tmp string:__t:141 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:75:130:     walkExpr STRING_LITERAL assigning to vars: [string:__t:141]
DEBUG VCcallingPipeline.swift:75:147:     Create tmp string:__t:142 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:75:147:     walkExpr STRING_LITERAL assigning to vars: [string:__t:142]
DEBUG VCcallingPipeline.swift:76:7:     walkExpr CALL_FUNCTION assigning to vars: [int:numAlignments_dedupsortedbam]
DEBUG VCcallingPipeline.swift:76:53:     Create tmp string:__t:143 to eval expr ARRAY_LOAD
DEBUG VCcallingPipeline.swift:76:53:     walkExpr ARRAY_LOAD assigning to vars: [string:__t:143]
DEBUG VCcallingPipeline.swift:76:58:     Create tmp string:__t:144 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:76:58:     walkExpr STRING_LITERAL assigning to vars: [string:__t:144]
DEBUG VCcallingPipeline.swift:76:74:     Create tmp string:__t:145 to eval expr CALL_FUNCTION
DEBUG VCcallingPipeline.swift:76:74:     walkExpr CALL_FUNCTION assigning to vars: [string:__t:145]
DEBUG VCcallingPipeline.swift:77:35:     Create tmp boolean:__t:146 to eval expr OPERATOR
DEBUG VCcallingPipeline.swift:77:35:     walkExpr OPERATOR assigning to vars: [boolean:__t:146]
DEBUG VCcallingPipeline.swift:77:37:     Create tmp int:__t:147 to eval expr INT_LITERAL
DEBUG VCcallingPipeline.swift:77:37:     walkExpr INT_LITERAL assigning to vars: [int:__t:147]
DEBUG VCcallingPipeline.swift:77:49:       assignment: 
DEBUG VCcallingPipeline.swift:77:42:       walkExpr CALL_FUNCTION assigning to vars: [file:qcfile]
DEBUG VCcallingPipeline.swift:77:56:       Create tmp string:__t:148 to eval expr CALL_FUNCTION
DEBUG VCcallingPipeline.swift:77:56:       walkExpr CALL_FUNCTION assigning to vars: [string:__t:148]
DEBUG VCcallingPipeline.swift:77:75:       Create tmp string:__t:149 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:77:75:       walkExpr STRING_LITERAL assigning to vars: [string:__t:149]
DEBUG VCcallingPipeline.swift:77:147:       Create tmp string:__t:150 to eval expr CALL_FUNCTION
DEBUG VCcallingPipeline.swift:77:147:       walkExpr CALL_FUNCTION assigning to vars: [string:__t:150]
DEBUG VCcallingPipeline.swift:77:173:       Create tmp string:__t:151 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:77:173:       walkExpr STRING_LITERAL assigning to vars: [string:__t:151]
DEBUG VCcallingPipeline.swift:78:3:     walkExpr CALL_FUNCTION assigning to vars: [void:__t:152]
DEBUG VCcallingPipeline.swift:78:40:     Create tmp boolean:__t:153 to eval expr OPERATOR
DEBUG VCcallingPipeline.swift:78:40:     walkExpr OPERATOR assigning to vars: [boolean:__t:153]
DEBUG VCcallingPipeline.swift:78:42:     Create tmp int:__t:154 to eval expr INT_LITERAL
DEBUG VCcallingPipeline.swift:78:42:     walkExpr INT_LITERAL assigning to vars: [int:__t:154]
DEBUG VCcallingPipeline.swift:78:45:     Create tmp string:__t:155 to eval expr CALL_FUNCTION
DEBUG VCcallingPipeline.swift:78:45:     walkExpr CALL_FUNCTION assigning to vars: [string:__t:155]
DEBUG VCcallingPipeline.swift:78:52:     Create tmp string:__t:156 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:78:52:     walkExpr STRING_LITERAL assigning to vars: [string:__t:156]
DEBUG VCcallingPipeline.swift:78:104:     Create tmp string:__t:157 to eval expr CALL_FUNCTION
DEBUG VCcallingPipeline.swift:78:104:     walkExpr CALL_FUNCTION assigning to vars: [string:__t:157]
DEBUG VCcallingPipeline.swift:78:130:     Create tmp string:__t:158 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:78:130:     walkExpr STRING_LITERAL assigning to vars: [string:__t:158]
DEBUG VCcallingPipeline.swift:80:20:     Create tmp string:__t:159 to eval expr CALL_FUNCTION
DEBUG VCcallingPipeline.swift:80:20:     walkExpr CALL_FUNCTION assigning to vars: [string:__t:159]
DEBUG VCcallingPipeline.swift:80:27:     Create tmp string:__t:160 to eval expr ARRAY_LOAD
DEBUG VCcallingPipeline.swift:80:27:     walkExpr ARRAY_LOAD assigning to vars: [string:__t:160]
DEBUG VCcallingPipeline.swift:80:32:     Create tmp string:__t:161 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:80:32:     walkExpr STRING_LITERAL assigning to vars: [string:__t:161]
DEBUG VCcallingPipeline.swift:80:45:     Create tmp string:__t:162 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:80:45:     walkExpr STRING_LITERAL assigning to vars: [string:__t:162]
DEBUG VCcallingPipeline.swift:80:68:     Create tmp string:__t:163 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:80:68:     walkExpr STRING_LITERAL assigning to vars: [string:__t:163]
DEBUG VCcallingPipeline.swift:81:34:     Create tmp boolean:__t:164 to eval expr OPERATOR
DEBUG VCcallingPipeline.swift:81:34:     walkExpr OPERATOR assigning to vars: [boolean:__t:164]
DEBUG VCcallingPipeline.swift:81:7:     Create tmp string:__t:165 to eval expr ARRAY_LOAD
DEBUG VCcallingPipeline.swift:81:7:     walkExpr ARRAY_LOAD assigning to vars: [string:__t:165]
DEBUG VCcallingPipeline.swift:81:12:     Create tmp string:__t:166 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:81:12:     walkExpr STRING_LITERAL assigning to vars: [string:__t:166]
DEBUG VCcallingPipeline.swift:81:37:     Create tmp string:__t:167 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:81:37:     walkExpr STRING_LITERAL assigning to vars: [string:__t:167]
DEBUG VCcallingPipeline.swift:82:4:       walkExpr CALL_FUNCTION assigning to vars: [void:__t:168]
DEBUG VCcallingPipeline.swift:82:10:       Create tmp string:__t:169 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:82:10:       walkExpr STRING_LITERAL assigning to vars: [string:__t:169]
DEBUG VCcallingPipeline.swift:83:27:       Create tmp string:__t:170 to eval expr CALL_FUNCTION
DEBUG VCcallingPipeline.swift:83:27:       walkExpr CALL_FUNCTION assigning to vars: [string:__t:170]
DEBUG VCcallingPipeline.swift:83:34:       Create tmp string:__t:171 to eval expr ARRAY_LOAD
DEBUG VCcallingPipeline.swift:83:34:       walkExpr ARRAY_LOAD assigning to vars: [string:__t:171]
DEBUG VCcallingPipeline.swift:83:39:       Create tmp string:__t:172 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:83:39:       walkExpr STRING_LITERAL assigning to vars: [string:__t:172]
DEBUG VCcallingPipeline.swift:83:53:       Create tmp string:__t:173 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:83:53:       walkExpr STRING_LITERAL assigning to vars: [string:__t:173]
DEBUG VCcallingPipeline.swift:83:76:       Create tmp string:__t:174 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:83:76:       walkExpr STRING_LITERAL assigning to vars: [string:__t:174]
DEBUG VCcallingPipeline.swift:84:22:       Create tmp string:__t:175 to eval expr CALL_FUNCTION
DEBUG VCcallingPipeline.swift:84:22:       walkExpr CALL_FUNCTION assigning to vars: [string:__t:175]
DEBUG VCcallingPipeline.swift:84:29:       Create tmp string:__t:176 to eval expr ARRAY_LOAD
DEBUG VCcallingPipeline.swift:84:29:       walkExpr ARRAY_LOAD assigning to vars: [string:__t:176]
DEBUG VCcallingPipeline.swift:84:34:       Create tmp string:__t:177 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:84:34:       walkExpr STRING_LITERAL assigning to vars: [string:__t:177]
DEBUG VCcallingPipeline.swift:84:48:       Create tmp string:__t:178 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:84:48:       walkExpr STRING_LITERAL assigning to vars: [string:__t:178]
DEBUG VCcallingPipeline.swift:84:71:       Create tmp string:__t:179 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:84:71:       walkExpr STRING_LITERAL assigning to vars: [string:__t:179]
DEBUG VCcallingPipeline.swift:85:15:       assignment: 
DEBUG VCcallingPipeline.swift:86:15:       assignment: 
DEBUG VCcallingPipeline.swift:85:15:       assignment: 
DEBUG VCcallingPipeline.swift:85:4:       walkExpr CALL_FUNCTION assigning to vars: [file:alignedsam]
DEBUG VCcallingPipeline.swift:85:25:       Create tmp string:__t:180 to eval expr ARRAY_LOAD
DEBUG VCcallingPipeline.swift:85:25:       walkExpr ARRAY_LOAD assigning to vars: [string:__t:180]
DEBUG VCcallingPipeline.swift:85:30:       Create tmp string:__t:181 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:85:30:       walkExpr STRING_LITERAL assigning to vars: [string:__t:181]
DEBUG VCcallingPipeline.swift:85:55:       Create tmp string:__t:182 to eval expr ARRAY_LOAD
DEBUG VCcallingPipeline.swift:85:55:       walkExpr ARRAY_LOAD assigning to vars: [string:__t:182]
DEBUG VCcallingPipeline.swift:85:60:       Create tmp string:__t:183 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:85:60:       walkExpr STRING_LITERAL assigning to vars: [string:__t:183]
DEBUG VCcallingPipeline.swift:85:74:       Create tmp string[int]:__t:184 to eval expr ARRAY_ELEMS
DEBUG VCcallingPipeline.swift:85:74:       walkExpr ARRAY_ELEMS assigning to vars: [string[int]:__t:184]
DEBUG VCcallingPipeline.swift:85:74:       Create tmp string:__t:185 to eval expr ARRAY_LOAD
DEBUG VCcallingPipeline.swift:85:74:       walkExpr ARRAY_LOAD assigning to vars: [string:__t:185]
DEBUG VCcallingPipeline.swift:85:79:       Create tmp string:__t:186 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:85:79:       walkExpr STRING_LITERAL assigning to vars: [string:__t:186]
DEBUG VCcallingPipeline.swift:85:97:       Create tmp int:__t:187 to eval expr CALL_FUNCTION
DEBUG VCcallingPipeline.swift:85:97:       walkExpr CALL_FUNCTION assigning to vars: [int:__t:187]
DEBUG VCcallingPipeline.swift:85:108:       Create tmp string:__t:188 to eval expr ARRAY_LOAD
DEBUG VCcallingPipeline.swift:85:108:       walkExpr ARRAY_LOAD assigning to vars: [string:__t:188]
DEBUG VCcallingPipeline.swift:85:113:       Create tmp string:__t:189 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:85:113:       walkExpr STRING_LITERAL assigning to vars: [string:__t:189]
DEBUG VCcallingPipeline.swift:86:15:       assignment: 
DEBUG VCcallingPipeline.swift:86:4:       walkExpr CALL_FUNCTION assigning to vars: [file:alignedbam]
DEBUG VCcallingPipeline.swift:86:31:       Create tmp string:__t:190 to eval expr ARRAY_LOAD
DEBUG VCcallingPipeline.swift:86:31:       walkExpr ARRAY_LOAD assigning to vars: [string:__t:190]
DEBUG VCcallingPipeline.swift:86:36:       Create tmp string:__t:191 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:86:36:       walkExpr STRING_LITERAL assigning to vars: [string:__t:191]
DEBUG VCcallingPipeline.swift:86:64:       Create tmp int:__t:192 to eval expr CALL_FUNCTION
DEBUG VCcallingPipeline.swift:86:64:       walkExpr CALL_FUNCTION assigning to vars: [int:__t:192]
DEBUG VCcallingPipeline.swift:86:75:       Create tmp string:__t:193 to eval expr ARRAY_LOAD
DEBUG VCcallingPipeline.swift:86:75:       walkExpr ARRAY_LOAD assigning to vars: [string:__t:193]
DEBUG VCcallingPipeline.swift:86:80:       Create tmp string:__t:194 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:86:80:       walkExpr STRING_LITERAL assigning to vars: [string:__t:194]
DEBUG VCcallingPipeline.swift:86:95:       Create tmp string[int]:__t:195 to eval expr ARRAY_ELEMS
DEBUG VCcallingPipeline.swift:86:95:       walkExpr ARRAY_ELEMS assigning to vars: [string[int]:__t:195]
DEBUG VCcallingPipeline.swift:86:95:       Create tmp string:__t:196 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:86:95:       walkExpr STRING_LITERAL assigning to vars: [string:__t:196]
DEBUG VCcallingPipeline.swift:87:8:       walkExpr CALL_FUNCTION assigning to vars: [int:numAlignments_aligned]
DEBUG VCcallingPipeline.swift:87:47:       Create tmp string:__t:197 to eval expr ARRAY_LOAD
DEBUG VCcallingPipeline.swift:87:47:       walkExpr ARRAY_LOAD assigning to vars: [string:__t:197]
DEBUG VCcallingPipeline.swift:87:52:       Create tmp string:__t:198 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:87:52:       walkExpr STRING_LITERAL assigning to vars: [string:__t:198]
DEBUG VCcallingPipeline.swift:87:68:       Create tmp string:__t:199 to eval expr CALL_FUNCTION
DEBUG VCcallingPipeline.swift:87:68:       walkExpr CALL_FUNCTION assigning to vars: [string:__t:199]
DEBUG VCcallingPipeline.swift:88:29:       Create tmp boolean:__t:200 to eval expr OPERATOR
DEBUG VCcallingPipeline.swift:88:29:       walkExpr OPERATOR assigning to vars: [boolean:__t:200]
DEBUG VCcallingPipeline.swift:88:31:       Create tmp int:__t:201 to eval expr INT_LITERAL
DEBUG VCcallingPipeline.swift:88:31:       walkExpr INT_LITERAL assigning to vars: [int:__t:201]
DEBUG VCcallingPipeline.swift:88:43:         assignment: 
DEBUG VCcallingPipeline.swift:88:36:         walkExpr CALL_FUNCTION assigning to vars: [file:qcfile]
DEBUG VCcallingPipeline.swift:88:50:         Create tmp string:__t:202 to eval expr CALL_FUNCTION
DEBUG VCcallingPipeline.swift:88:50:         walkExpr CALL_FUNCTION assigning to vars: [string:__t:202]
DEBUG VCcallingPipeline.swift:88:69:         Create tmp string:__t:203 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:88:69:         walkExpr STRING_LITERAL assigning to vars: [string:__t:203]
DEBUG VCcallingPipeline.swift:88:139:         Create tmp string:__t:204 to eval expr CALL_FUNCTION
DEBUG VCcallingPipeline.swift:88:139:         walkExpr CALL_FUNCTION assigning to vars: [string:__t:204]
DEBUG VCcallingPipeline.swift:88:161:         Create tmp string:__t:205 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:88:161:         walkExpr STRING_LITERAL assigning to vars: [string:__t:205]
DEBUG VCcallingPipeline.swift:89:4:       walkExpr CALL_FUNCTION assigning to vars: [void:__t:206]
DEBUG VCcallingPipeline.swift:89:34:       Create tmp boolean:__t:207 to eval expr OPERATOR
DEBUG VCcallingPipeline.swift:89:34:       walkExpr OPERATOR assigning to vars: [boolean:__t:207]
DEBUG VCcallingPipeline.swift:89:36:       Create tmp int:__t:208 to eval expr INT_LITERAL
DEBUG VCcallingPipeline.swift:89:36:       walkExpr INT_LITERAL assigning to vars: [int:__t:208]
DEBUG VCcallingPipeline.swift:89:39:       Create tmp string:__t:209 to eval expr CALL_FUNCTION
DEBUG VCcallingPipeline.swift:89:39:       walkExpr CALL_FUNCTION assigning to vars: [string:__t:209]
DEBUG VCcallingPipeline.swift:89:46:       Create tmp string:__t:210 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:89:46:       walkExpr STRING_LITERAL assigning to vars: [string:__t:210]
DEBUG VCcallingPipeline.swift:89:97:       Create tmp string:__t:211 to eval expr CALL_FUNCTION
DEBUG VCcallingPipeline.swift:89:97:       walkExpr CALL_FUNCTION assigning to vars: [string:__t:211]
DEBUG VCcallingPipeline.swift:89:119:       Create tmp string:__t:212 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:89:119:       walkExpr STRING_LITERAL assigning to vars: [string:__t:212]
DEBUG VCcallingPipeline.swift:90:21:       assignment: 
DEBUG VCcallingPipeline.swift:91:31:       assignment: 
DEBUG VCcallingPipeline.swift:90:21:       assignment: 
DEBUG VCcallingPipeline.swift:90:4:       walkExpr CALL_FUNCTION assigning to vars: [file:alignedsortedbam]
DEBUG VCcallingPipeline.swift:90:32:       Create tmp string:__t:213 to eval expr CALL_FUNCTION
DEBUG VCcallingPipeline.swift:90:32:       walkExpr CALL_FUNCTION assigning to vars: [string:__t:213]
DEBUG VCcallingPipeline.swift:90:39:       Create tmp string:__t:214 to eval expr ARRAY_LOAD
DEBUG VCcallingPipeline.swift:90:39:       walkExpr ARRAY_LOAD assigning to vars: [string:__t:214]
DEBUG VCcallingPipeline.swift:90:44:       Create tmp string:__t:215 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:90:44:       walkExpr STRING_LITERAL assigning to vars: [string:__t:215]
DEBUG VCcallingPipeline.swift:90:60:       Create tmp string:__t:216 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:90:60:       walkExpr STRING_LITERAL assigning to vars: [string:__t:216]
DEBUG VCcallingPipeline.swift:90:64:       Create tmp string:__t:217 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:90:64:       walkExpr STRING_LITERAL assigning to vars: [string:__t:217]
DEBUG VCcallingPipeline.swift:90:89:       Create tmp string:__t:218 to eval expr ARRAY_LOAD
DEBUG VCcallingPipeline.swift:90:89:       walkExpr ARRAY_LOAD assigning to vars: [string:__t:218]
DEBUG VCcallingPipeline.swift:90:94:       Create tmp string:__t:219 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:90:94:       walkExpr STRING_LITERAL assigning to vars: [string:__t:219]
DEBUG VCcallingPipeline.swift:90:105:       Create tmp int:__t:220 to eval expr CALL_FUNCTION
DEBUG VCcallingPipeline.swift:90:105:       walkExpr CALL_FUNCTION assigning to vars: [int:__t:220]
DEBUG VCcallingPipeline.swift:90:116:       Create tmp string:__t:221 to eval expr ARRAY_LOAD
DEBUG VCcallingPipeline.swift:90:116:       walkExpr ARRAY_LOAD assigning to vars: [string:__t:221]
DEBUG VCcallingPipeline.swift:90:121:       Create tmp string:__t:222 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:90:121:       walkExpr STRING_LITERAL assigning to vars: [string:__t:222]
DEBUG VCcallingPipeline.swift:90:121:       Create tmp string[int]:__t:223 to eval expr ARRAY_ELEMS
DEBUG VCcallingPipeline.swift:90:121:       walkExpr ARRAY_ELEMS assigning to vars: [string[int]:__t:223]
DEBUG VCcallingPipeline.swift:91:31:       assignment: 
DEBUG VCcallingPipeline.swift:91:20:       walkExpr CALL_FUNCTION assigning to vars: [file:dedupsortedbam, file:metricsfile]
DEBUG VCcallingPipeline.swift:91:40:       Create tmp string:__t:224 to eval expr ARRAY_LOAD
DEBUG VCcallingPipeline.swift:91:40:       walkExpr ARRAY_LOAD assigning to vars: [string:__t:224]
DEBUG VCcallingPipeline.swift:91:45:       Create tmp string:__t:225 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:91:45:       walkExpr STRING_LITERAL assigning to vars: [string:__t:225]
DEBUG VCcallingPipeline.swift:91:57:       Create tmp string:__t:226 to eval expr ARRAY_LOAD
DEBUG VCcallingPipeline.swift:91:57:       walkExpr ARRAY_LOAD assigning to vars: [string:__t:226]
DEBUG VCcallingPipeline.swift:91:62:       Create tmp string:__t:227 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:91:62:       walkExpr STRING_LITERAL assigning to vars: [string:__t:227]
DEBUG VCcallingPipeline.swift:91:76:       Create tmp string:__t:228 to eval expr ARRAY_LOAD
DEBUG VCcallingPipeline.swift:91:76:       walkExpr ARRAY_LOAD assigning to vars: [string:__t:228]
DEBUG VCcallingPipeline.swift:91:81:       Create tmp string:__t:229 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:91:81:       walkExpr STRING_LITERAL assigning to vars: [string:__t:229]
DEBUG VCcallingPipeline.swift:92:8:       walkExpr CALL_FUNCTION assigning to vars: [int:numAlignments_dedupsortedbam]
DEBUG VCcallingPipeline.swift:92:54:       Create tmp string:__t:230 to eval expr ARRAY_LOAD
DEBUG VCcallingPipeline.swift:92:54:       walkExpr ARRAY_LOAD assigning to vars: [string:__t:230]
DEBUG VCcallingPipeline.swift:92:59:       Create tmp string:__t:231 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:92:59:       walkExpr STRING_LITERAL assigning to vars: [string:__t:231]
DEBUG VCcallingPipeline.swift:92:75:       Create tmp string:__t:232 to eval expr CALL_FUNCTION
DEBUG VCcallingPipeline.swift:92:75:       walkExpr CALL_FUNCTION assigning to vars: [string:__t:232]
DEBUG VCcallingPipeline.swift:93:36:       Create tmp boolean:__t:233 to eval expr OPERATOR
DEBUG VCcallingPipeline.swift:93:36:       walkExpr OPERATOR assigning to vars: [boolean:__t:233]
DEBUG VCcallingPipeline.swift:93:38:       Create tmp int:__t:234 to eval expr INT_LITERAL
DEBUG VCcallingPipeline.swift:93:38:       walkExpr INT_LITERAL assigning to vars: [int:__t:234]
DEBUG VCcallingPipeline.swift:93:50:         assignment: 
DEBUG VCcallingPipeline.swift:93:43:         walkExpr CALL_FUNCTION assigning to vars: [file:qcfile]
DEBUG VCcallingPipeline.swift:93:57:         Create tmp string:__t:235 to eval expr CALL_FUNCTION
DEBUG VCcallingPipeline.swift:93:57:         walkExpr CALL_FUNCTION assigning to vars: [string:__t:235]
DEBUG VCcallingPipeline.swift:93:76:         Create tmp string:__t:236 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:93:76:         walkExpr STRING_LITERAL assigning to vars: [string:__t:236]
DEBUG VCcallingPipeline.swift:93:146:         Create tmp string:__t:237 to eval expr CALL_FUNCTION
DEBUG VCcallingPipeline.swift:93:146:         walkExpr CALL_FUNCTION assigning to vars: [string:__t:237]
DEBUG VCcallingPipeline.swift:93:172:         Create tmp string:__t:238 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:93:172:         walkExpr STRING_LITERAL assigning to vars: [string:__t:238]
DEBUG VCcallingPipeline.swift:94:4:       walkExpr CALL_FUNCTION assigning to vars: [void:__t:239]
DEBUG VCcallingPipeline.swift:94:41:       Create tmp boolean:__t:240 to eval expr OPERATOR
DEBUG VCcallingPipeline.swift:94:41:       walkExpr OPERATOR assigning to vars: [boolean:__t:240]
DEBUG VCcallingPipeline.swift:94:43:       Create tmp int:__t:241 to eval expr INT_LITERAL
DEBUG VCcallingPipeline.swift:94:43:       walkExpr INT_LITERAL assigning to vars: [int:__t:241]
DEBUG VCcallingPipeline.swift:94:46:       Create tmp string:__t:242 to eval expr CALL_FUNCTION
DEBUG VCcallingPipeline.swift:94:46:       walkExpr CALL_FUNCTION assigning to vars: [string:__t:242]
DEBUG VCcallingPipeline.swift:94:53:       Create tmp string:__t:243 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:94:53:       walkExpr STRING_LITERAL assigning to vars: [string:__t:243]
DEBUG VCcallingPipeline.swift:94:103:       Create tmp string:__t:244 to eval expr CALL_FUNCTION
DEBUG VCcallingPipeline.swift:94:103:       walkExpr CALL_FUNCTION assigning to vars: [string:__t:244]
DEBUG VCcallingPipeline.swift:94:129:       Create tmp string:__t:245 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:94:129:       walkExpr STRING_LITERAL assigning to vars: [string:__t:245]
DEBUG VCcallingPipeline.swift:96:4:       walkExpr CALL_FUNCTION assigning to vars: [void:__t:246]
DEBUG VCcallingPipeline.swift:96:10:       Create tmp string:__t:247 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:96:10:       walkExpr STRING_LITERAL assigning to vars: [string:__t:247]
DEBUG VCcallingPipeline.swift:97:28:       Create tmp boolean:__t:248 to eval expr OPERATOR
DEBUG VCcallingPipeline.swift:97:28:       walkExpr OPERATOR assigning to vars: [boolean:__t:248]
DEBUG VCcallingPipeline.swift:97:8:       Create tmp string:__t:249 to eval expr ARRAY_LOAD
DEBUG VCcallingPipeline.swift:97:8:       walkExpr ARRAY_LOAD assigning to vars: [string:__t:249]
DEBUG VCcallingPipeline.swift:97:13:       Create tmp string:__t:250 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:97:13:       walkExpr STRING_LITERAL assigning to vars: [string:__t:250]
DEBUG VCcallingPipeline.swift:97:31:       Create tmp string:__t:251 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:97:31:       walkExpr STRING_LITERAL assigning to vars: [string:__t:251]
DEBUG VCcallingPipeline.swift:98:16:         assignment: 
DEBUG VCcallingPipeline.swift:99:16:         assignment: 
DEBUG VCcallingPipeline.swift:98:16:         assignment: 
DEBUG VCcallingPipeline.swift:98:5:         walkExpr CALL_FUNCTION assigning to vars: [file:alignedsam]
DEBUG VCcallingPipeline.swift:98:26:         Create tmp string:__t:252 to eval expr ARRAY_LOAD
DEBUG VCcallingPipeline.swift:98:26:         walkExpr ARRAY_LOAD assigning to vars: [string:__t:252]
DEBUG VCcallingPipeline.swift:98:31:         Create tmp string:__t:253 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:98:31:         walkExpr STRING_LITERAL assigning to vars: [string:__t:253]
DEBUG VCcallingPipeline.swift:98:56:         Create tmp string:__t:254 to eval expr ARRAY_LOAD
DEBUG VCcallingPipeline.swift:98:56:         walkExpr ARRAY_LOAD assigning to vars: [string:__t:254]
DEBUG VCcallingPipeline.swift:98:61:         Create tmp string:__t:255 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:98:61:         walkExpr STRING_LITERAL assigning to vars: [string:__t:255]
DEBUG VCcallingPipeline.swift:98:75:         Create tmp string[int]:__t:256 to eval expr ARRAY_ELEMS
DEBUG VCcallingPipeline.swift:98:75:         walkExpr ARRAY_ELEMS assigning to vars: [string[int]:__t:256]
DEBUG VCcallingPipeline.swift:98:75:         Create tmp string:__t:257 to eval expr ARRAY_LOAD
DEBUG VCcallingPipeline.swift:98:75:         walkExpr ARRAY_LOAD assigning to vars: [string:__t:257]
DEBUG VCcallingPipeline.swift:98:80:         Create tmp string:__t:258 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:98:80:         walkExpr STRING_LITERAL assigning to vars: [string:__t:258]
DEBUG VCcallingPipeline.swift:98:98:         Create tmp int:__t:259 to eval expr CALL_FUNCTION
DEBUG VCcallingPipeline.swift:98:98:         walkExpr CALL_FUNCTION assigning to vars: [int:__t:259]
DEBUG VCcallingPipeline.swift:98:109:         Create tmp string:__t:260 to eval expr ARRAY_LOAD
DEBUG VCcallingPipeline.swift:98:109:         walkExpr ARRAY_LOAD assigning to vars: [string:__t:260]
DEBUG VCcallingPipeline.swift:98:114:         Create tmp string:__t:261 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:98:114:         walkExpr STRING_LITERAL assigning to vars: [string:__t:261]
DEBUG VCcallingPipeline.swift:99:16:         assignment: 
DEBUG VCcallingPipeline.swift:99:5:         walkExpr CALL_FUNCTION assigning to vars: [file:alignedbam]
DEBUG VCcallingPipeline.swift:99:32:         Create tmp string:__t:262 to eval expr ARRAY_LOAD
DEBUG VCcallingPipeline.swift:99:32:         walkExpr ARRAY_LOAD assigning to vars: [string:__t:262]
DEBUG VCcallingPipeline.swift:99:37:         Create tmp string:__t:263 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:99:37:         walkExpr STRING_LITERAL assigning to vars: [string:__t:263]
DEBUG VCcallingPipeline.swift:99:64:         Create tmp int:__t:264 to eval expr CALL_FUNCTION
DEBUG VCcallingPipeline.swift:99:64:         walkExpr CALL_FUNCTION assigning to vars: [int:__t:264]
DEBUG VCcallingPipeline.swift:99:75:         Create tmp string:__t:265 to eval expr ARRAY_LOAD
DEBUG VCcallingPipeline.swift:99:75:         walkExpr ARRAY_LOAD assigning to vars: [string:__t:265]
DEBUG VCcallingPipeline.swift:99:80:         Create tmp string:__t:266 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:99:80:         walkExpr STRING_LITERAL assigning to vars: [string:__t:266]
DEBUG VCcallingPipeline.swift:99:95:         Create tmp string[int]:__t:267 to eval expr ARRAY_ELEMS
DEBUG VCcallingPipeline.swift:99:95:         walkExpr ARRAY_ELEMS assigning to vars: [string[int]:__t:267]
DEBUG VCcallingPipeline.swift:99:95:         Create tmp string:__t:268 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:99:95:         walkExpr STRING_LITERAL assigning to vars: [string:__t:268]
DEBUG VCcallingPipeline.swift:101:16:         assignment: 
DEBUG VCcallingPipeline.swift:102:16:         assignment: 
DEBUG VCcallingPipeline.swift:101:16:         assignment: 
DEBUG VCcallingPipeline.swift:101:5:         walkExpr CALL_FUNCTION assigning to vars: [file:alignedsam]
DEBUG VCcallingPipeline.swift:101:28:         Create tmp string:__t:269 to eval expr CALL_FUNCTION
DEBUG VCcallingPipeline.swift:101:28:         walkExpr CALL_FUNCTION assigning to vars: [string:__t:269]
DEBUG VCcallingPipeline.swift:101:35:         Create tmp string:__t:270 to eval expr ARRAY_LOAD
DEBUG VCcallingPipeline.swift:101:35:         walkExpr ARRAY_LOAD assigning to vars: [string:__t:270]
DEBUG VCcallingPipeline.swift:101:40:         Create tmp string:__t:271 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:101:40:         walkExpr STRING_LITERAL assigning to vars: [string:__t:271]
DEBUG VCcallingPipeline.swift:101:56:         Create tmp string:__t:272 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:101:56:         walkExpr STRING_LITERAL assigning to vars: [string:__t:272]
DEBUG VCcallingPipeline.swift:101:60:         Create tmp string:__t:273 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:101:60:         walkExpr STRING_LITERAL assigning to vars: [string:__t:273]
DEBUG VCcallingPipeline.swift:101:88:         Create tmp string:__t:274 to eval expr ARRAY_LOAD
DEBUG VCcallingPipeline.swift:101:88:         walkExpr ARRAY_LOAD assigning to vars: [string:__t:274]
DEBUG VCcallingPipeline.swift:101:93:         Create tmp string:__t:275 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:101:93:         walkExpr STRING_LITERAL assigning to vars: [string:__t:275]
DEBUG VCcallingPipeline.swift:101:113:         Create tmp string[int]:__t:276 to eval expr ARRAY_ELEMS
DEBUG VCcallingPipeline.swift:101:113:         walkExpr ARRAY_ELEMS assigning to vars: [string[int]:__t:276]
DEBUG VCcallingPipeline.swift:101:113:         Create tmp string:__t:277 to eval expr ARRAY_LOAD
DEBUG VCcallingPipeline.swift:101:113:         walkExpr ARRAY_LOAD assigning to vars: [string:__t:277]
DEBUG VCcallingPipeline.swift:101:118:         Create tmp string:__t:278 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:101:118:         walkExpr STRING_LITERAL assigning to vars: [string:__t:278]
DEBUG VCcallingPipeline.swift:101:139:         Create tmp int:__t:279 to eval expr CALL_FUNCTION
DEBUG VCcallingPipeline.swift:101:139:         walkExpr CALL_FUNCTION assigning to vars: [int:__t:279]
DEBUG VCcallingPipeline.swift:101:150:         Create tmp string:__t:280 to eval expr ARRAY_LOAD
DEBUG VCcallingPipeline.swift:101:150:         walkExpr ARRAY_LOAD assigning to vars: [string:__t:280]
DEBUG VCcallingPipeline.swift:101:155:         Create tmp string:__t:281 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:101:155:         walkExpr STRING_LITERAL assigning to vars: [string:__t:281]
DEBUG VCcallingPipeline.swift:102:16:         assignment: 
DEBUG VCcallingPipeline.swift:102:5:         walkExpr CALL_FUNCTION assigning to vars: [file:alignedbam]
DEBUG VCcallingPipeline.swift:102:32:         Create tmp string:__t:282 to eval expr ARRAY_LOAD
DEBUG VCcallingPipeline.swift:102:32:         walkExpr ARRAY_LOAD assigning to vars: [string:__t:282]
DEBUG VCcallingPipeline.swift:102:37:         Create tmp string:__t:283 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:102:37:         walkExpr STRING_LITERAL assigning to vars: [string:__t:283]
DEBUG VCcallingPipeline.swift:102:65:         Create tmp int:__t:284 to eval expr CALL_FUNCTION
DEBUG VCcallingPipeline.swift:102:65:         walkExpr CALL_FUNCTION assigning to vars: [int:__t:284]
DEBUG VCcallingPipeline.swift:102:76:         Create tmp string:__t:285 to eval expr ARRAY_LOAD
DEBUG VCcallingPipeline.swift:102:76:         walkExpr ARRAY_LOAD assigning to vars: [string:__t:285]
DEBUG VCcallingPipeline.swift:102:81:         Create tmp string:__t:286 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:102:81:         walkExpr STRING_LITERAL assigning to vars: [string:__t:286]
DEBUG VCcallingPipeline.swift:102:96:         Create tmp string[int]:__t:287 to eval expr ARRAY_ELEMS
DEBUG VCcallingPipeline.swift:102:96:         walkExpr ARRAY_ELEMS assigning to vars: [string[int]:__t:287]
DEBUG VCcallingPipeline.swift:102:96:         Create tmp string:__t:288 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:102:96:         walkExpr STRING_LITERAL assigning to vars: [string:__t:288]
DEBUG VCcallingPipeline.swift:104:8:       walkExpr CALL_FUNCTION assigning to vars: [int:numAlignments_aligned]
DEBUG VCcallingPipeline.swift:104:47:       Create tmp string:__t:289 to eval expr ARRAY_LOAD
DEBUG VCcallingPipeline.swift:104:47:       walkExpr ARRAY_LOAD assigning to vars: [string:__t:289]
DEBUG VCcallingPipeline.swift:104:52:       Create tmp string:__t:290 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:104:52:       walkExpr STRING_LITERAL assigning to vars: [string:__t:290]
DEBUG VCcallingPipeline.swift:104:68:       Create tmp string:__t:291 to eval expr CALL_FUNCTION
DEBUG VCcallingPipeline.swift:104:68:       walkExpr CALL_FUNCTION assigning to vars: [string:__t:291]
DEBUG VCcallingPipeline.swift:105:29:       Create tmp boolean:__t:292 to eval expr OPERATOR
DEBUG VCcallingPipeline.swift:105:29:       walkExpr OPERATOR assigning to vars: [boolean:__t:292]
DEBUG VCcallingPipeline.swift:105:31:       Create tmp int:__t:293 to eval expr INT_LITERAL
DEBUG VCcallingPipeline.swift:105:31:       walkExpr INT_LITERAL assigning to vars: [int:__t:293]
DEBUG VCcallingPipeline.swift:105:43:         assignment: 
DEBUG VCcallingPipeline.swift:105:36:         walkExpr CALL_FUNCTION assigning to vars: [file:qcfile]
DEBUG VCcallingPipeline.swift:105:50:         Create tmp string:__t:294 to eval expr CALL_FUNCTION
DEBUG VCcallingPipeline.swift:105:50:         walkExpr CALL_FUNCTION assigning to vars: [string:__t:294]
DEBUG VCcallingPipeline.swift:105:69:         Create tmp string:__t:295 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:105:69:         walkExpr STRING_LITERAL assigning to vars: [string:__t:295]
DEBUG VCcallingPipeline.swift:105:152:         Create tmp string:__t:296 to eval expr CALL_FUNCTION
DEBUG VCcallingPipeline.swift:105:152:         walkExpr CALL_FUNCTION assigning to vars: [string:__t:296]
DEBUG VCcallingPipeline.swift:105:174:         Create tmp string:__t:297 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:105:174:         walkExpr STRING_LITERAL assigning to vars: [string:__t:297]
DEBUG VCcallingPipeline.swift:106:4:       walkExpr CALL_FUNCTION assigning to vars: [void:__t:298]
DEBUG VCcallingPipeline.swift:106:34:       Create tmp boolean:__t:299 to eval expr OPERATOR
DEBUG VCcallingPipeline.swift:106:34:       walkExpr OPERATOR assigning to vars: [boolean:__t:299]
DEBUG VCcallingPipeline.swift:106:36:       Create tmp int:__t:300 to eval expr INT_LITERAL
DEBUG VCcallingPipeline.swift:106:36:       walkExpr INT_LITERAL assigning to vars: [int:__t:300]
DEBUG VCcallingPipeline.swift:106:39:       Create tmp string:__t:301 to eval expr CALL_FUNCTION
DEBUG VCcallingPipeline.swift:106:39:       walkExpr CALL_FUNCTION assigning to vars: [string:__t:301]
DEBUG VCcallingPipeline.swift:106:46:       Create tmp string:__t:302 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:106:46:       walkExpr STRING_LITERAL assigning to vars: [string:__t:302]
DEBUG VCcallingPipeline.swift:106:97:       Create tmp string:__t:303 to eval expr CALL_FUNCTION
DEBUG VCcallingPipeline.swift:106:97:       walkExpr CALL_FUNCTION assigning to vars: [string:__t:303]
DEBUG VCcallingPipeline.swift:106:119:       Create tmp string:__t:304 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:106:119:       walkExpr STRING_LITERAL assigning to vars: [string:__t:304]
DEBUG VCcallingPipeline.swift:108:20:        assignment: 
DEBUG VCcallingPipeline.swift:108:20:        assignment: 
DEBUG VCcallingPipeline.swift:108:5:        walkExpr CALL_FUNCTION assigning to vars: [file:dedupsortedbam]
DEBUG VCcallingPipeline.swift:108:31:        Create tmp string:__t:305 to eval expr CALL_FUNCTION
DEBUG VCcallingPipeline.swift:108:31:        walkExpr CALL_FUNCTION assigning to vars: [string:__t:305]
DEBUG VCcallingPipeline.swift:108:38:        Create tmp string:__t:306 to eval expr ARRAY_LOAD
DEBUG VCcallingPipeline.swift:108:38:        walkExpr ARRAY_LOAD assigning to vars: [string:__t:306]
DEBUG VCcallingPipeline.swift:108:43:        Create tmp string:__t:307 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:108:43:        walkExpr STRING_LITERAL assigning to vars: [string:__t:307]
DEBUG VCcallingPipeline.swift:108:59:        Create tmp string:__t:308 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:108:59:        walkExpr STRING_LITERAL assigning to vars: [string:__t:308]
DEBUG VCcallingPipeline.swift:108:63:        Create tmp string:__t:309 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:108:63:        walkExpr STRING_LITERAL assigning to vars: [string:__t:309]
DEBUG VCcallingPipeline.swift:108:87:        Create tmp string:__t:310 to eval expr ARRAY_LOAD
DEBUG VCcallingPipeline.swift:108:87:        walkExpr ARRAY_LOAD assigning to vars: [string:__t:310]
DEBUG VCcallingPipeline.swift:108:92:        Create tmp string:__t:311 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:108:92:        walkExpr STRING_LITERAL assigning to vars: [string:__t:311]
DEBUG VCcallingPipeline.swift:108:103:        Create tmp int:__t:312 to eval expr CALL_FUNCTION
DEBUG VCcallingPipeline.swift:108:103:        walkExpr CALL_FUNCTION assigning to vars: [int:__t:312]
DEBUG VCcallingPipeline.swift:108:114:        Create tmp string:__t:313 to eval expr ARRAY_LOAD
DEBUG VCcallingPipeline.swift:108:114:        walkExpr ARRAY_LOAD assigning to vars: [string:__t:313]
DEBUG VCcallingPipeline.swift:108:119:        Create tmp string:__t:314 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:108:119:        walkExpr STRING_LITERAL assigning to vars: [string:__t:314]
DEBUG VCcallingPipeline.swift:108:134:        Create tmp string[int]:__t:315 to eval expr ARRAY_ELEMS
DEBUG VCcallingPipeline.swift:108:134:        walkExpr ARRAY_ELEMS assigning to vars: [string[int]:__t:315]
DEBUG VCcallingPipeline.swift:108:134:        Create tmp string:__t:316 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:108:134:        walkExpr STRING_LITERAL assigning to vars: [string:__t:316]
DEBUG VCcallingPipeline.swift:109:9:        walkExpr CALL_FUNCTION assigning to vars: [int:numAlignments_dedupsortedbam]
DEBUG VCcallingPipeline.swift:109:55:        Create tmp string:__t:317 to eval expr ARRAY_LOAD
DEBUG VCcallingPipeline.swift:109:55:        walkExpr ARRAY_LOAD assigning to vars: [string:__t:317]
DEBUG VCcallingPipeline.swift:109:60:        Create tmp string:__t:318 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:109:60:        walkExpr STRING_LITERAL assigning to vars: [string:__t:318]
DEBUG VCcallingPipeline.swift:109:76:        Create tmp string:__t:319 to eval expr CALL_FUNCTION
DEBUG VCcallingPipeline.swift:109:76:        walkExpr CALL_FUNCTION assigning to vars: [string:__t:319]
DEBUG VCcallingPipeline.swift:110:37:        Create tmp boolean:__t:320 to eval expr OPERATOR
DEBUG VCcallingPipeline.swift:110:37:        walkExpr OPERATOR assigning to vars: [boolean:__t:320]
DEBUG VCcallingPipeline.swift:110:39:        Create tmp int:__t:321 to eval expr INT_LITERAL
DEBUG VCcallingPipeline.swift:110:39:        walkExpr INT_LITERAL assigning to vars: [int:__t:321]
DEBUG VCcallingPipeline.swift:110:51:          assignment: 
DEBUG VCcallingPipeline.swift:110:44:          walkExpr CALL_FUNCTION assigning to vars: [file:qcfile]
DEBUG VCcallingPipeline.swift:110:58:          Create tmp string:__t:322 to eval expr CALL_FUNCTION
DEBUG VCcallingPipeline.swift:110:58:          walkExpr CALL_FUNCTION assigning to vars: [string:__t:322]
DEBUG VCcallingPipeline.swift:110:77:          Create tmp string:__t:323 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:110:77:          walkExpr STRING_LITERAL assigning to vars: [string:__t:323]
DEBUG VCcallingPipeline.swift:110:148:          Create tmp string:__t:324 to eval expr CALL_FUNCTION
DEBUG VCcallingPipeline.swift:110:148:          walkExpr CALL_FUNCTION assigning to vars: [string:__t:324]
DEBUG VCcallingPipeline.swift:110:174:          Create tmp string:__t:325 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:110:174:          walkExpr STRING_LITERAL assigning to vars: [string:__t:325]
DEBUG VCcallingPipeline.swift:111:5:        walkExpr CALL_FUNCTION assigning to vars: [void:__t:326]
DEBUG VCcallingPipeline.swift:111:42:        Create tmp boolean:__t:327 to eval expr OPERATOR
DEBUG VCcallingPipeline.swift:111:42:        walkExpr OPERATOR assigning to vars: [boolean:__t:327]
DEBUG VCcallingPipeline.swift:111:44:        Create tmp int:__t:328 to eval expr INT_LITERAL
DEBUG VCcallingPipeline.swift:111:44:        walkExpr INT_LITERAL assigning to vars: [int:__t:328]
DEBUG VCcallingPipeline.swift:111:47:        Create tmp string:__t:329 to eval expr CALL_FUNCTION
DEBUG VCcallingPipeline.swift:111:47:        walkExpr CALL_FUNCTION assigning to vars: [string:__t:329]
DEBUG VCcallingPipeline.swift:111:54:        Create tmp string:__t:330 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:111:54:        walkExpr STRING_LITERAL assigning to vars: [string:__t:330]
DEBUG VCcallingPipeline.swift:111:106:        Create tmp string:__t:331 to eval expr CALL_FUNCTION
DEBUG VCcallingPipeline.swift:111:106:        walkExpr CALL_FUNCTION assigning to vars: [string:__t:331]
DEBUG VCcallingPipeline.swift:111:132:        Create tmp string:__t:332 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:111:132:        walkExpr STRING_LITERAL assigning to vars: [string:__t:332]
DEBUG VCcallingPipeline.swift:117:2:   walkExpr CALL_FUNCTION assigning to vars: [void:__t:333]
DEBUG VCcallingPipeline.swift:117:8:   Create tmp string:__t:334 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:117:8:   walkExpr STRING_LITERAL assigning to vars: [string:__t:334]
DEBUG VCcallingPipeline.swift:118:2:   walkExpr CALL_FUNCTION assigning to vars: [void:__t:335]
DEBUG VCcallingPipeline.swift:118:8:   Create tmp string:__t:336 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:118:8:   walkExpr STRING_LITERAL assigning to vars: [string:__t:336]
DEBUG VCcallingPipeline.swift:118:65:   Create tmp string:__t:337 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:118:65:   walkExpr STRING_LITERAL assigning to vars: [string:__t:337]
DEBUG VCcallingPipeline.swift:119:2:   walkExpr CALL_FUNCTION assigning to vars: [void:__t:338]
DEBUG VCcallingPipeline.swift:119:8:   Create tmp string:__t:339 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:119:8:   walkExpr STRING_LITERAL assigning to vars: [string:__t:339]
DEBUG VCcallingPipeline.swift:119:55:   Create tmp string:__t:340 to eval expr ARRAY_LOAD
DEBUG VCcallingPipeline.swift:119:55:   walkExpr ARRAY_LOAD assigning to vars: [string:__t:340]
DEBUG VCcallingPipeline.swift:119:60:   Create tmp string:__t:341 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:119:60:   walkExpr STRING_LITERAL assigning to vars: [string:__t:341]
DEBUG VCcallingPipeline.swift:119:75:   Create tmp string:__t:342 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:119:75:   walkExpr STRING_LITERAL assigning to vars: [string:__t:342]
DEBUG VCcallingPipeline.swift:120:2:   walkExpr CALL_FUNCTION assigning to vars: [void:__t:343]
DEBUG VCcallingPipeline.swift:120:8:   Create tmp string:__t:344 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:120:8:   walkExpr STRING_LITERAL assigning to vars: [string:__t:344]
DEBUG VCcallingPipeline.swift:120:56:   Create tmp string:__t:345 to eval expr ARRAY_LOAD
DEBUG VCcallingPipeline.swift:120:56:   walkExpr ARRAY_LOAD assigning to vars: [string:__t:345]
DEBUG VCcallingPipeline.swift:120:61:   Create tmp string:__t:346 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:120:61:   walkExpr STRING_LITERAL assigning to vars: [string:__t:346]
DEBUG VCcallingPipeline.swift:120:76:   Create tmp string:__t:347 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:120:76:   walkExpr STRING_LITERAL assigning to vars: [string:__t:347]
DEBUG VCcallingPipeline.swift:122:12:   assignment: 
DEBUG VCcallingPipeline.swift:122:2:   walkExpr CALL_FUNCTION assigning to vars: [file:flagstats]
DEBUG VCcallingPipeline.swift:122:32:   Create tmp string:__t:348 to eval expr ARRAY_LOAD
DEBUG VCcallingPipeline.swift:122:32:   walkExpr ARRAY_LOAD assigning to vars: [string:__t:348]
DEBUG VCcallingPipeline.swift:122:37:   Create tmp string:__t:349 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:122:37:   walkExpr STRING_LITERAL assigning to vars: [string:__t:349]
DEBUG VCcallingPipeline.swift:124:9:   walkExpr CALL_FUNCTION assigning to vars: [string[int]:stat]
DEBUG VCcallingPipeline.swift:125:13:   assignment: 
DEBUG Undeclared var tot_mapped
DEBUG VCcallingPipeline.swift:125:2:   walkExpr ARRAY_LOAD assigning to vars: [string:tot_mapped]
DEBUG VCcallingPipeline.swift:125:15:   Create tmp string[int]:__t:350 to eval expr CALL_FUNCTION
DEBUG VCcallingPipeline.swift:125:15:   walkExpr CALL_FUNCTION assigning to vars: [string[int]:__t:350]
DEBUG VCcallingPipeline.swift:125:21:   Create tmp string:__t:351 to eval expr ARRAY_LOAD
DEBUG VCcallingPipeline.swift:125:21:   walkExpr ARRAY_LOAD assigning to vars: [string:__t:351]
DEBUG VCcallingPipeline.swift:125:30:   Create tmp string:__t:352 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:125:30:   walkExpr STRING_LITERAL assigning to vars: [string:__t:352]
DEBUG VCcallingPipeline.swift:126:12:   assignment: 
DEBUG Undeclared var tot_reads
DEBUG VCcallingPipeline.swift:126:2:   walkExpr ARRAY_LOAD assigning to vars: [string:tot_reads]
DEBUG VCcallingPipeline.swift:126:14:   Create tmp string[int]:__t:353 to eval expr CALL_FUNCTION
DEBUG VCcallingPipeline.swift:126:14:   walkExpr CALL_FUNCTION assigning to vars: [string[int]:__t:353]
DEBUG VCcallingPipeline.swift:126:20:   Create tmp string:__t:354 to eval expr ARRAY_LOAD
DEBUG VCcallingPipeline.swift:126:20:   walkExpr ARRAY_LOAD assigning to vars: [string:__t:354]
DEBUG VCcallingPipeline.swift:126:29:   Create tmp string:__t:355 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:126:29:   walkExpr STRING_LITERAL assigning to vars: [string:__t:355]
DEBUG VCcallingPipeline.swift:127:11:   assignment: 
DEBUG Undeclared var tot_dups
DEBUG VCcallingPipeline.swift:127:2:   walkExpr ARRAY_LOAD assigning to vars: [string:tot_dups]
DEBUG VCcallingPipeline.swift:127:13:   Create tmp string[int]:__t:356 to eval expr CALL_FUNCTION
DEBUG VCcallingPipeline.swift:127:13:   walkExpr CALL_FUNCTION assigning to vars: [string[int]:__t:356]
DEBUG VCcallingPipeline.swift:127:19:   Create tmp string:__t:357 to eval expr ARRAY_LOAD
DEBUG VCcallingPipeline.swift:127:19:   walkExpr ARRAY_LOAD assigning to vars: [string:__t:357]
DEBUG VCcallingPipeline.swift:127:28:   Create tmp string:__t:358 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:127:28:   walkExpr STRING_LITERAL assigning to vars: [string:__t:358]
DEBUG VCcallingPipeline.swift:129:10:   assignment: 
DEBUG Undeclared var perc_dup
DEBUG VCcallingPipeline.swift:129:2:   walkExpr OPERATOR assigning to vars: [float:perc_dup]
DEBUG VCcallingPipeline.swift:129:34:   Create tmp float:__t:359 to eval expr OPERATOR
DEBUG VCcallingPipeline.swift:129:34:   walkExpr OPERATOR assigning to vars: [float:__t:359]
DEBUG VCcallingPipeline.swift:129:12:   Create tmp float:__t:360 to eval expr CALL_FUNCTION
DEBUG VCcallingPipeline.swift:129:12:   walkExpr CALL_FUNCTION assigning to vars: [float:__t:360]
DEBUG VCcallingPipeline.swift:129:35:   Create tmp float:__t:361 to eval expr INT_LITERAL
DEBUG VCcallingPipeline.swift:129:35:   walkExpr INT_LITERAL assigning to vars: [float:__t:361]
DEBUG VCcallingPipeline.swift:129:39:   Create tmp float:__t:362 to eval expr CALL_FUNCTION
DEBUG VCcallingPipeline.swift:129:39:   walkExpr CALL_FUNCTION assigning to vars: [float:__t:362]
DEBUG VCcallingPipeline.swift:130:13:   assignment: 
DEBUG Undeclared var perc_mapped
DEBUG VCcallingPipeline.swift:130:2:   walkExpr OPERATOR assigning to vars: [float:perc_mapped]
DEBUG VCcallingPipeline.swift:130:39:   Create tmp float:__t:363 to eval expr OPERATOR
DEBUG VCcallingPipeline.swift:130:39:   walkExpr OPERATOR assigning to vars: [float:__t:363]
DEBUG VCcallingPipeline.swift:130:15:   Create tmp float:__t:364 to eval expr CALL_FUNCTION
DEBUG VCcallingPipeline.swift:130:15:   walkExpr CALL_FUNCTION assigning to vars: [float:__t:364]
DEBUG VCcallingPipeline.swift:130:40:   Create tmp float:__t:365 to eval expr INT_LITERAL
DEBUG VCcallingPipeline.swift:130:40:   walkExpr INT_LITERAL assigning to vars: [float:__t:365]
DEBUG VCcallingPipeline.swift:130:44:   Create tmp float:__t:366 to eval expr CALL_FUNCTION
DEBUG VCcallingPipeline.swift:130:44:   walkExpr CALL_FUNCTION assigning to vars: [float:__t:366]
DEBUG VCcallingPipeline.swift:132:16:   Create tmp boolean:__t:367 to eval expr OPERATOR
DEBUG VCcallingPipeline.swift:132:16:   walkExpr OPERATOR assigning to vars: [boolean:__t:367]
DEBUG VCcallingPipeline.swift:132:18:   Create tmp float:__t:368 to eval expr CALL_FUNCTION
DEBUG VCcallingPipeline.swift:132:18:   walkExpr CALL_FUNCTION assigning to vars: [float:__t:368]
DEBUG VCcallingPipeline.swift:132:31:   Create tmp string:__t:369 to eval expr ARRAY_LOAD
DEBUG VCcallingPipeline.swift:132:31:   walkExpr ARRAY_LOAD assigning to vars: [string:__t:369]
DEBUG VCcallingPipeline.swift:132:36:   Create tmp string:__t:370 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:132:36:   walkExpr STRING_LITERAL assigning to vars: [string:__t:370]
DEBUG VCcallingPipeline.swift:133:3:     walkExpr CALL_FUNCTION assigning to vars: [void:__t:371]
DEBUG VCcallingPipeline.swift:133:122:     Create tmp string:__t:372 to eval expr OPERATOR
DEBUG VCcallingPipeline.swift:133:122:     walkExpr OPERATOR assigning to vars: [string:__t:372]
DEBUG VCcallingPipeline.swift:133:97:     Create tmp string:__t:373 to eval expr OPERATOR
DEBUG VCcallingPipeline.swift:133:97:     walkExpr OPERATOR assigning to vars: [string:__t:373]
DEBUG VCcallingPipeline.swift:133:87:     Create tmp string:__t:374 to eval expr OPERATOR
DEBUG VCcallingPipeline.swift:133:87:     walkExpr OPERATOR assigning to vars: [string:__t:374]
DEBUG VCcallingPipeline.swift:133:32:     Create tmp string:__t:375 to eval expr OPERATOR
DEBUG VCcallingPipeline.swift:133:32:     walkExpr OPERATOR assigning to vars: [string:__t:375]
DEBUG VCcallingPipeline.swift:133:19:     Create tmp string:__t:376 to eval expr OPERATOR
DEBUG VCcallingPipeline.swift:133:19:     walkExpr OPERATOR assigning to vars: [string:__t:376]
DEBUG VCcallingPipeline.swift:133:9:     Create tmp string:__t:377 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:133:9:     walkExpr STRING_LITERAL assigning to vars: [string:__t:377]
DEBUG VCcallingPipeline.swift:133:34:     Create tmp string:__t:378 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:133:34:     walkExpr STRING_LITERAL assigning to vars: [string:__t:378]
DEBUG VCcallingPipeline.swift:133:99:     Create tmp string:__t:379 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:133:99:     walkExpr STRING_LITERAL assigning to vars: [string:__t:379]
DEBUG VCcallingPipeline.swift:133:124:     Create tmp string:__t:380 to eval expr ARRAY_LOAD
DEBUG VCcallingPipeline.swift:133:124:     walkExpr ARRAY_LOAD assigning to vars: [string:__t:380]
DEBUG VCcallingPipeline.swift:133:129:     Create tmp string:__t:381 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:133:129:     walkExpr STRING_LITERAL assigning to vars: [string:__t:381]
DEBUG VCcallingPipeline.swift:134:20:     Create tmp boolean:__t:382 to eval expr OPERATOR
DEBUG VCcallingPipeline.swift:134:20:     walkExpr OPERATOR assigning to vars: [boolean:__t:382]
DEBUG VCcallingPipeline.swift:134:22:     Create tmp float:__t:383 to eval expr CALL_FUNCTION
DEBUG VCcallingPipeline.swift:134:22:     walkExpr CALL_FUNCTION assigning to vars: [float:__t:383]
DEBUG VCcallingPipeline.swift:134:35:     Create tmp string:__t:384 to eval expr ARRAY_LOAD
DEBUG VCcallingPipeline.swift:134:35:     walkExpr ARRAY_LOAD assigning to vars: [string:__t:384]
DEBUG VCcallingPipeline.swift:134:40:     Create tmp string:__t:385 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:134:40:     walkExpr STRING_LITERAL assigning to vars: [string:__t:385]
DEBUG VCcallingPipeline.swift:135:4:       walkExpr CALL_FUNCTION assigning to vars: [void:__t:386]
DEBUG VCcallingPipeline.swift:135:119:       Create tmp string:__t:387 to eval expr OPERATOR
DEBUG VCcallingPipeline.swift:135:119:       walkExpr OPERATOR assigning to vars: [string:__t:387]
DEBUG VCcallingPipeline.swift:135:94:       Create tmp string:__t:388 to eval expr OPERATOR
DEBUG VCcallingPipeline.swift:135:94:       walkExpr OPERATOR assigning to vars: [string:__t:388]
DEBUG VCcallingPipeline.swift:135:81:       Create tmp string:__t:389 to eval expr OPERATOR
DEBUG VCcallingPipeline.swift:135:81:       walkExpr OPERATOR assigning to vars: [string:__t:389]
DEBUG VCcallingPipeline.swift:135:33:       Create tmp string:__t:390 to eval expr OPERATOR
DEBUG VCcallingPipeline.swift:135:33:       walkExpr OPERATOR assigning to vars: [string:__t:390]
DEBUG VCcallingPipeline.swift:135:20:       Create tmp string:__t:391 to eval expr OPERATOR
DEBUG VCcallingPipeline.swift:135:20:       walkExpr OPERATOR assigning to vars: [string:__t:391]
DEBUG VCcallingPipeline.swift:135:10:       Create tmp string:__t:392 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:135:10:       walkExpr STRING_LITERAL assigning to vars: [string:__t:392]
DEBUG VCcallingPipeline.swift:135:35:       Create tmp string:__t:393 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:135:35:       walkExpr STRING_LITERAL assigning to vars: [string:__t:393]
DEBUG VCcallingPipeline.swift:135:96:       Create tmp string:__t:394 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:135:96:       walkExpr STRING_LITERAL assigning to vars: [string:__t:394]
DEBUG VCcallingPipeline.swift:135:121:       Create tmp string:__t:395 to eval expr ARRAY_LOAD
DEBUG VCcallingPipeline.swift:135:121:       walkExpr ARRAY_LOAD assigning to vars: [string:__t:395]
DEBUG VCcallingPipeline.swift:135:126:       Create tmp string:__t:396 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:135:126:       walkExpr STRING_LITERAL assigning to vars: [string:__t:396]
DEBUG VCcallingPipeline.swift:136:11:       assignment: 
DEBUG VCcallingPipeline.swift:136:4:       walkExpr CALL_FUNCTION assigning to vars: [file:qcfile]
DEBUG VCcallingPipeline.swift:136:206:       Create tmp string:__t:397 to eval expr OPERATOR
DEBUG VCcallingPipeline.swift:136:206:       walkExpr OPERATOR assigning to vars: [string:__t:397]
DEBUG VCcallingPipeline.swift:136:183:       Create tmp string:__t:398 to eval expr OPERATOR
DEBUG VCcallingPipeline.swift:136:183:       walkExpr OPERATOR assigning to vars: [string:__t:398]
DEBUG VCcallingPipeline.swift:136:171:       Create tmp string:__t:399 to eval expr OPERATOR
DEBUG VCcallingPipeline.swift:136:171:       walkExpr OPERATOR assigning to vars: [string:__t:399]
DEBUG VCcallingPipeline.swift:136:137:       Create tmp string:__t:400 to eval expr OPERATOR
DEBUG VCcallingPipeline.swift:136:137:       walkExpr OPERATOR assigning to vars: [string:__t:400]
DEBUG VCcallingPipeline.swift:136:118:       Create tmp string:__t:401 to eval expr OPERATOR
DEBUG VCcallingPipeline.swift:136:118:       walkExpr OPERATOR assigning to vars: [string:__t:401]
DEBUG VCcallingPipeline.swift:136:91:       Create tmp string:__t:402 to eval expr OPERATOR
DEBUG VCcallingPipeline.swift:136:91:       walkExpr OPERATOR assigning to vars: [string:__t:402]
DEBUG VCcallingPipeline.swift:136:82:       Create tmp string:__t:403 to eval expr OPERATOR
DEBUG VCcallingPipeline.swift:136:82:       walkExpr OPERATOR assigning to vars: [string:__t:403]
DEBUG VCcallingPipeline.swift:136:29:       Create tmp string:__t:404 to eval expr OPERATOR
DEBUG VCcallingPipeline.swift:136:29:       walkExpr OPERATOR assigning to vars: [string:__t:404]
DEBUG VCcallingPipeline.swift:136:31:       Create tmp string:__t:405 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:136:31:       walkExpr STRING_LITERAL assigning to vars: [string:__t:405]
DEBUG VCcallingPipeline.swift:136:93:       Create tmp string:__t:406 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:136:93:       walkExpr STRING_LITERAL assigning to vars: [string:__t:406]
DEBUG VCcallingPipeline.swift:136:119:       Create tmp string:__t:407 to eval expr ARRAY_LOAD
DEBUG VCcallingPipeline.swift:136:119:       walkExpr ARRAY_LOAD assigning to vars: [string:__t:407]
DEBUG VCcallingPipeline.swift:136:124:       Create tmp string:__t:408 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:136:124:       walkExpr STRING_LITERAL assigning to vars: [string:__t:408]
DEBUG VCcallingPipeline.swift:136:139:       Create tmp string:__t:409 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:136:139:       walkExpr STRING_LITERAL assigning to vars: [string:__t:409]
DEBUG VCcallingPipeline.swift:136:185:       Create tmp string:__t:410 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:136:185:       walkExpr STRING_LITERAL assigning to vars: [string:__t:410]
DEBUG VCcallingPipeline.swift:136:207:       Create tmp string:__t:411 to eval expr ARRAY_LOAD
DEBUG VCcallingPipeline.swift:136:207:       walkExpr ARRAY_LOAD assigning to vars: [string:__t:411]
DEBUG VCcallingPipeline.swift:136:212:       Create tmp string:__t:412 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:136:212:       walkExpr STRING_LITERAL assigning to vars: [string:__t:412]
DEBUG VCcallingPipeline.swift:138:4:       walkExpr CALL_FUNCTION assigning to vars: [void:__t:413]
DEBUG VCcallingPipeline.swift:138:125:       Create tmp string:__t:414 to eval expr OPERATOR
DEBUG VCcallingPipeline.swift:138:125:       walkExpr OPERATOR assigning to vars: [string:__t:414]
DEBUG VCcallingPipeline.swift:138:100:       Create tmp string:__t:415 to eval expr OPERATOR
DEBUG VCcallingPipeline.swift:138:100:       walkExpr OPERATOR assigning to vars: [string:__t:415]
DEBUG VCcallingPipeline.swift:138:87:       Create tmp string:__t:416 to eval expr OPERATOR
DEBUG VCcallingPipeline.swift:138:87:       walkExpr OPERATOR assigning to vars: [string:__t:416]
DEBUG VCcallingPipeline.swift:138:33:       Create tmp string:__t:417 to eval expr OPERATOR
DEBUG VCcallingPipeline.swift:138:33:       walkExpr OPERATOR assigning to vars: [string:__t:417]
DEBUG VCcallingPipeline.swift:138:20:       Create tmp string:__t:418 to eval expr OPERATOR
DEBUG VCcallingPipeline.swift:138:20:       walkExpr OPERATOR assigning to vars: [string:__t:418]
DEBUG VCcallingPipeline.swift:138:10:       Create tmp string:__t:419 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:138:10:       walkExpr STRING_LITERAL assigning to vars: [string:__t:419]
DEBUG VCcallingPipeline.swift:138:35:       Create tmp string:__t:420 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:138:35:       walkExpr STRING_LITERAL assigning to vars: [string:__t:420]
DEBUG VCcallingPipeline.swift:138:102:       Create tmp string:__t:421 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:138:102:       walkExpr STRING_LITERAL assigning to vars: [string:__t:421]
DEBUG VCcallingPipeline.swift:138:127:       Create tmp string:__t:422 to eval expr ARRAY_LOAD
DEBUG VCcallingPipeline.swift:138:127:       walkExpr ARRAY_LOAD assigning to vars: [string:__t:422]
DEBUG VCcallingPipeline.swift:138:132:       Create tmp string:__t:423 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:138:132:       walkExpr STRING_LITERAL assigning to vars: [string:__t:423]
DEBUG VCcallingPipeline.swift:139:11:       assignment: 
DEBUG VCcallingPipeline.swift:139:4:       walkExpr CALL_FUNCTION assigning to vars: [file:qcfile]
DEBUG VCcallingPipeline.swift:139:210:       Create tmp string:__t:424 to eval expr OPERATOR
DEBUG VCcallingPipeline.swift:139:210:       walkExpr OPERATOR assigning to vars: [string:__t:424]
DEBUG VCcallingPipeline.swift:139:187:       Create tmp string:__t:425 to eval expr OPERATOR
DEBUG VCcallingPipeline.swift:139:187:       walkExpr OPERATOR assigning to vars: [string:__t:425]
DEBUG VCcallingPipeline.swift:139:175:       Create tmp string:__t:426 to eval expr OPERATOR
DEBUG VCcallingPipeline.swift:139:175:       walkExpr OPERATOR assigning to vars: [string:__t:426]
DEBUG VCcallingPipeline.swift:139:137:       Create tmp string:__t:427 to eval expr OPERATOR
DEBUG VCcallingPipeline.swift:139:137:       walkExpr OPERATOR assigning to vars: [string:__t:427]
DEBUG VCcallingPipeline.swift:139:118:       Create tmp string:__t:428 to eval expr OPERATOR
DEBUG VCcallingPipeline.swift:139:118:       walkExpr OPERATOR assigning to vars: [string:__t:428]
DEBUG VCcallingPipeline.swift:139:91:       Create tmp string:__t:429 to eval expr OPERATOR
DEBUG VCcallingPipeline.swift:139:91:       walkExpr OPERATOR assigning to vars: [string:__t:429]
DEBUG VCcallingPipeline.swift:139:82:       Create tmp string:__t:430 to eval expr OPERATOR
DEBUG VCcallingPipeline.swift:139:82:       walkExpr OPERATOR assigning to vars: [string:__t:430]
DEBUG VCcallingPipeline.swift:139:29:       Create tmp string:__t:431 to eval expr OPERATOR
DEBUG VCcallingPipeline.swift:139:29:       walkExpr OPERATOR assigning to vars: [string:__t:431]
DEBUG VCcallingPipeline.swift:139:31:       Create tmp string:__t:432 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:139:31:       walkExpr STRING_LITERAL assigning to vars: [string:__t:432]
DEBUG VCcallingPipeline.swift:139:93:       Create tmp string:__t:433 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:139:93:       walkExpr STRING_LITERAL assigning to vars: [string:__t:433]
DEBUG VCcallingPipeline.swift:139:119:       Create tmp string:__t:434 to eval expr ARRAY_LOAD
DEBUG VCcallingPipeline.swift:139:119:       walkExpr ARRAY_LOAD assigning to vars: [string:__t:434]
DEBUG VCcallingPipeline.swift:139:124:       Create tmp string:__t:435 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:139:124:       walkExpr STRING_LITERAL assigning to vars: [string:__t:435]
DEBUG VCcallingPipeline.swift:139:139:       Create tmp string:__t:436 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:139:139:       walkExpr STRING_LITERAL assigning to vars: [string:__t:436]
DEBUG VCcallingPipeline.swift:139:189:       Create tmp string:__t:437 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:139:189:       walkExpr STRING_LITERAL assigning to vars: [string:__t:437]
DEBUG VCcallingPipeline.swift:139:211:       Create tmp string:__t:438 to eval expr ARRAY_LOAD
DEBUG VCcallingPipeline.swift:139:211:       walkExpr ARRAY_LOAD assigning to vars: [string:__t:438]
DEBUG VCcallingPipeline.swift:139:216:       Create tmp string:__t:439 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:139:216:       walkExpr STRING_LITERAL assigning to vars: [string:__t:439]
DEBUG VCcallingPipeline.swift:142:2:     walkExpr CALL_FUNCTION assigning to vars: [void:__t:440]
DEBUG VCcallingPipeline.swift:142:127:     Create tmp string:__t:441 to eval expr OPERATOR
DEBUG VCcallingPipeline.swift:142:127:     walkExpr OPERATOR assigning to vars: [string:__t:441]
DEBUG VCcallingPipeline.swift:142:102:     Create tmp string:__t:442 to eval expr OPERATOR
DEBUG VCcallingPipeline.swift:142:102:     walkExpr OPERATOR assigning to vars: [string:__t:442]
DEBUG VCcallingPipeline.swift:142:92:     Create tmp string:__t:443 to eval expr OPERATOR
DEBUG VCcallingPipeline.swift:142:92:     walkExpr OPERATOR assigning to vars: [string:__t:443]
DEBUG VCcallingPipeline.swift:142:31:     Create tmp string:__t:444 to eval expr OPERATOR
DEBUG VCcallingPipeline.swift:142:31:     walkExpr OPERATOR assigning to vars: [string:__t:444]
DEBUG VCcallingPipeline.swift:142:18:     Create tmp string:__t:445 to eval expr OPERATOR
DEBUG VCcallingPipeline.swift:142:18:     walkExpr OPERATOR assigning to vars: [string:__t:445]
DEBUG VCcallingPipeline.swift:142:8:     Create tmp string:__t:446 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:142:8:     walkExpr STRING_LITERAL assigning to vars: [string:__t:446]
DEBUG VCcallingPipeline.swift:142:33:     Create tmp string:__t:447 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:142:33:     walkExpr STRING_LITERAL assigning to vars: [string:__t:447]
DEBUG VCcallingPipeline.swift:142:104:     Create tmp string:__t:448 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:142:104:     walkExpr STRING_LITERAL assigning to vars: [string:__t:448]
DEBUG VCcallingPipeline.swift:142:129:     Create tmp string:__t:449 to eval expr ARRAY_LOAD
DEBUG VCcallingPipeline.swift:142:129:     walkExpr ARRAY_LOAD assigning to vars: [string:__t:449]
DEBUG VCcallingPipeline.swift:142:134:     Create tmp string:__t:450 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:142:134:     walkExpr STRING_LITERAL assigning to vars: [string:__t:450]
DEBUG VCcallingPipeline.swift:147:2:   walkExpr CALL_FUNCTION assigning to vars: [void:__t:451]
DEBUG VCcallingPipeline.swift:147:8:   Create tmp string:__t:452 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:147:8:   walkExpr STRING_LITERAL assigning to vars: [string:__t:452]
DEBUG VCcallingPipeline.swift:155:10:   assignment: 
DEBUG Undeclared var indices
DEBUG VCcallingPipeline.swift:155:2:   walkExpr CALL_FUNCTION assigning to vars: [string[int]:indices]
DEBUG VCcallingPipeline.swift:155:18:   Create tmp string:__t:453 to eval expr ARRAY_LOAD
DEBUG VCcallingPipeline.swift:155:18:   walkExpr ARRAY_LOAD assigning to vars: [string:__t:453]
DEBUG VCcallingPipeline.swift:155:23:   Create tmp string:__t:454 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:155:23:   walkExpr STRING_LITERAL assigning to vars: [string:__t:454]
DEBUG VCcallingPipeline.swift:155:36:   Create tmp string:__t:455 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:155:36:   walkExpr STRING_LITERAL assigning to vars: [string:__t:455]
DEBUG VCcallingPipeline.swift:160:4:     walkExpr CALL_FUNCTION assigning to vars: [void:__t:456]
DEBUG VCcallingPipeline.swift:160:77:     Create tmp string:__t:457 to eval expr OPERATOR
DEBUG VCcallingPipeline.swift:160:77:     walkExpr OPERATOR assigning to vars: [string:__t:457]
DEBUG VCcallingPipeline.swift:160:73:     Create tmp string:__t:458 to eval expr OPERATOR
DEBUG VCcallingPipeline.swift:160:73:     walkExpr OPERATOR assigning to vars: [string:__t:458]
DEBUG VCcallingPipeline.swift:160:63:     Create tmp string:__t:459 to eval expr OPERATOR
DEBUG VCcallingPipeline.swift:160:63:     walkExpr OPERATOR assigning to vars: [string:__t:459]
DEBUG VCcallingPipeline.swift:160:52:     Create tmp string:__t:460 to eval expr OPERATOR
DEBUG VCcallingPipeline.swift:160:52:     walkExpr OPERATOR assigning to vars: [string:__t:460]
DEBUG VCcallingPipeline.swift:160:10:     Create tmp string:__t:461 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:160:10:     walkExpr STRING_LITERAL assigning to vars: [string:__t:461]
DEBUG VCcallingPipeline.swift:160:65:     Create tmp string:__t:462 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:160:65:     walkExpr STRING_LITERAL assigning to vars: [string:__t:462]
DEBUG VCcallingPipeline.swift:160:79:     Create tmp string:__t:463 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:160:79:     walkExpr STRING_LITERAL assigning to vars: [string:__t:463]
DEBUG VCcallingPipeline.swift:162:28:     Create tmp string:__t:464 to eval expr CALL_FUNCTION
DEBUG VCcallingPipeline.swift:162:28:     walkExpr CALL_FUNCTION assigning to vars: [string:__t:464]
DEBUG VCcallingPipeline.swift:162:59:     Create tmp string:__t:465 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:162:59:     walkExpr STRING_LITERAL assigning to vars: [string:__t:465]
DEBUG VCcallingPipeline.swift:162:69:     Create tmp string:__t:466 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:162:69:     walkExpr STRING_LITERAL assigning to vars: [string:__t:466]
DEBUG VCcallingPipeline.swift:163:23:     Create tmp string:__t:467 to eval expr CALL_FUNCTION
DEBUG VCcallingPipeline.swift:163:23:     walkExpr CALL_FUNCTION assigning to vars: [string:__t:467]
DEBUG VCcallingPipeline.swift:163:54:     Create tmp string:__t:468 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:163:54:     walkExpr STRING_LITERAL assigning to vars: [string:__t:468]
DEBUG VCcallingPipeline.swift:163:64:     Create tmp string:__t:469 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:163:64:     walkExpr STRING_LITERAL assigning to vars: [string:__t:469]
DEBUG VCcallingPipeline.swift:164:26:     Create tmp string:__t:470 to eval expr CALL_FUNCTION
DEBUG VCcallingPipeline.swift:164:26:     walkExpr CALL_FUNCTION assigning to vars: [string:__t:470]
DEBUG VCcallingPipeline.swift:164:57:     Create tmp string:__t:471 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:164:57:     walkExpr STRING_LITERAL assigning to vars: [string:__t:471]
DEBUG VCcallingPipeline.swift:164:67:     Create tmp string:__t:472 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:164:67:     walkExpr STRING_LITERAL assigning to vars: [string:__t:472]
DEBUG VCcallingPipeline.swift:165:21:     Create tmp string:__t:473 to eval expr CALL_FUNCTION
DEBUG VCcallingPipeline.swift:165:21:     walkExpr CALL_FUNCTION assigning to vars: [string:__t:473]
DEBUG VCcallingPipeline.swift:165:52:     Create tmp string:__t:474 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:165:52:     walkExpr STRING_LITERAL assigning to vars: [string:__t:474]
DEBUG VCcallingPipeline.swift:165:62:     Create tmp string:__t:475 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:165:62:     walkExpr STRING_LITERAL assigning to vars: [string:__t:475]
DEBUG VCcallingPipeline.swift:166:23:     Create tmp string:__t:476 to eval expr CALL_FUNCTION
DEBUG VCcallingPipeline.swift:166:23:     walkExpr CALL_FUNCTION assigning to vars: [string:__t:476]
DEBUG VCcallingPipeline.swift:166:54:     Create tmp string:__t:477 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:166:54:     walkExpr STRING_LITERAL assigning to vars: [string:__t:477]
DEBUG VCcallingPipeline.swift:166:64:     Create tmp string:__t:478 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:166:64:     walkExpr STRING_LITERAL assigning to vars: [string:__t:478]
DEBUG VCcallingPipeline.swift:167:22:     Create tmp string:__t:479 to eval expr CALL_FUNCTION
DEBUG VCcallingPipeline.swift:167:22:     walkExpr CALL_FUNCTION assigning to vars: [string:__t:479]
DEBUG VCcallingPipeline.swift:167:53:     Create tmp string:__t:480 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:167:53:     walkExpr STRING_LITERAL assigning to vars: [string:__t:480]
DEBUG VCcallingPipeline.swift:167:63:     Create tmp string:__t:481 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:167:63:     walkExpr STRING_LITERAL assigning to vars: [string:__t:481]
DEBUG VCcallingPipeline.swift:169:22:     Create tmp string:__t:482 to eval expr CALL_FUNCTION
DEBUG VCcallingPipeline.swift:169:22:     walkExpr CALL_FUNCTION assigning to vars: [string:__t:482]
DEBUG VCcallingPipeline.swift:169:43:     Create tmp string:__t:483 to eval expr OPERATOR
DEBUG VCcallingPipeline.swift:169:43:     walkExpr OPERATOR assigning to vars: [string:__t:483]
DEBUG VCcallingPipeline.swift:169:29:     Create tmp string:__t:484 to eval expr ARRAY_LOAD
DEBUG VCcallingPipeline.swift:169:29:     walkExpr ARRAY_LOAD assigning to vars: [string:__t:484]
DEBUG VCcallingPipeline.swift:169:34:     Create tmp string:__t:485 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:169:34:     walkExpr STRING_LITERAL assigning to vars: [string:__t:485]
DEBUG VCcallingPipeline.swift:169:56:     Create tmp string:__t:486 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:169:56:     walkExpr STRING_LITERAL assigning to vars: [string:__t:486]
DEBUG VCcallingPipeline.swift:169:66:     Create tmp string:__t:487 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:169:66:     walkExpr STRING_LITERAL assigning to vars: [string:__t:487]
DEBUG VCcallingPipeline.swift:170:21:     Create tmp string:__t:488 to eval expr CALL_FUNCTION
DEBUG VCcallingPipeline.swift:170:21:     walkExpr CALL_FUNCTION assigning to vars: [string:__t:488]
DEBUG VCcallingPipeline.swift:170:42:     Create tmp string:__t:489 to eval expr OPERATOR
DEBUG VCcallingPipeline.swift:170:42:     walkExpr OPERATOR assigning to vars: [string:__t:489]
DEBUG VCcallingPipeline.swift:170:28:     Create tmp string:__t:490 to eval expr ARRAY_LOAD
DEBUG VCcallingPipeline.swift:170:28:     walkExpr ARRAY_LOAD assigning to vars: [string:__t:490]
DEBUG VCcallingPipeline.swift:170:33:     Create tmp string:__t:491 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:170:33:     walkExpr STRING_LITERAL assigning to vars: [string:__t:491]
DEBUG VCcallingPipeline.swift:170:55:     Create tmp string:__t:492 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:170:55:     walkExpr STRING_LITERAL assigning to vars: [string:__t:492]
DEBUG VCcallingPipeline.swift:170:65:     Create tmp string:__t:493 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:170:65:     walkExpr STRING_LITERAL assigning to vars: [string:__t:493]
DEBUG VCcallingPipeline.swift:172:4:     walkExpr CALL_FUNCTION assigning to vars: [void:__t:494]
DEBUG VCcallingPipeline.swift:172:84:     Create tmp string:__t:495 to eval expr OPERATOR
DEBUG VCcallingPipeline.swift:172:84:     walkExpr OPERATOR assigning to vars: [string:__t:495]
DEBUG VCcallingPipeline.swift:172:78:     Create tmp string:__t:496 to eval expr OPERATOR
DEBUG VCcallingPipeline.swift:172:78:     walkExpr OPERATOR assigning to vars: [string:__t:496]
DEBUG VCcallingPipeline.swift:172:65:     Create tmp string:__t:497 to eval expr OPERATOR
DEBUG VCcallingPipeline.swift:172:65:     walkExpr OPERATOR assigning to vars: [string:__t:497]
DEBUG VCcallingPipeline.swift:172:10:     Create tmp string:__t:498 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:172:10:     walkExpr STRING_LITERAL assigning to vars: [string:__t:498]
DEBUG VCcallingPipeline.swift:172:86:     Create tmp string:__t:499 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:172:86:     walkExpr STRING_LITERAL assigning to vars: [string:__t:499]
DEBUG VCcallingPipeline.swift:174:12:     Create tmp boolean:__t:500 to eval expr OPERATOR
DEBUG VCcallingPipeline.swift:174:12:     walkExpr OPERATOR assigning to vars: [boolean:__t:500]
DEBUG VCcallingPipeline.swift:174:14:     Create tmp string:__t:501 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:174:14:     walkExpr STRING_LITERAL assigning to vars: [string:__t:501]
DEBUG VCcallingPipeline.swift:174:28:       assignment: 
DEBUG VCcallingPipeline.swift:174:21:       walkExpr INT_LITERAL assigning to vars: [int:ploidy]
DEBUG VCcallingPipeline.swift:174:47:       assignment: 
DEBUG VCcallingPipeline.swift:174:40:       walkExpr INT_LITERAL assigning to vars: [int:ploidy]
DEBUG VCcallingPipeline.swift:175:22:     assignment: 
DEBUG VCcallingPipeline.swift:175:22:     assignment: 
DEBUG VCcallingPipeline.swift:175:4:     walkExpr CALL_FUNCTION assigning to vars: [file:chrdedupsortedbam]
DEBUG VCcallingPipeline.swift:175:38:     Create tmp string:__t:502 to eval expr ARRAY_LOAD
DEBUG VCcallingPipeline.swift:175:38:     walkExpr ARRAY_LOAD assigning to vars: [string:__t:502]
DEBUG VCcallingPipeline.swift:175:43:     Create tmp string:__t:503 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:175:43:     walkExpr STRING_LITERAL assigning to vars: [string:__t:503]
DEBUG VCcallingPipeline.swift:175:75:     Create tmp int:__t:504 to eval expr CALL_FUNCTION
DEBUG VCcallingPipeline.swift:175:75:     walkExpr CALL_FUNCTION assigning to vars: [int:__t:504]
DEBUG VCcallingPipeline.swift:175:86:     Create tmp string:__t:505 to eval expr ARRAY_LOAD
DEBUG VCcallingPipeline.swift:175:86:     walkExpr ARRAY_LOAD assigning to vars: [string:__t:505]
DEBUG VCcallingPipeline.swift:175:91:     Create tmp string:__t:506 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:175:91:     walkExpr STRING_LITERAL assigning to vars: [string:__t:506]
DEBUG VCcallingPipeline.swift:175:106:     Create tmp string[int]:__t:507 to eval expr ARRAY_ELEMS
DEBUG VCcallingPipeline.swift:175:106:     walkExpr ARRAY_ELEMS assigning to vars: [string[int]:__t:507]
DEBUG VCcallingPipeline.swift:175:106:     Create tmp string:__t:508 to eval expr CALL_FUNCTION
DEBUG VCcallingPipeline.swift:175:106:     walkExpr CALL_FUNCTION assigning to vars: [string:__t:508]
DEBUG VCcallingPipeline.swift:176:8:     walkExpr CALL_FUNCTION assigning to vars: [int:numAlignments_chrdedupsortedbam]
DEBUG VCcallingPipeline.swift:176:57:     Create tmp string:__t:509 to eval expr ARRAY_LOAD
DEBUG VCcallingPipeline.swift:176:57:     walkExpr ARRAY_LOAD assigning to vars: [string:__t:509]
DEBUG VCcallingPipeline.swift:176:62:     Create tmp string:__t:510 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:176:62:     walkExpr STRING_LITERAL assigning to vars: [string:__t:510]
DEBUG VCcallingPipeline.swift:176:78:     Create tmp string:__t:511 to eval expr CALL_FUNCTION
DEBUG VCcallingPipeline.swift:176:78:     walkExpr CALL_FUNCTION assigning to vars: [string:__t:511]
DEBUG VCcallingPipeline.swift:177:39:     Create tmp boolean:__t:512 to eval expr OPERATOR
DEBUG VCcallingPipeline.swift:177:39:     walkExpr OPERATOR assigning to vars: [boolean:__t:512]
DEBUG VCcallingPipeline.swift:177:41:     Create tmp int:__t:513 to eval expr INT_LITERAL
DEBUG VCcallingPipeline.swift:177:41:     walkExpr INT_LITERAL assigning to vars: [int:__t:513]
DEBUG VCcallingPipeline.swift:177:53:       assignment: 
DEBUG VCcallingPipeline.swift:177:46:       walkExpr CALL_FUNCTION assigning to vars: [file:qcfile]
DEBUG VCcallingPipeline.swift:177:60:       Create tmp string:__t:514 to eval expr CALL_FUNCTION
DEBUG VCcallingPipeline.swift:177:60:       walkExpr CALL_FUNCTION assigning to vars: [string:__t:514]
DEBUG VCcallingPipeline.swift:177:79:       Create tmp string:__t:515 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:177:79:       walkExpr STRING_LITERAL assigning to vars: [string:__t:515]
DEBUG VCcallingPipeline.swift:177:152:       Create tmp string:__t:516 to eval expr CALL_FUNCTION
DEBUG VCcallingPipeline.swift:177:152:       walkExpr CALL_FUNCTION assigning to vars: [string:__t:516]
DEBUG VCcallingPipeline.swift:177:181:       Create tmp string:__t:517 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:177:181:       walkExpr STRING_LITERAL assigning to vars: [string:__t:517]
DEBUG VCcallingPipeline.swift:178:4:     walkExpr CALL_FUNCTION assigning to vars: [void:__t:518]
DEBUG VCcallingPipeline.swift:178:44:     Create tmp boolean:__t:519 to eval expr OPERATOR
DEBUG VCcallingPipeline.swift:178:44:     walkExpr OPERATOR assigning to vars: [boolean:__t:519]
DEBUG VCcallingPipeline.swift:178:46:     Create tmp int:__t:520 to eval expr INT_LITERAL
DEBUG VCcallingPipeline.swift:178:46:     walkExpr INT_LITERAL assigning to vars: [int:__t:520]
DEBUG VCcallingPipeline.swift:178:49:     Create tmp string:__t:521 to eval expr CALL_FUNCTION
DEBUG VCcallingPipeline.swift:178:49:     walkExpr CALL_FUNCTION assigning to vars: [string:__t:521]
DEBUG VCcallingPipeline.swift:178:56:     Create tmp string:__t:522 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:178:56:     walkExpr STRING_LITERAL assigning to vars: [string:__t:522]
DEBUG VCcallingPipeline.swift:178:108:     Create tmp string:__t:523 to eval expr CALL_FUNCTION
DEBUG VCcallingPipeline.swift:178:108:     walkExpr CALL_FUNCTION assigning to vars: [string:__t:523]
DEBUG VCcallingPipeline.swift:178:137:     Create tmp string:__t:524 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:178:137:     walkExpr STRING_LITERAL assigning to vars: [string:__t:524]
DEBUG VCcallingPipeline.swift:179:4:     walkExpr CALL_FUNCTION assigning to vars: []
DEBUG VCcallingPipeline.swift:179:19:     Create tmp string:__t:525 to eval expr ARRAY_LOAD
DEBUG VCcallingPipeline.swift:179:19:     walkExpr ARRAY_LOAD assigning to vars: [string:__t:525]
DEBUG VCcallingPipeline.swift:179:24:     Create tmp string:__t:526 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:179:24:     walkExpr STRING_LITERAL assigning to vars: [string:__t:526]
DEBUG VCcallingPipeline.swift:181:15:     assignment: 
DEBUG VCcallingPipeline.swift:181:4:     walkExpr CALL_FUNCTION assigning to vars: [file:recalfiles]
DEBUG VCcallingPipeline.swift:181:29:     Create tmp string:__t:527 to eval expr CALL_FUNCTION
DEBUG VCcallingPipeline.swift:181:29:     walkExpr CALL_FUNCTION assigning to vars: [string:__t:527]
DEBUG VCcallingPipeline.swift:181:56:     Create tmp string:__t:528 to eval expr OPERATOR
DEBUG VCcallingPipeline.swift:181:56:     walkExpr OPERATOR assigning to vars: [string:__t:528]
DEBUG VCcallingPipeline.swift:181:36:     Create tmp string:__t:529 to eval expr ARRAY_LOAD
DEBUG VCcallingPipeline.swift:181:36:     walkExpr ARRAY_LOAD assigning to vars: [string:__t:529]
DEBUG VCcallingPipeline.swift:181:41:     Create tmp string:__t:530 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:181:41:     walkExpr STRING_LITERAL assigning to vars: [string:__t:530]
DEBUG VCcallingPipeline.swift:181:57:     Create tmp string:__t:531 to eval expr ARRAY_LOAD
DEBUG VCcallingPipeline.swift:181:57:     walkExpr ARRAY_LOAD assigning to vars: [string:__t:531]
DEBUG VCcallingPipeline.swift:181:62:     Create tmp string:__t:532 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:181:62:     walkExpr STRING_LITERAL assigning to vars: [string:__t:532]
DEBUG VCcallingPipeline.swift:181:75:     Create tmp string:__t:533 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:181:75:     walkExpr STRING_LITERAL assigning to vars: [string:__t:533]
DEBUG VCcallingPipeline.swift:181:81:     Create tmp string:__t:534 to eval expr CALL_FUNCTION
DEBUG VCcallingPipeline.swift:181:81:     walkExpr CALL_FUNCTION assigning to vars: [string:__t:534]
DEBUG VCcallingPipeline.swift:181:88:     Create tmp string:__t:535 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:181:88:     walkExpr STRING_LITERAL assigning to vars: [string:__t:535]
DEBUG VCcallingPipeline.swift:181:98:     Create tmp string:__t:536 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:181:98:     walkExpr STRING_LITERAL assigning to vars: [string:__t:536]
DEBUG VCcallingPipeline.swift:182:11:     walkExpr CALL_FUNCTION assigning to vars: [string[int]:recalparmsindels]
DEBUG VCcallingPipeline.swift:182:38:     Create tmp string:__t:537 to eval expr CALL_FUNCTION
DEBUG VCcallingPipeline.swift:182:38:     walkExpr CALL_FUNCTION assigning to vars: [string:__t:537]
DEBUG VCcallingPipeline.swift:182:43:     Create tmp string:__t:538 to eval expr CALL_FUNCTION
DEBUG VCcallingPipeline.swift:182:43:     walkExpr CALL_FUNCTION assigning to vars: [string:__t:538]
DEBUG VCcallingPipeline.swift:182:55:     Create tmp string:__t:539 to eval expr CALL_FUNCTION
DEBUG VCcallingPipeline.swift:182:55:     walkExpr CALL_FUNCTION assigning to vars: [string:__t:539]
DEBUG VCcallingPipeline.swift:182:60:     Create tmp file:__t:540 to eval expr CALL_FUNCTION
DEBUG VCcallingPipeline.swift:182:60:     walkExpr CALL_FUNCTION assigning to vars: [file:__t:540]
DEBUG VCcallingPipeline.swift:182:76:     Create tmp string:__t:541 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:182:76:     walkExpr STRING_LITERAL assigning to vars: [string:__t:541]
DEBUG VCcallingPipeline.swift:182:101:     Create tmp string:__t:542 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:182:101:     walkExpr STRING_LITERAL assigning to vars: [string:__t:542]
DEBUG VCcallingPipeline.swift:182:107:     Create tmp string:__t:543 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:182:107:     walkExpr STRING_LITERAL assigning to vars: [string:__t:543]
DEBUG VCcallingPipeline.swift:182:112:     Create tmp int:__t:544 to eval expr INT_LITERAL
DEBUG VCcallingPipeline.swift:182:112:     walkExpr INT_LITERAL assigning to vars: [int:__t:544]
DEBUG VCcallingPipeline.swift:182:117:     Create tmp string:__t:545 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:182:117:     walkExpr STRING_LITERAL assigning to vars: [string:__t:545]
DEBUG VCcallingPipeline.swift:184:14:     assignment: 
DEBUG VCcallingPipeline.swift:184:4:     walkExpr CALL_FUNCTION assigning to vars: [file:realfiles]
DEBUG VCcallingPipeline.swift:184:28:     Create tmp string:__t:546 to eval expr CALL_FUNCTION
DEBUG VCcallingPipeline.swift:184:28:     walkExpr CALL_FUNCTION assigning to vars: [string:__t:546]
DEBUG VCcallingPipeline.swift:184:55:     Create tmp string:__t:547 to eval expr OPERATOR
DEBUG VCcallingPipeline.swift:184:55:     walkExpr OPERATOR assigning to vars: [string:__t:547]
DEBUG VCcallingPipeline.swift:184:35:     Create tmp string:__t:548 to eval expr ARRAY_LOAD
DEBUG VCcallingPipeline.swift:184:35:     walkExpr ARRAY_LOAD assigning to vars: [string:__t:548]
DEBUG VCcallingPipeline.swift:184:40:     Create tmp string:__t:549 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:184:40:     walkExpr STRING_LITERAL assigning to vars: [string:__t:549]
DEBUG VCcallingPipeline.swift:184:56:     Create tmp string:__t:550 to eval expr ARRAY_LOAD
DEBUG VCcallingPipeline.swift:184:56:     walkExpr ARRAY_LOAD assigning to vars: [string:__t:550]
DEBUG VCcallingPipeline.swift:184:61:     Create tmp string:__t:551 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:184:61:     walkExpr STRING_LITERAL assigning to vars: [string:__t:551]
DEBUG VCcallingPipeline.swift:184:74:     Create tmp string:__t:552 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:184:74:     walkExpr STRING_LITERAL assigning to vars: [string:__t:552]
DEBUG VCcallingPipeline.swift:184:80:     Create tmp string:__t:553 to eval expr CALL_FUNCTION
DEBUG VCcallingPipeline.swift:184:80:     walkExpr CALL_FUNCTION assigning to vars: [string:__t:553]
DEBUG VCcallingPipeline.swift:184:87:     Create tmp string:__t:554 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:184:87:     walkExpr STRING_LITERAL assigning to vars: [string:__t:554]
DEBUG VCcallingPipeline.swift:184:97:     Create tmp string:__t:555 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:184:97:     walkExpr STRING_LITERAL assigning to vars: [string:__t:555]
DEBUG VCcallingPipeline.swift:185:11:     walkExpr CALL_FUNCTION assigning to vars: [string[int]:realparms]
DEBUG VCcallingPipeline.swift:185:31:     Create tmp string:__t:556 to eval expr CALL_FUNCTION
DEBUG VCcallingPipeline.swift:185:31:     walkExpr CALL_FUNCTION assigning to vars: [string:__t:556]
DEBUG VCcallingPipeline.swift:185:36:     Create tmp string:__t:557 to eval expr CALL_FUNCTION
DEBUG VCcallingPipeline.swift:185:36:     walkExpr CALL_FUNCTION assigning to vars: [string:__t:557]
DEBUG VCcallingPipeline.swift:185:48:     Create tmp string:__t:558 to eval expr CALL_FUNCTION
DEBUG VCcallingPipeline.swift:185:48:     walkExpr CALL_FUNCTION assigning to vars: [string:__t:558]
DEBUG VCcallingPipeline.swift:185:53:     Create tmp file:__t:559 to eval expr CALL_FUNCTION
DEBUG VCcallingPipeline.swift:185:53:     walkExpr CALL_FUNCTION assigning to vars: [file:__t:559]
DEBUG VCcallingPipeline.swift:185:69:     Create tmp string:__t:560 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:185:69:     walkExpr STRING_LITERAL assigning to vars: [string:__t:560]
DEBUG VCcallingPipeline.swift:185:88:     Create tmp string:__t:561 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:185:88:     walkExpr STRING_LITERAL assigning to vars: [string:__t:561]
DEBUG VCcallingPipeline.swift:185:94:     Create tmp string:__t:562 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:185:94:     walkExpr STRING_LITERAL assigning to vars: [string:__t:562]
DEBUG VCcallingPipeline.swift:185:99:     Create tmp int:__t:563 to eval expr INT_LITERAL
DEBUG VCcallingPipeline.swift:185:99:     walkExpr INT_LITERAL assigning to vars: [int:__t:563]
DEBUG VCcallingPipeline.swift:185:104:     Create tmp string:__t:564 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:185:104:     walkExpr STRING_LITERAL assigning to vars: [string:__t:564]
DEBUG VCcallingPipeline.swift:190:14:     assignment: 
DEBUG VCcallingPipeline.swift:190:4:     walkExpr CALL_FUNCTION assigning to vars: [file:intervals]
DEBUG VCcallingPipeline.swift:190:40:     Create tmp string:__t:565 to eval expr ARRAY_LOAD
DEBUG VCcallingPipeline.swift:190:40:     walkExpr ARRAY_LOAD assigning to vars: [string:__t:565]
DEBUG VCcallingPipeline.swift:190:45:     Create tmp string:__t:566 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:190:45:     walkExpr STRING_LITERAL assigning to vars: [string:__t:566]
DEBUG VCcallingPipeline.swift:190:57:     Create tmp string:__t:567 to eval expr CALL_FUNCTION
DEBUG VCcallingPipeline.swift:190:57:     walkExpr CALL_FUNCTION assigning to vars: [string:__t:567]
DEBUG VCcallingPipeline.swift:190:79:     Create tmp string:__t:568 to eval expr OPERATOR
DEBUG VCcallingPipeline.swift:190:79:     walkExpr OPERATOR assigning to vars: [string:__t:568]
DEBUG VCcallingPipeline.swift:190:64:     Create tmp string:__t:569 to eval expr ARRAY_LOAD
DEBUG VCcallingPipeline.swift:190:64:     walkExpr ARRAY_LOAD assigning to vars: [string:__t:569]
DEBUG VCcallingPipeline.swift:190:69:     Create tmp string:__t:570 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:190:69:     walkExpr STRING_LITERAL assigning to vars: [string:__t:570]
DEBUG VCcallingPipeline.swift:190:80:     Create tmp string:__t:571 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:190:80:     walkExpr STRING_LITERAL assigning to vars: [string:__t:571]
DEBUG VCcallingPipeline.swift:190:125:     Create tmp string:__t:572 to eval expr OPERATOR
DEBUG VCcallingPipeline.swift:190:125:     walkExpr OPERATOR assigning to vars: [string:__t:572]
DEBUG VCcallingPipeline.swift:190:105:     Create tmp string:__t:573 to eval expr ARRAY_LOAD
DEBUG VCcallingPipeline.swift:190:105:     walkExpr ARRAY_LOAD assigning to vars: [string:__t:573]
DEBUG VCcallingPipeline.swift:190:110:     Create tmp string:__t:574 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:190:110:     walkExpr STRING_LITERAL assigning to vars: [string:__t:574]
DEBUG VCcallingPipeline.swift:190:126:     Create tmp string:__t:575 to eval expr ARRAY_LOAD
DEBUG VCcallingPipeline.swift:190:126:     walkExpr ARRAY_LOAD assigning to vars: [string:__t:575]
DEBUG VCcallingPipeline.swift:190:131:     Create tmp string:__t:576 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:190:131:     walkExpr STRING_LITERAL assigning to vars: [string:__t:576]
DEBUG VCcallingPipeline.swift:190:164:     Create tmp int:__t:577 to eval expr CALL_FUNCTION
DEBUG VCcallingPipeline.swift:190:164:     walkExpr CALL_FUNCTION assigning to vars: [int:__t:577]
DEBUG VCcallingPipeline.swift:190:175:     Create tmp string:__t:578 to eval expr ARRAY_LOAD
DEBUG VCcallingPipeline.swift:190:175:     walkExpr ARRAY_LOAD assigning to vars: [string:__t:578]
DEBUG VCcallingPipeline.swift:190:180:     Create tmp string:__t:579 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:190:180:     walkExpr STRING_LITERAL assigning to vars: [string:__t:579]
DEBUG VCcallingPipeline.swift:191:17:     assignment: 
DEBUG VCcallingPipeline.swift:191:17:     assignment: 
DEBUG VCcallingPipeline.swift:191:4:     walkExpr CALL_FUNCTION assigning to vars: [file:realignedbam]
DEBUG VCcallingPipeline.swift:191:35:     Create tmp string:__t:580 to eval expr ARRAY_LOAD
DEBUG VCcallingPipeline.swift:191:35:     walkExpr ARRAY_LOAD assigning to vars: [string:__t:580]
DEBUG VCcallingPipeline.swift:191:40:     Create tmp string:__t:581 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:191:40:     walkExpr STRING_LITERAL assigning to vars: [string:__t:581]
DEBUG VCcallingPipeline.swift:191:52:     Create tmp string:__t:582 to eval expr CALL_FUNCTION
DEBUG VCcallingPipeline.swift:191:52:     walkExpr CALL_FUNCTION assigning to vars: [string:__t:582]
DEBUG VCcallingPipeline.swift:191:74:     Create tmp string:__t:583 to eval expr OPERATOR
DEBUG VCcallingPipeline.swift:191:74:     walkExpr OPERATOR assigning to vars: [string:__t:583]
DEBUG VCcallingPipeline.swift:191:59:     Create tmp string:__t:584 to eval expr ARRAY_LOAD
DEBUG VCcallingPipeline.swift:191:59:     walkExpr ARRAY_LOAD assigning to vars: [string:__t:584]
DEBUG VCcallingPipeline.swift:191:64:     Create tmp string:__t:585 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:191:64:     walkExpr STRING_LITERAL assigning to vars: [string:__t:585]
DEBUG VCcallingPipeline.swift:191:75:     Create tmp string:__t:586 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:191:75:     walkExpr STRING_LITERAL assigning to vars: [string:__t:586]
DEBUG VCcallingPipeline.swift:191:120:     Create tmp string:__t:587 to eval expr OPERATOR
DEBUG VCcallingPipeline.swift:191:120:     walkExpr OPERATOR assigning to vars: [string:__t:587]
DEBUG VCcallingPipeline.swift:191:100:     Create tmp string:__t:588 to eval expr ARRAY_LOAD
DEBUG VCcallingPipeline.swift:191:100:     walkExpr ARRAY_LOAD assigning to vars: [string:__t:588]
DEBUG VCcallingPipeline.swift:191:105:     Create tmp string:__t:589 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:191:105:     walkExpr STRING_LITERAL assigning to vars: [string:__t:589]
DEBUG VCcallingPipeline.swift:191:121:     Create tmp string:__t:590 to eval expr ARRAY_LOAD
DEBUG VCcallingPipeline.swift:191:121:     walkExpr ARRAY_LOAD assigning to vars: [string:__t:590]
DEBUG VCcallingPipeline.swift:191:126:     Create tmp string:__t:591 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:191:126:     walkExpr STRING_LITERAL assigning to vars: [string:__t:591]
DEBUG VCcallingPipeline.swift:192:8:     walkExpr CALL_FUNCTION assigning to vars: [int:numAlignments_realignedbam]
DEBUG VCcallingPipeline.swift:192:52:     Create tmp string:__t:592 to eval expr ARRAY_LOAD
DEBUG VCcallingPipeline.swift:192:52:     walkExpr ARRAY_LOAD assigning to vars: [string:__t:592]
DEBUG VCcallingPipeline.swift:192:57:     Create tmp string:__t:593 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:192:57:     walkExpr STRING_LITERAL assigning to vars: [string:__t:593]
DEBUG VCcallingPipeline.swift:192:73:     Create tmp string:__t:594 to eval expr CALL_FUNCTION
DEBUG VCcallingPipeline.swift:192:73:     walkExpr CALL_FUNCTION assigning to vars: [string:__t:594]
DEBUG VCcallingPipeline.swift:193:34:     Create tmp boolean:__t:595 to eval expr OPERATOR
DEBUG VCcallingPipeline.swift:193:34:     walkExpr OPERATOR assigning to vars: [boolean:__t:595]
DEBUG VCcallingPipeline.swift:193:36:     Create tmp int:__t:596 to eval expr INT_LITERAL
DEBUG VCcallingPipeline.swift:193:36:     walkExpr INT_LITERAL assigning to vars: [int:__t:596]
DEBUG VCcallingPipeline.swift:193:48:       assignment: 
DEBUG VCcallingPipeline.swift:193:41:       walkExpr CALL_FUNCTION assigning to vars: [file:qcfile]
DEBUG VCcallingPipeline.swift:193:55:       Create tmp string:__t:597 to eval expr CALL_FUNCTION
DEBUG VCcallingPipeline.swift:193:55:       walkExpr CALL_FUNCTION assigning to vars: [string:__t:597]
DEBUG VCcallingPipeline.swift:193:74:       Create tmp string:__t:598 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:193:74:       walkExpr STRING_LITERAL assigning to vars: [string:__t:598]
DEBUG VCcallingPipeline.swift:193:158:       Create tmp string:__t:599 to eval expr CALL_FUNCTION
DEBUG VCcallingPipeline.swift:193:158:       walkExpr CALL_FUNCTION assigning to vars: [string:__t:599]
DEBUG VCcallingPipeline.swift:193:182:       Create tmp string:__t:600 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:193:182:       walkExpr STRING_LITERAL assigning to vars: [string:__t:600]
DEBUG VCcallingPipeline.swift:194:4:     walkExpr CALL_FUNCTION assigning to vars: [void:__t:601]
DEBUG VCcallingPipeline.swift:194:39:     Create tmp boolean:__t:602 to eval expr OPERATOR
DEBUG VCcallingPipeline.swift:194:39:     walkExpr OPERATOR assigning to vars: [boolean:__t:602]
DEBUG VCcallingPipeline.swift:194:41:     Create tmp int:__t:603 to eval expr INT_LITERAL
DEBUG VCcallingPipeline.swift:194:41:     walkExpr INT_LITERAL assigning to vars: [int:__t:603]
DEBUG VCcallingPipeline.swift:194:44:     Create tmp string:__t:604 to eval expr CALL_FUNCTION
DEBUG VCcallingPipeline.swift:194:44:     walkExpr CALL_FUNCTION assigning to vars: [string:__t:604]
DEBUG VCcallingPipeline.swift:194:51:     Create tmp string:__t:605 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:194:51:     walkExpr STRING_LITERAL assigning to vars: [string:__t:605]
DEBUG VCcallingPipeline.swift:194:114:     Create tmp string:__t:606 to eval expr CALL_FUNCTION
DEBUG VCcallingPipeline.swift:194:114:     walkExpr CALL_FUNCTION assigning to vars: [string:__t:606]
DEBUG VCcallingPipeline.swift:195:16:     assignment: 
DEBUG VCcallingPipeline.swift:195:4:     walkExpr CALL_FUNCTION assigning to vars: [file:recalreport]
DEBUG VCcallingPipeline.swift:195:36:     Create tmp string:__t:607 to eval expr ARRAY_LOAD
DEBUG VCcallingPipeline.swift:195:36:     walkExpr ARRAY_LOAD assigning to vars: [string:__t:607]
DEBUG VCcallingPipeline.swift:195:41:     Create tmp string:__t:608 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:195:41:     walkExpr STRING_LITERAL assigning to vars: [string:__t:608]
DEBUG VCcallingPipeline.swift:195:53:     Create tmp string:__t:609 to eval expr CALL_FUNCTION
DEBUG VCcallingPipeline.swift:195:53:     walkExpr CALL_FUNCTION assigning to vars: [string:__t:609]
DEBUG VCcallingPipeline.swift:195:75:     Create tmp string:__t:610 to eval expr OPERATOR
DEBUG VCcallingPipeline.swift:195:75:     walkExpr OPERATOR assigning to vars: [string:__t:610]
DEBUG VCcallingPipeline.swift:195:60:     Create tmp string:__t:611 to eval expr ARRAY_LOAD
DEBUG VCcallingPipeline.swift:195:60:     walkExpr ARRAY_LOAD assigning to vars: [string:__t:611]
DEBUG VCcallingPipeline.swift:195:65:     Create tmp string:__t:612 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:195:65:     walkExpr STRING_LITERAL assigning to vars: [string:__t:612]
DEBUG VCcallingPipeline.swift:195:76:     Create tmp string:__t:613 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:195:76:     walkExpr STRING_LITERAL assigning to vars: [string:__t:613]
DEBUG VCcallingPipeline.swift:195:121:     Create tmp string:__t:614 to eval expr OPERATOR
DEBUG VCcallingPipeline.swift:195:121:     walkExpr OPERATOR assigning to vars: [string:__t:614]
DEBUG VCcallingPipeline.swift:195:101:     Create tmp string:__t:615 to eval expr ARRAY_LOAD
DEBUG VCcallingPipeline.swift:195:101:     walkExpr ARRAY_LOAD assigning to vars: [string:__t:615]
DEBUG VCcallingPipeline.swift:195:106:     Create tmp string:__t:616 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:195:106:     walkExpr STRING_LITERAL assigning to vars: [string:__t:616]
DEBUG VCcallingPipeline.swift:195:122:     Create tmp string:__t:617 to eval expr ARRAY_LOAD
DEBUG VCcallingPipeline.swift:195:122:     walkExpr ARRAY_LOAD assigning to vars: [string:__t:617]
DEBUG VCcallingPipeline.swift:195:127:     Create tmp string:__t:618 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:195:127:     walkExpr STRING_LITERAL assigning to vars: [string:__t:618]
DEBUG VCcallingPipeline.swift:195:155:     Create tmp int:__t:619 to eval expr CALL_FUNCTION
DEBUG VCcallingPipeline.swift:195:155:     walkExpr CALL_FUNCTION assigning to vars: [int:__t:619]
DEBUG VCcallingPipeline.swift:195:166:     Create tmp string:__t:620 to eval expr ARRAY_LOAD
DEBUG VCcallingPipeline.swift:195:166:     walkExpr ARRAY_LOAD assigning to vars: [string:__t:620]
DEBUG VCcallingPipeline.swift:195:171:     Create tmp string:__t:621 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:195:171:     walkExpr STRING_LITERAL assigning to vars: [string:__t:621]
DEBUG VCcallingPipeline.swift:195:223:     Create tmp string:__t:622 to eval expr OPERATOR
DEBUG VCcallingPipeline.swift:195:223:     walkExpr OPERATOR assigning to vars: [string:__t:622]
DEBUG VCcallingPipeline.swift:195:203:     Create tmp string:__t:623 to eval expr ARRAY_LOAD
DEBUG VCcallingPipeline.swift:195:203:     walkExpr ARRAY_LOAD assigning to vars: [string:__t:623]
DEBUG VCcallingPipeline.swift:195:208:     Create tmp string:__t:624 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:195:208:     walkExpr STRING_LITERAL assigning to vars: [string:__t:624]
DEBUG VCcallingPipeline.swift:195:224:     Create tmp string:__t:625 to eval expr ARRAY_LOAD
DEBUG VCcallingPipeline.swift:195:224:     walkExpr ARRAY_LOAD assigning to vars: [string:__t:625]
DEBUG VCcallingPipeline.swift:195:229:     Create tmp string:__t:626 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:195:229:     walkExpr STRING_LITERAL assigning to vars: [string:__t:626]
DEBUG VCcallingPipeline.swift:196:20:     assignment: 
DEBUG VCcallingPipeline.swift:196:20:     assignment: 
DEBUG VCcallingPipeline.swift:196:4:     walkExpr CALL_FUNCTION assigning to vars: [file:recalibratedbam]
DEBUG VCcallingPipeline.swift:196:34:     Create tmp string:__t:627 to eval expr ARRAY_LOAD
DEBUG VCcallingPipeline.swift:196:34:     walkExpr ARRAY_LOAD assigning to vars: [string:__t:627]
DEBUG VCcallingPipeline.swift:196:39:     Create tmp string:__t:628 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:196:39:     walkExpr STRING_LITERAL assigning to vars: [string:__t:628]
DEBUG VCcallingPipeline.swift:196:51:     Create tmp string:__t:629 to eval expr CALL_FUNCTION
DEBUG VCcallingPipeline.swift:196:51:     walkExpr CALL_FUNCTION assigning to vars: [string:__t:629]
DEBUG VCcallingPipeline.swift:196:73:     Create tmp string:__t:630 to eval expr OPERATOR
DEBUG VCcallingPipeline.swift:196:73:     walkExpr OPERATOR assigning to vars: [string:__t:630]
DEBUG VCcallingPipeline.swift:196:58:     Create tmp string:__t:631 to eval expr ARRAY_LOAD
DEBUG VCcallingPipeline.swift:196:58:     walkExpr ARRAY_LOAD assigning to vars: [string:__t:631]
DEBUG VCcallingPipeline.swift:196:63:     Create tmp string:__t:632 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:196:63:     walkExpr STRING_LITERAL assigning to vars: [string:__t:632]
DEBUG VCcallingPipeline.swift:196:74:     Create tmp string:__t:633 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:196:74:     walkExpr STRING_LITERAL assigning to vars: [string:__t:633]
DEBUG VCcallingPipeline.swift:196:119:     Create tmp string:__t:634 to eval expr OPERATOR
DEBUG VCcallingPipeline.swift:196:119:     walkExpr OPERATOR assigning to vars: [string:__t:634]
DEBUG VCcallingPipeline.swift:196:99:     Create tmp string:__t:635 to eval expr ARRAY_LOAD
DEBUG VCcallingPipeline.swift:196:99:     walkExpr ARRAY_LOAD assigning to vars: [string:__t:635]
DEBUG VCcallingPipeline.swift:196:104:     Create tmp string:__t:636 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:196:104:     walkExpr STRING_LITERAL assigning to vars: [string:__t:636]
DEBUG VCcallingPipeline.swift:196:120:     Create tmp string:__t:637 to eval expr ARRAY_LOAD
DEBUG VCcallingPipeline.swift:196:120:     walkExpr ARRAY_LOAD assigning to vars: [string:__t:637]
DEBUG VCcallingPipeline.swift:196:125:     Create tmp string:__t:638 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:196:125:     walkExpr STRING_LITERAL assigning to vars: [string:__t:638]
DEBUG VCcallingPipeline.swift:196:153:     Create tmp int:__t:639 to eval expr CALL_FUNCTION
DEBUG VCcallingPipeline.swift:196:153:     walkExpr CALL_FUNCTION assigning to vars: [int:__t:639]
DEBUG VCcallingPipeline.swift:196:164:     Create tmp string:__t:640 to eval expr ARRAY_LOAD
DEBUG VCcallingPipeline.swift:196:164:     walkExpr ARRAY_LOAD assigning to vars: [string:__t:640]
DEBUG VCcallingPipeline.swift:196:169:     Create tmp string:__t:641 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:196:169:     walkExpr STRING_LITERAL assigning to vars: [string:__t:641]
DEBUG VCcallingPipeline.swift:197:8:     walkExpr CALL_FUNCTION assigning to vars: [int:numAlignments_recalibratedbam]
DEBUG VCcallingPipeline.swift:197:55:     Create tmp string:__t:642 to eval expr ARRAY_LOAD
DEBUG VCcallingPipeline.swift:197:55:     walkExpr ARRAY_LOAD assigning to vars: [string:__t:642]
DEBUG VCcallingPipeline.swift:197:60:     Create tmp string:__t:643 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:197:60:     walkExpr STRING_LITERAL assigning to vars: [string:__t:643]
DEBUG VCcallingPipeline.swift:197:76:     Create tmp string:__t:644 to eval expr CALL_FUNCTION
DEBUG VCcallingPipeline.swift:197:76:     walkExpr CALL_FUNCTION assigning to vars: [string:__t:644]
DEBUG VCcallingPipeline.swift:198:37:     Create tmp boolean:__t:645 to eval expr OPERATOR
DEBUG VCcallingPipeline.swift:198:37:     walkExpr OPERATOR assigning to vars: [boolean:__t:645]
DEBUG VCcallingPipeline.swift:198:39:     Create tmp int:__t:646 to eval expr INT_LITERAL
DEBUG VCcallingPipeline.swift:198:39:     walkExpr INT_LITERAL assigning to vars: [int:__t:646]
DEBUG VCcallingPipeline.swift:198:51:       assignment: 
DEBUG VCcallingPipeline.swift:198:44:       walkExpr CALL_FUNCTION assigning to vars: [file:qcfile]
DEBUG VCcallingPipeline.swift:198:58:       Create tmp string:__t:647 to eval expr CALL_FUNCTION
DEBUG VCcallingPipeline.swift:198:58:       walkExpr CALL_FUNCTION assigning to vars: [string:__t:647]
DEBUG VCcallingPipeline.swift:198:77:       Create tmp string:__t:648 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:198:77:       walkExpr STRING_LITERAL assigning to vars: [string:__t:648]
DEBUG VCcallingPipeline.swift:198:167:       Create tmp string:__t:649 to eval expr CALL_FUNCTION
DEBUG VCcallingPipeline.swift:198:167:       walkExpr CALL_FUNCTION assigning to vars: [string:__t:649]
DEBUG VCcallingPipeline.swift:198:194:       Create tmp string:__t:650 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:198:194:       walkExpr STRING_LITERAL assigning to vars: [string:__t:650]
DEBUG VCcallingPipeline.swift:199:4:     walkExpr CALL_FUNCTION assigning to vars: [void:__t:651]
DEBUG VCcallingPipeline.swift:199:42:     Create tmp boolean:__t:652 to eval expr OPERATOR
DEBUG VCcallingPipeline.swift:199:42:     walkExpr OPERATOR assigning to vars: [boolean:__t:652]
DEBUG VCcallingPipeline.swift:199:44:     Create tmp int:__t:653 to eval expr INT_LITERAL
DEBUG VCcallingPipeline.swift:199:44:     walkExpr INT_LITERAL assigning to vars: [int:__t:653]
DEBUG VCcallingPipeline.swift:199:47:     Create tmp string:__t:654 to eval expr CALL_FUNCTION
DEBUG VCcallingPipeline.swift:199:47:     walkExpr CALL_FUNCTION assigning to vars: [string:__t:654]
DEBUG VCcallingPipeline.swift:199:54:     Create tmp string:__t:655 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:199:54:     walkExpr STRING_LITERAL assigning to vars: [string:__t:655]
DEBUG VCcallingPipeline.swift:199:120:     Create tmp string:__t:656 to eval expr CALL_FUNCTION
DEBUG VCcallingPipeline.swift:199:120:     walkExpr CALL_FUNCTION assigning to vars: [string:__t:656]
DEBUG VCcallingPipeline.swift:200:4:     walkExpr CALL_FUNCTION assigning to vars: [void:__t:657]
DEBUG VCcallingPipeline.swift:200:91:     Create tmp string:__t:658 to eval expr OPERATOR
DEBUG VCcallingPipeline.swift:200:91:     walkExpr OPERATOR assigning to vars: [string:__t:658]
DEBUG VCcallingPipeline.swift:200:85:     Create tmp string:__t:659 to eval expr OPERATOR
DEBUG VCcallingPipeline.swift:200:85:     walkExpr OPERATOR assigning to vars: [string:__t:659]
DEBUG VCcallingPipeline.swift:200:77:     Create tmp string:__t:660 to eval expr OPERATOR
DEBUG VCcallingPipeline.swift:200:77:     walkExpr OPERATOR assigning to vars: [string:__t:660]
DEBUG VCcallingPipeline.swift:200:64:     Create tmp string:__t:661 to eval expr OPERATOR
DEBUG VCcallingPipeline.swift:200:64:     walkExpr OPERATOR assigning to vars: [string:__t:661]
DEBUG VCcallingPipeline.swift:200:10:     Create tmp string:__t:662 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:200:10:     walkExpr STRING_LITERAL assigning to vars: [string:__t:662]
DEBUG VCcallingPipeline.swift:200:79:     Create tmp string:__t:663 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:200:79:     walkExpr STRING_LITERAL assigning to vars: [string:__t:663]
DEBUG VCcallingPipeline.swift:200:93:     Create tmp string:__t:664 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:200:93:     walkExpr STRING_LITERAL assigning to vars: [string:__t:664]
DEBUG VCcallingPipeline.swift:201:16:     assignment: 
DEBUG VCcallingPipeline.swift:201:16:     assignment: 
DEBUG VCcallingPipeline.swift:201:4:     walkExpr CALL_FUNCTION assigning to vars: [file:gvcfvariant]
DEBUG VCcallingPipeline.swift:201:35:     Create tmp string:__t:665 to eval expr ARRAY_LOAD
DEBUG VCcallingPipeline.swift:201:35:     walkExpr ARRAY_LOAD assigning to vars: [string:__t:665]
DEBUG VCcallingPipeline.swift:201:40:     Create tmp string:__t:666 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:201:40:     walkExpr STRING_LITERAL assigning to vars: [string:__t:666]
DEBUG VCcallingPipeline.swift:201:52:     Create tmp string:__t:667 to eval expr CALL_FUNCTION
DEBUG VCcallingPipeline.swift:201:52:     walkExpr CALL_FUNCTION assigning to vars: [string:__t:667]
DEBUG VCcallingPipeline.swift:201:74:     Create tmp string:__t:668 to eval expr OPERATOR
DEBUG VCcallingPipeline.swift:201:74:     walkExpr OPERATOR assigning to vars: [string:__t:668]
DEBUG VCcallingPipeline.swift:201:59:     Create tmp string:__t:669 to eval expr ARRAY_LOAD
DEBUG VCcallingPipeline.swift:201:59:     walkExpr ARRAY_LOAD assigning to vars: [string:__t:669]
DEBUG VCcallingPipeline.swift:201:64:     Create tmp string:__t:670 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:201:64:     walkExpr STRING_LITERAL assigning to vars: [string:__t:670]
DEBUG VCcallingPipeline.swift:201:75:     Create tmp string:__t:671 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:201:75:     walkExpr STRING_LITERAL assigning to vars: [string:__t:671]
DEBUG VCcallingPipeline.swift:201:120:     Create tmp string:__t:672 to eval expr OPERATOR
DEBUG VCcallingPipeline.swift:201:120:     walkExpr OPERATOR assigning to vars: [string:__t:672]
DEBUG VCcallingPipeline.swift:201:100:     Create tmp string:__t:673 to eval expr ARRAY_LOAD
DEBUG VCcallingPipeline.swift:201:100:     walkExpr ARRAY_LOAD assigning to vars: [string:__t:673]
DEBUG VCcallingPipeline.swift:201:105:     Create tmp string:__t:674 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:201:105:     walkExpr STRING_LITERAL assigning to vars: [string:__t:674]
DEBUG VCcallingPipeline.swift:201:121:     Create tmp string:__t:675 to eval expr ARRAY_LOAD
DEBUG VCcallingPipeline.swift:201:121:     walkExpr ARRAY_LOAD assigning to vars: [string:__t:675]
DEBUG VCcallingPipeline.swift:201:126:     Create tmp string:__t:676 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:201:126:     walkExpr STRING_LITERAL assigning to vars: [string:__t:676]
DEBUG VCcallingPipeline.swift:201:177:     Create tmp string:__t:677 to eval expr OPERATOR
DEBUG VCcallingPipeline.swift:201:177:     walkExpr OPERATOR assigning to vars: [string:__t:677]
DEBUG VCcallingPipeline.swift:201:157:     Create tmp string:__t:678 to eval expr ARRAY_LOAD
DEBUG VCcallingPipeline.swift:201:157:     walkExpr ARRAY_LOAD assigning to vars: [string:__t:678]
DEBUG VCcallingPipeline.swift:201:162:     Create tmp string:__t:679 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:201:162:     walkExpr STRING_LITERAL assigning to vars: [string:__t:679]
DEBUG VCcallingPipeline.swift:201:178:     Create tmp string:__t:680 to eval expr ARRAY_LOAD
DEBUG VCcallingPipeline.swift:201:178:     walkExpr ARRAY_LOAD assigning to vars: [string:__t:680]
DEBUG VCcallingPipeline.swift:201:183:     Create tmp string:__t:681 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:201:183:     walkExpr STRING_LITERAL assigning to vars: [string:__t:681]
DEBUG VCcallingPipeline.swift:201:193:     Create tmp int:__t:682 to eval expr CALL_FUNCTION
DEBUG VCcallingPipeline.swift:201:193:     walkExpr CALL_FUNCTION assigning to vars: [int:__t:682]
DEBUG VCcallingPipeline.swift:201:204:     Create tmp string:__t:683 to eval expr ARRAY_LOAD
DEBUG VCcallingPipeline.swift:201:204:     walkExpr ARRAY_LOAD assigning to vars: [string:__t:683]
DEBUG VCcallingPipeline.swift:201:209:     Create tmp string:__t:684 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:201:209:     walkExpr STRING_LITERAL assigning to vars: [string:__t:684]
DEBUG VCcallingPipeline.swift:202:23:     Create tmp boolean:__t:685 to eval expr OPERATOR
DEBUG VCcallingPipeline.swift:202:23:     walkExpr OPERATOR assigning to vars: [boolean:__t:685]
DEBUG VCcallingPipeline.swift:202:9:     Create tmp int:__t:686 to eval expr CALL_FUNCTION
DEBUG VCcallingPipeline.swift:202:9:     walkExpr CALL_FUNCTION assigning to vars: [int:__t:686]
DEBUG VCcallingPipeline.swift:202:26:     Create tmp int:__t:687 to eval expr CALL_FUNCTION
DEBUG VCcallingPipeline.swift:202:26:     walkExpr CALL_FUNCTION assigning to vars: [int:__t:687]
DEBUG VCcallingPipeline.swift:202:31:     Create tmp file[int]:__t:688 to eval expr CALL_FUNCTION
DEBUG VCcallingPipeline.swift:202:31:     walkExpr CALL_FUNCTION assigning to vars: [file[int]:__t:688]
DEBUG VCcallingPipeline.swift:202:36:     Create tmp string:__t:689 to eval expr CALL_FUNCTION
DEBUG VCcallingPipeline.swift:202:36:     walkExpr CALL_FUNCTION assigning to vars: [string:__t:689]
DEBUG VCcallingPipeline.swift:202:67:     Create tmp string:__t:690 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:202:67:     walkExpr STRING_LITERAL assigning to vars: [string:__t:690]
DEBUG VCcallingPipeline.swift:202:117:       assignment: 
DEBUG VCcallingPipeline.swift:202:89:       walkExpr INT_LITERAL assigning to vars: [int:chromosomes_processing_done]
DEBUG VCcallingPipeline.swift:209:19:    assignment: 
DEBUG VCcallingPipeline.swift:209:3:    walkExpr CALL_FUNCTION assigning to vars: [file:chr_bamListfile]
DEBUG VCcallingPipeline.swift:209:45:    Create tmp string:__t:691 to eval expr CALL_FUNCTION
DEBUG VCcallingPipeline.swift:209:45:    walkExpr CALL_FUNCTION assigning to vars: [string:__t:691]
DEBUG VCcallingPipeline.swift:209:64:    Create tmp string:__t:692 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:209:64:    walkExpr STRING_LITERAL assigning to vars: [string:__t:692]
DEBUG VCcallingPipeline.swift:210:19:    assignment: 
DEBUG VCcallingPipeline.swift:210:3:    walkExpr CALL_FUNCTION assigning to vars: [file:chr_vcfListfile]
DEBUG VCcallingPipeline.swift:210:45:    Create tmp string:__t:693 to eval expr CALL_FUNCTION
DEBUG VCcallingPipeline.swift:210:45:    walkExpr CALL_FUNCTION assigning to vars: [string:__t:693]
DEBUG VCcallingPipeline.swift:210:64:    Create tmp string:__t:694 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:210:64:    walkExpr STRING_LITERAL assigning to vars: [string:__t:694]
DEBUG VCcallingPipeline.swift:213:2:   walkExpr CALL_FUNCTION assigning to vars: [void:__t:695]
DEBUG VCcallingPipeline.swift:213:80:   Create tmp string:__t:696 to eval expr OPERATOR
DEBUG VCcallingPipeline.swift:213:80:   walkExpr OPERATOR assigning to vars: [string:__t:696]
DEBUG VCcallingPipeline.swift:213:67:   Create tmp string:__t:697 to eval expr OPERATOR
DEBUG VCcallingPipeline.swift:213:67:   walkExpr OPERATOR assigning to vars: [string:__t:697]
DEBUG VCcallingPipeline.swift:213:8:   Create tmp string:__t:698 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:213:8:   walkExpr STRING_LITERAL assigning to vars: [string:__t:698]
DEBUG VCcallingPipeline.swift:213:82:   Create tmp string:__t:699 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:213:82:   walkExpr STRING_LITERAL assigning to vars: [string:__t:699]
DEBUG VCcallingPipeline.swift:216:9:   assignment: 
DEBUG VCcallingPipeline.swift:217:12:   assignment: 
DEBUG VCcallingPipeline.swift:215:9:   walkExpr CALL_FUNCTION assigning to vars: [string[int]:chr_bamList]
DEBUG VCcallingPipeline.swift:215:31:   Create tmp string:__t:700 to eval expr CALL_FUNCTION
DEBUG VCcallingPipeline.swift:215:31:   walkExpr CALL_FUNCTION assigning to vars: [string:__t:700]
DEBUG VCcallingPipeline.swift:215:36:   Create tmp string:__t:701 to eval expr CALL_FUNCTION
DEBUG VCcallingPipeline.swift:215:36:   walkExpr CALL_FUNCTION assigning to vars: [string:__t:701]
DEBUG VCcallingPipeline.swift:215:48:   Create tmp string:__t:702 to eval expr CALL_FUNCTION
DEBUG VCcallingPipeline.swift:215:48:   walkExpr CALL_FUNCTION assigning to vars: [string:__t:702]
DEBUG VCcallingPipeline.swift:215:71:   Create tmp string:__t:703 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:215:71:   walkExpr STRING_LITERAL assigning to vars: [string:__t:703]
DEBUG VCcallingPipeline.swift:215:77:   Create tmp string:__t:704 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:215:77:   walkExpr STRING_LITERAL assigning to vars: [string:__t:704]
DEBUG VCcallingPipeline.swift:215:82:   Create tmp int:__t:705 to eval expr INT_LITERAL
DEBUG VCcallingPipeline.swift:215:82:   walkExpr INT_LITERAL assigning to vars: [int:__t:705]
DEBUG VCcallingPipeline.swift:215:87:   Create tmp string:__t:706 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:215:87:   walkExpr STRING_LITERAL assigning to vars: [string:__t:706]
DEBUG VCcallingPipeline.swift:216:9:   assignment: 
DEBUG VCcallingPipeline.swift:216:2:   walkExpr CALL_FUNCTION assigning to vars: [file:outbam]
DEBUG VCcallingPipeline.swift:216:21:   Create tmp string:__t:707 to eval expr CALL_FUNCTION
DEBUG VCcallingPipeline.swift:216:21:   walkExpr CALL_FUNCTION assigning to vars: [string:__t:707]
DEBUG VCcallingPipeline.swift:216:28:   Create tmp string:__t:708 to eval expr ARRAY_LOAD
DEBUG VCcallingPipeline.swift:216:28:   walkExpr ARRAY_LOAD assigning to vars: [string:__t:708]
DEBUG VCcallingPipeline.swift:216:33:   Create tmp string:__t:709 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:216:33:   walkExpr STRING_LITERAL assigning to vars: [string:__t:709]
DEBUG VCcallingPipeline.swift:216:49:   Create tmp string:__t:710 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:216:49:   walkExpr STRING_LITERAL assigning to vars: [string:__t:710]
DEBUG VCcallingPipeline.swift:216:53:   Create tmp string:__t:711 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:216:53:   walkExpr STRING_LITERAL assigning to vars: [string:__t:711]
DEBUG VCcallingPipeline.swift:216:79:   Create tmp string:__t:712 to eval expr ARRAY_LOAD
DEBUG VCcallingPipeline.swift:216:79:   walkExpr ARRAY_LOAD assigning to vars: [string:__t:712]
DEBUG VCcallingPipeline.swift:216:84:   Create tmp string:__t:713 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:216:84:   walkExpr STRING_LITERAL assigning to vars: [string:__t:713]
DEBUG VCcallingPipeline.swift:216:95:   Create tmp int:__t:714 to eval expr CALL_FUNCTION
DEBUG VCcallingPipeline.swift:216:95:   walkExpr CALL_FUNCTION assigning to vars: [int:__t:714]
DEBUG VCcallingPipeline.swift:216:106:   Create tmp string:__t:715 to eval expr ARRAY_LOAD
DEBUG VCcallingPipeline.swift:216:106:   walkExpr ARRAY_LOAD assigning to vars: [string:__t:715]
DEBUG VCcallingPipeline.swift:216:111:   Create tmp string:__t:716 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:216:111:   walkExpr STRING_LITERAL assigning to vars: [string:__t:716]
DEBUG VCcallingPipeline.swift:216:111:   Create tmp string[int]:__t:717 to eval expr ARRAY_ELEMS
DEBUG VCcallingPipeline.swift:216:111:   walkExpr ARRAY_ELEMS assigning to vars: [string[int]:__t:717]
DEBUG VCcallingPipeline.swift:217:12:   assignment: 
DEBUG VCcallingPipeline.swift:217:2:   walkExpr CALL_FUNCTION assigning to vars: [file:mergedbam]
DEBUG VCcallingPipeline.swift:218:6:   walkExpr CALL_FUNCTION assigning to vars: [int:numAlignments_mergedbam]
DEBUG VCcallingPipeline.swift:218:47:   Create tmp string:__t:718 to eval expr ARRAY_LOAD
DEBUG VCcallingPipeline.swift:218:47:   walkExpr ARRAY_LOAD assigning to vars: [string:__t:718]
DEBUG VCcallingPipeline.swift:218:52:   Create tmp string:__t:719 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:218:52:   walkExpr STRING_LITERAL assigning to vars: [string:__t:719]
DEBUG VCcallingPipeline.swift:218:68:   Create tmp string:__t:720 to eval expr CALL_FUNCTION
DEBUG VCcallingPipeline.swift:218:68:   walkExpr CALL_FUNCTION assigning to vars: [string:__t:720]
DEBUG VCcallingPipeline.swift:219:29:   Create tmp boolean:__t:721 to eval expr OPERATOR
DEBUG VCcallingPipeline.swift:219:29:   walkExpr OPERATOR assigning to vars: [boolean:__t:721]
DEBUG VCcallingPipeline.swift:219:31:   Create tmp int:__t:722 to eval expr INT_LITERAL
DEBUG VCcallingPipeline.swift:219:31:   walkExpr INT_LITERAL assigning to vars: [int:__t:722]
DEBUG VCcallingPipeline.swift:219:43:     assignment: 
DEBUG VCcallingPipeline.swift:219:36:     walkExpr CALL_FUNCTION assigning to vars: [file:qcfile]
DEBUG VCcallingPipeline.swift:219:50:     Create tmp string:__t:723 to eval expr CALL_FUNCTION
DEBUG VCcallingPipeline.swift:219:50:     walkExpr CALL_FUNCTION assigning to vars: [string:__t:723]
DEBUG VCcallingPipeline.swift:219:69:     Create tmp string:__t:724 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:219:69:     walkExpr STRING_LITERAL assigning to vars: [string:__t:724]
DEBUG VCcallingPipeline.swift:219:136:     Create tmp string:__t:725 to eval expr CALL_FUNCTION
DEBUG VCcallingPipeline.swift:219:136:     walkExpr CALL_FUNCTION assigning to vars: [string:__t:725]
DEBUG VCcallingPipeline.swift:219:157:     Create tmp string:__t:726 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:219:157:     walkExpr STRING_LITERAL assigning to vars: [string:__t:726]
DEBUG VCcallingPipeline.swift:220:2:   walkExpr CALL_FUNCTION assigning to vars: [void:__t:727]
DEBUG VCcallingPipeline.swift:220:34:   Create tmp boolean:__t:728 to eval expr OPERATOR
DEBUG VCcallingPipeline.swift:220:34:   walkExpr OPERATOR assigning to vars: [boolean:__t:728]
DEBUG VCcallingPipeline.swift:220:36:   Create tmp int:__t:729 to eval expr INT_LITERAL
DEBUG VCcallingPipeline.swift:220:36:   walkExpr INT_LITERAL assigning to vars: [int:__t:729]
DEBUG VCcallingPipeline.swift:220:39:   Create tmp string:__t:730 to eval expr CALL_FUNCTION
DEBUG VCcallingPipeline.swift:220:39:   walkExpr CALL_FUNCTION assigning to vars: [string:__t:730]
DEBUG VCcallingPipeline.swift:220:46:   Create tmp string:__t:731 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:220:46:   walkExpr STRING_LITERAL assigning to vars: [string:__t:731]
DEBUG VCcallingPipeline.swift:220:98:   Create tmp string:__t:732 to eval expr CALL_FUNCTION
DEBUG VCcallingPipeline.swift:220:98:   walkExpr CALL_FUNCTION assigning to vars: [string:__t:732]
DEBUG VCcallingPipeline.swift:221:2:   walkExpr CALL_FUNCTION assigning to vars: [void:__t:733]
DEBUG VCcallingPipeline.swift:221:80:   Create tmp string:__t:734 to eval expr OPERATOR
DEBUG VCcallingPipeline.swift:221:80:   walkExpr OPERATOR assigning to vars: [string:__t:734]
DEBUG VCcallingPipeline.swift:221:67:   Create tmp string:__t:735 to eval expr OPERATOR
DEBUG VCcallingPipeline.swift:221:67:   walkExpr OPERATOR assigning to vars: [string:__t:735]
DEBUG VCcallingPipeline.swift:221:8:   Create tmp string:__t:736 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:221:8:   walkExpr STRING_LITERAL assigning to vars: [string:__t:736]
DEBUG VCcallingPipeline.swift:221:82:   Create tmp string:__t:737 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:221:82:   walkExpr STRING_LITERAL assigning to vars: [string:__t:737]
DEBUG VCcallingPipeline.swift:224:13:   assignment: 
DEBUG VCcallingPipeline.swift:225:16:   assignment: 
DEBUG VCcallingPipeline.swift:223:9:   walkExpr CALL_FUNCTION assigning to vars: [string[int]:chr_vcfList]
DEBUG VCcallingPipeline.swift:223:31:   Create tmp string:__t:738 to eval expr CALL_FUNCTION
DEBUG VCcallingPipeline.swift:223:31:   walkExpr CALL_FUNCTION assigning to vars: [string:__t:738]
DEBUG VCcallingPipeline.swift:223:36:   Create tmp string:__t:739 to eval expr CALL_FUNCTION
DEBUG VCcallingPipeline.swift:223:36:   walkExpr CALL_FUNCTION assigning to vars: [string:__t:739]
DEBUG VCcallingPipeline.swift:223:48:   Create tmp string:__t:740 to eval expr CALL_FUNCTION
DEBUG VCcallingPipeline.swift:223:48:   walkExpr CALL_FUNCTION assigning to vars: [string:__t:740]
DEBUG VCcallingPipeline.swift:223:53:   Create tmp file:__t:741 to eval expr CALL_FUNCTION
DEBUG VCcallingPipeline.swift:223:53:   walkExpr CALL_FUNCTION assigning to vars: [file:__t:741]
DEBUG VCcallingPipeline.swift:223:74:   Create tmp string:__t:742 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:223:74:   walkExpr STRING_LITERAL assigning to vars: [string:__t:742]
DEBUG VCcallingPipeline.swift:223:96:   Create tmp string:__t:743 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:223:96:   walkExpr STRING_LITERAL assigning to vars: [string:__t:743]
DEBUG VCcallingPipeline.swift:223:102:   Create tmp string:__t:744 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:223:102:   walkExpr STRING_LITERAL assigning to vars: [string:__t:744]
DEBUG VCcallingPipeline.swift:223:107:   Create tmp int:__t:745 to eval expr INT_LITERAL
DEBUG VCcallingPipeline.swift:223:107:   walkExpr INT_LITERAL assigning to vars: [int:__t:745]
DEBUG VCcallingPipeline.swift:223:112:   Create tmp string:__t:746 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:223:112:   walkExpr STRING_LITERAL assigning to vars: [string:__t:746]
DEBUG VCcallingPipeline.swift:224:13:   assignment: 
DEBUG VCcallingPipeline.swift:224:2:   walkExpr CALL_FUNCTION assigning to vars: [file:rawvariant]
DEBUG VCcallingPipeline.swift:224:29:   Create tmp string:__t:747 to eval expr ARRAY_LOAD
DEBUG VCcallingPipeline.swift:224:29:   walkExpr ARRAY_LOAD assigning to vars: [string:__t:747]
DEBUG VCcallingPipeline.swift:224:34:   Create tmp string:__t:748 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:224:34:   walkExpr STRING_LITERAL assigning to vars: [string:__t:748]
DEBUG VCcallingPipeline.swift:224:46:   Create tmp string:__t:749 to eval expr CALL_FUNCTION
DEBUG VCcallingPipeline.swift:224:46:   walkExpr CALL_FUNCTION assigning to vars: [string:__t:749]
DEBUG VCcallingPipeline.swift:224:68:   Create tmp string:__t:750 to eval expr OPERATOR
DEBUG VCcallingPipeline.swift:224:68:   walkExpr OPERATOR assigning to vars: [string:__t:750]
DEBUG VCcallingPipeline.swift:224:53:   Create tmp string:__t:751 to eval expr ARRAY_LOAD
DEBUG VCcallingPipeline.swift:224:53:   walkExpr ARRAY_LOAD assigning to vars: [string:__t:751]
DEBUG VCcallingPipeline.swift:224:58:   Create tmp string:__t:752 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:224:58:   walkExpr STRING_LITERAL assigning to vars: [string:__t:752]
DEBUG VCcallingPipeline.swift:224:69:   Create tmp string:__t:753 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:224:69:   walkExpr STRING_LITERAL assigning to vars: [string:__t:753]
DEBUG VCcallingPipeline.swift:224:114:   Create tmp string:__t:754 to eval expr OPERATOR
DEBUG VCcallingPipeline.swift:224:114:   walkExpr OPERATOR assigning to vars: [string:__t:754]
DEBUG VCcallingPipeline.swift:224:94:   Create tmp string:__t:755 to eval expr ARRAY_LOAD
DEBUG VCcallingPipeline.swift:224:94:   walkExpr ARRAY_LOAD assigning to vars: [string:__t:755]
DEBUG VCcallingPipeline.swift:224:99:   Create tmp string:__t:756 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:224:99:   walkExpr STRING_LITERAL assigning to vars: [string:__t:756]
DEBUG VCcallingPipeline.swift:224:115:   Create tmp string:__t:757 to eval expr ARRAY_LOAD
DEBUG VCcallingPipeline.swift:224:115:   walkExpr ARRAY_LOAD assigning to vars: [string:__t:757]
DEBUG VCcallingPipeline.swift:224:120:   Create tmp string:__t:758 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:224:120:   walkExpr STRING_LITERAL assigning to vars: [string:__t:758]
DEBUG VCcallingPipeline.swift:224:154:   Create tmp string:__t:759 to eval expr OPERATOR
DEBUG VCcallingPipeline.swift:224:154:   walkExpr OPERATOR assigning to vars: [string:__t:759]
DEBUG VCcallingPipeline.swift:224:134:   Create tmp string:__t:760 to eval expr ARRAY_LOAD
DEBUG VCcallingPipeline.swift:224:134:   walkExpr ARRAY_LOAD assigning to vars: [string:__t:760]
DEBUG VCcallingPipeline.swift:224:139:   Create tmp string:__t:761 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:224:139:   walkExpr STRING_LITERAL assigning to vars: [string:__t:761]
DEBUG VCcallingPipeline.swift:224:155:   Create tmp string:__t:762 to eval expr ARRAY_LOAD
DEBUG VCcallingPipeline.swift:224:155:   walkExpr ARRAY_LOAD assigning to vars: [string:__t:762]
DEBUG VCcallingPipeline.swift:224:160:   Create tmp string:__t:763 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:224:160:   walkExpr STRING_LITERAL assigning to vars: [string:__t:763]
DEBUG VCcallingPipeline.swift:225:16:   assignment: 
DEBUG VCcallingPipeline.swift:225:2:   walkExpr CALL_FUNCTION assigning to vars: [file:mergedvariant]
DEBUG VCcallingPipeline.swift:226:25:   Create tmp boolean:__t:764 to eval expr OPERATOR
DEBUG VCcallingPipeline.swift:226:25:   walkExpr OPERATOR assigning to vars: [boolean:__t:764]
DEBUG VCcallingPipeline.swift:226:7:   Create tmp int:__t:765 to eval expr CALL_FUNCTION
DEBUG VCcallingPipeline.swift:226:7:   walkExpr CALL_FUNCTION assigning to vars: [int:__t:765]
DEBUG VCcallingPipeline.swift:226:28:   Create tmp int:__t:766 to eval expr CALL_FUNCTION
DEBUG VCcallingPipeline.swift:226:28:   walkExpr CALL_FUNCTION assigning to vars: [int:__t:766]
DEBUG VCcallingPipeline.swift:226:33:   Create tmp file[int]:__t:767 to eval expr CALL_FUNCTION
DEBUG VCcallingPipeline.swift:226:33:   walkExpr CALL_FUNCTION assigning to vars: [file[int]:__t:767]
DEBUG VCcallingPipeline.swift:226:38:   Create tmp string:__t:768 to eval expr CALL_FUNCTION
DEBUG VCcallingPipeline.swift:226:38:   walkExpr CALL_FUNCTION assigning to vars: [string:__t:768]
DEBUG VCcallingPipeline.swift:226:62:   Create tmp string:__t:769 to eval expr OPERATOR
DEBUG VCcallingPipeline.swift:226:62:   walkExpr OPERATOR assigning to vars: [string:__t:769]
DEBUG VCcallingPipeline.swift:226:45:   Create tmp string:__t:770 to eval expr ARRAY_LOAD
DEBUG VCcallingPipeline.swift:226:45:   walkExpr ARRAY_LOAD assigning to vars: [string:__t:770]
DEBUG VCcallingPipeline.swift:226:50:   Create tmp string:__t:771 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:226:50:   walkExpr STRING_LITERAL assigning to vars: [string:__t:771]
DEBUG VCcallingPipeline.swift:226:63:   Create tmp string:__t:772 to eval expr ARRAY_LOAD
DEBUG VCcallingPipeline.swift:226:63:   walkExpr ARRAY_LOAD assigning to vars: [string:__t:772]
DEBUG VCcallingPipeline.swift:226:68:   Create tmp string:__t:773 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:226:68:   walkExpr STRING_LITERAL assigning to vars: [string:__t:773]
DEBUG VCcallingPipeline.swift:226:87:   Create tmp string:__t:774 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:226:87:   walkExpr STRING_LITERAL assigning to vars: [string:__t:774]
DEBUG VCcallingPipeline.swift:226:147:     assignment: 
DEBUG VCcallingPipeline.swift:226:123:     walkExpr INT_LITERAL assigning to vars: [int:samples_processing_done]
DEBUG VCcallingPipeline.swift:231:  walkExpr CALL_FUNCTION assigning to vars: [void:__t:775]
DEBUG VCcallingPipeline.swift:231:7:  Create tmp string:__t:776 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:231:7:  walkExpr STRING_LITERAL assigning to vars: [string:__t:776]
DEBUG VCcallingPipeline.swift:233:17:  Create tmp string:__t:777 to eval expr CALL_FUNCTION
DEBUG VCcallingPipeline.swift:233:17:  walkExpr CALL_FUNCTION assigning to vars: [string:__t:777]
DEBUG VCcallingPipeline.swift:233:41:  Create tmp string:__t:778 to eval expr OPERATOR
DEBUG VCcallingPipeline.swift:233:41:  walkExpr OPERATOR assigning to vars: [string:__t:778]
DEBUG VCcallingPipeline.swift:233:24:  Create tmp string:__t:779 to eval expr ARRAY_LOAD
DEBUG VCcallingPipeline.swift:233:24:  walkExpr ARRAY_LOAD assigning to vars: [string:__t:779]
DEBUG VCcallingPipeline.swift:233:29:  Create tmp string:__t:780 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:233:29:  walkExpr STRING_LITERAL assigning to vars: [string:__t:780]
DEBUG VCcallingPipeline.swift:233:42:  Create tmp string:__t:781 to eval expr ARRAY_LOAD
DEBUG VCcallingPipeline.swift:233:42:  walkExpr ARRAY_LOAD assigning to vars: [string:__t:781]
DEBUG VCcallingPipeline.swift:233:47:  Create tmp string:__t:782 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:233:47:  walkExpr STRING_LITERAL assigning to vars: [string:__t:782]
DEBUG VCcallingPipeline.swift:233:66:  Create tmp string:__t:783 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:233:66:  walkExpr STRING_LITERAL assigning to vars: [string:__t:783]
DEBUG VCcallingPipeline.swift:233:81:  Create tmp string:__t:784 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:233:81:  walkExpr STRING_LITERAL assigning to vars: [string:__t:784]
DEBUG VCcallingPipeline.swift:234:21:  Create tmp string:__t:785 to eval expr CALL_FUNCTION
DEBUG VCcallingPipeline.swift:234:21:  walkExpr CALL_FUNCTION assigning to vars: [string:__t:785]
DEBUG VCcallingPipeline.swift:234:28:  Create tmp string:__t:786 to eval expr ARRAY_LOAD
DEBUG VCcallingPipeline.swift:234:28:  walkExpr ARRAY_LOAD assigning to vars: [string:__t:786]
DEBUG VCcallingPipeline.swift:234:33:  Create tmp string:__t:787 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:234:33:  walkExpr STRING_LITERAL assigning to vars: [string:__t:787]
DEBUG VCcallingPipeline.swift:234:43:  Create tmp string:__t:788 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:234:43:  walkExpr STRING_LITERAL assigning to vars: [string:__t:788]
DEBUG VCcallingPipeline.swift:235:  walkExpr CALL_FUNCTION assigning to vars: [void:__t:789]
DEBUG VCcallingPipeline.swift:235:7:  Create tmp string:__t:790 to eval expr CALL_FUNCTION
DEBUG VCcallingPipeline.swift:235:7:  walkExpr CALL_FUNCTION assigning to vars: [string:__t:790]
DEBUG VCcallingPipeline.swift:235:31:  Create tmp string:__t:791 to eval expr OPERATOR
DEBUG VCcallingPipeline.swift:235:31:  walkExpr OPERATOR assigning to vars: [string:__t:791]
DEBUG VCcallingPipeline.swift:235:14:  Create tmp string:__t:792 to eval expr ARRAY_LOAD
DEBUG VCcallingPipeline.swift:235:14:  walkExpr ARRAY_LOAD assigning to vars: [string:__t:792]
DEBUG VCcallingPipeline.swift:235:19:  Create tmp string:__t:793 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:235:19:  walkExpr STRING_LITERAL assigning to vars: [string:__t:793]
DEBUG VCcallingPipeline.swift:235:32:  Create tmp string:__t:794 to eval expr ARRAY_LOAD
DEBUG VCcallingPipeline.swift:235:32:  walkExpr ARRAY_LOAD assigning to vars: [string:__t:794]
DEBUG VCcallingPipeline.swift:235:37:  Create tmp string:__t:795 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:235:37:  walkExpr STRING_LITERAL assigning to vars: [string:__t:795]
DEBUG VCcallingPipeline.swift:235:56:  Create tmp string:__t:796 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:235:56:  walkExpr STRING_LITERAL assigning to vars: [string:__t:796]
DEBUG VCcallingPipeline.swift:237:15:   assignment: 
DEBUG VCcallingPipeline.swift:239:11:   assignment: 
DEBUG VCcallingPipeline.swift:237:15:   assignment: 
DEBUG VCcallingPipeline.swift:237:2:   walkExpr CALL_FUNCTION assigning to vars: [file:variantFiles]
DEBUG VCcallingPipeline.swift:237:46:   Create tmp string:__t:797 to eval expr OPERATOR
DEBUG VCcallingPipeline.swift:237:46:   walkExpr OPERATOR assigning to vars: [string:__t:797]
DEBUG VCcallingPipeline.swift:237:29:   Create tmp string:__t:798 to eval expr ARRAY_LOAD
DEBUG VCcallingPipeline.swift:237:29:   walkExpr ARRAY_LOAD assigning to vars: [string:__t:798]
DEBUG VCcallingPipeline.swift:237:34:   Create tmp string:__t:799 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:237:34:   walkExpr STRING_LITERAL assigning to vars: [string:__t:799]
DEBUG VCcallingPipeline.swift:237:47:   Create tmp string:__t:800 to eval expr ARRAY_LOAD
DEBUG VCcallingPipeline.swift:237:47:   walkExpr ARRAY_LOAD assigning to vars: [string:__t:800]
DEBUG VCcallingPipeline.swift:237:52:   Create tmp string:__t:801 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:237:52:   walkExpr STRING_LITERAL assigning to vars: [string:__t:801]
DEBUG VCcallingPipeline.swift:237:71:   Create tmp string:__t:802 to eval expr CALL_FUNCTION
DEBUG VCcallingPipeline.swift:237:71:   walkExpr CALL_FUNCTION assigning to vars: [string:__t:802]
DEBUG VCcallingPipeline.swift:237:78:   Create tmp string:__t:803 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:237:78:   walkExpr STRING_LITERAL assigning to vars: [string:__t:803]
DEBUG VCcallingPipeline.swift:238:9:   walkExpr CALL_FUNCTION assigning to vars: [string[int]:varlist]
DEBUG VCcallingPipeline.swift:238:27:   Create tmp string:__t:804 to eval expr CALL_FUNCTION
DEBUG VCcallingPipeline.swift:238:27:   walkExpr CALL_FUNCTION assigning to vars: [string:__t:804]
DEBUG VCcallingPipeline.swift:238:32:   Create tmp string:__t:805 to eval expr CALL_FUNCTION
DEBUG VCcallingPipeline.swift:238:32:   walkExpr CALL_FUNCTION assigning to vars: [string:__t:805]
DEBUG VCcallingPipeline.swift:238:44:   Create tmp string:__t:806 to eval expr CALL_FUNCTION
DEBUG VCcallingPipeline.swift:238:44:   walkExpr CALL_FUNCTION assigning to vars: [string:__t:806]
DEBUG VCcallingPipeline.swift:238:49:   Create tmp file:__t:807 to eval expr CALL_FUNCTION
DEBUG VCcallingPipeline.swift:238:49:   walkExpr CALL_FUNCTION assigning to vars: [file:__t:807]
DEBUG VCcallingPipeline.swift:238:67:   Create tmp string:__t:808 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:238:67:   walkExpr STRING_LITERAL assigning to vars: [string:__t:808]
DEBUG VCcallingPipeline.swift:238:89:   Create tmp string:__t:809 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:238:89:   walkExpr STRING_LITERAL assigning to vars: [string:__t:809]
DEBUG VCcallingPipeline.swift:238:95:   Create tmp string:__t:810 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:238:95:   walkExpr STRING_LITERAL assigning to vars: [string:__t:810]
DEBUG VCcallingPipeline.swift:238:100:   Create tmp int:__t:811 to eval expr INT_LITERAL
DEBUG VCcallingPipeline.swift:238:100:   walkExpr INT_LITERAL assigning to vars: [int:__t:811]
DEBUG VCcallingPipeline.swift:238:105:   Create tmp string:__t:812 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:238:105:   walkExpr STRING_LITERAL assigning to vars: [string:__t:812]
DEBUG VCcallingPipeline.swift:239:11:   assignment: 
DEBUG VCcallingPipeline.swift:239:2:   walkExpr CALL_FUNCTION assigning to vars: [file:jointVCF]
DEBUG VCcallingPipeline.swift:239:28:   Create tmp string:__t:813 to eval expr ARRAY_LOAD
DEBUG VCcallingPipeline.swift:239:28:   walkExpr ARRAY_LOAD assigning to vars: [string:__t:813]
DEBUG VCcallingPipeline.swift:239:33:   Create tmp string:__t:814 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:239:33:   walkExpr STRING_LITERAL assigning to vars: [string:__t:814]
DEBUG VCcallingPipeline.swift:239:45:   Create tmp string:__t:815 to eval expr CALL_FUNCTION
DEBUG VCcallingPipeline.swift:239:45:   walkExpr CALL_FUNCTION assigning to vars: [string:__t:815]
DEBUG VCcallingPipeline.swift:239:67:   Create tmp string:__t:816 to eval expr OPERATOR
DEBUG VCcallingPipeline.swift:239:67:   walkExpr OPERATOR assigning to vars: [string:__t:816]
DEBUG VCcallingPipeline.swift:239:52:   Create tmp string:__t:817 to eval expr ARRAY_LOAD
DEBUG VCcallingPipeline.swift:239:52:   walkExpr ARRAY_LOAD assigning to vars: [string:__t:817]
DEBUG VCcallingPipeline.swift:239:57:   Create tmp string:__t:818 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:239:57:   walkExpr STRING_LITERAL assigning to vars: [string:__t:818]
DEBUG VCcallingPipeline.swift:239:68:   Create tmp string:__t:819 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:239:68:   walkExpr STRING_LITERAL assigning to vars: [string:__t:819]
DEBUG VCcallingPipeline.swift:239:113:   Create tmp string:__t:820 to eval expr OPERATOR
DEBUG VCcallingPipeline.swift:239:113:   walkExpr OPERATOR assigning to vars: [string:__t:820]
DEBUG VCcallingPipeline.swift:239:93:   Create tmp string:__t:821 to eval expr ARRAY_LOAD
DEBUG VCcallingPipeline.swift:239:93:   walkExpr ARRAY_LOAD assigning to vars: [string:__t:821]
DEBUG VCcallingPipeline.swift:239:98:   Create tmp string:__t:822 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:239:98:   walkExpr STRING_LITERAL assigning to vars: [string:__t:822]
DEBUG VCcallingPipeline.swift:239:114:   Create tmp string:__t:823 to eval expr ARRAY_LOAD
DEBUG VCcallingPipeline.swift:239:114:   walkExpr ARRAY_LOAD assigning to vars: [string:__t:823]
DEBUG VCcallingPipeline.swift:239:119:   Create tmp string:__t:824 to eval expr STRING_LITERAL
DEBUG VCcallingPipeline.swift:239:119:   walkExpr STRING_LITERAL assigning to vars: [string:__t:824]
DEBUG VCcallingPipeline.swift:241: Finishing moduleVCcallingPipeline for pass COMPILE_TOPLEVEL
DEBUG VCcallingPipeline.swift:241: Entered module builtins on pass COMPILE_FUNCTIONS
DEBUG builtins.swift:122:9: compile function: starting: toint
DEBUG builtins.swift:122:9: analyzer: starting: toint
DEBUG builtins.swift:122:9: analyzer: done: toint
DEBUG builtins.swift:123:5:  assignment: 
DEBUG builtins.swift:123:3:  walkExpr CALL_FUNCTION assigning to vars: [int:o]
DEBUG builtins.swift:123:19:  Create tmp int:__t:1 to eval expr INT_LITERAL
DEBUG builtins.swift:123:19:  walkExpr INT_LITERAL assigning to vars: [int:__t:1]
DEBUG builtins.swift:122:9: compile function: done: toint
DEBUG builtins.swift:257: Finishing modulebuiltins for pass COMPILE_FUNCTIONS
DEBUG builtins.swift:257: Entered module VCcallingPipeline on pass COMPILE_FUNCTIONS
DEBUG VCcallingPipeline.swift:241: Finishing moduleVCcallingPipeline for pass COMPILE_FUNCTIONS
DEBUG VCcallingPipeline.swift:241: Entered module sys on pass COMPILE_FUNCTIONS
DEBUG sys.swift:76: Finishing modulesys for pass COMPILE_FUNCTIONS
DEBUG sys.swift:76: Entered module files on pass COMPILE_FUNCTIONS
DEBUG files.swift:81: Finishing modulefiles for pass COMPILE_FUNCTIONS
DEBUG files.swift:81: Entered module string on pass COMPILE_FUNCTIONS
DEBUG string.swift:72:12: compile function: starting: replaceAll
DEBUG string.swift:72:12: analyzer: starting: replaceAll
DEBUG string.swift:72:12: analyzer: done: replaceAll
DEBUG string.swift:73:5:  assignment: 
DEBUG string.swift:73:3:  walkExpr CALL_FUNCTION assigning to vars: [string:o]
DEBUG string.swift:73:44:  Create tmp int:__t:1 to eval expr INT_LITERAL
DEBUG string.swift:73:44:  walkExpr INT_LITERAL assigning to vars: [int:__t:1]
DEBUG string.swift:73:47:  Create tmp int:__t:2 to eval expr CALL_FUNCTION
DEBUG string.swift:73:47:  walkExpr CALL_FUNCTION assigning to vars: [int:__t:2]
DEBUG string.swift:72:12: compile function: done: replaceAll
DEBUG string.swift:78:12: compile function: starting: replace_all
DEBUG string.swift:78:12: analyzer: starting: replace_all
DEBUG string.swift:78:12: analyzer: done: replace_all
DEBUG string.swift:79:5:  assignment: 
DEBUG string.swift:79:3:  walkExpr CALL_FUNCTION assigning to vars: [string:o]
DEBUG string.swift:79:57:  Create tmp int:__t:1 to eval expr CALL_FUNCTION
DEBUG string.swift:79:57:  walkExpr CALL_FUNCTION assigning to vars: [int:__t:1]
DEBUG string.swift:78:12: compile function: done: replace_all
DEBUG string.swift:93:12: compile function: starting: string_from_floats
DEBUG string.swift:93:12: analyzer: starting: string_from_floats
DEBUG string.swift:93:12: analyzer: done: string_from_floats
DEBUG string.swift:95:5:  assignment: 
DEBUG string.swift:95:3:  walkExpr CALL_FUNCTION assigning to vars: [string:s]
DEBUG string.swift:95:19:  Create tmp string[int]:__t:1 to eval expr CALL_FUNCTION
DEBUG string.swift:95:19:  walkExpr CALL_FUNCTION assigning to vars: [string[int]:__t:1]
DEBUG string.swift:95:34:  Create tmp string:__t:2 to eval expr STRING_LITERAL
DEBUG string.swift:95:34:  walkExpr STRING_LITERAL assigning to vars: [string:__t:2]
DEBUG string.swift:93:12: compile function: done: string_from_floats
DEBUG string.swift:117: Finishing modulestring for pass COMPILE_FUNCTIONS
DEBUG string.swift:117: Entered module unix on pass COMPILE_FUNCTIONS
INFO  compileAppFunction
DEBUG unix.swift:24:3:  Create tmp string:__t:1 to eval expr STRING_LITERAL
DEBUG unix.swift:24:3:  walkExpr STRING_LITERAL assigning to vars: [string:__t:1]
INFO  compileAppFunction
DEBUG unix.swift:30:3:  Create tmp string:__t:1 to eval expr STRING_LITERAL
DEBUG unix.swift:30:3:  walkExpr STRING_LITERAL assigning to vars: [string:__t:1]
INFO  compileAppFunction
DEBUG unix.swift:35:3:  Create tmp string:__t:1 to eval expr STRING_LITERAL
DEBUG unix.swift:35:3:  walkExpr STRING_LITERAL assigning to vars: [string:__t:1]
INFO  compileAppFunction
DEBUG unix.swift:40:3:  Create tmp string:__t:1 to eval expr STRING_LITERAL
DEBUG unix.swift:40:3:  walkExpr STRING_LITERAL assigning to vars: [string:__t:1]
INFO  compileAppFunction
DEBUG unix.swift:45:3:  Create tmp string:__t:1 to eval expr STRING_LITERAL
DEBUG unix.swift:45:3:  walkExpr STRING_LITERAL assigning to vars: [string:__t:1]
INFO  compileAppFunction
DEBUG unix.swift:50:3:  Create tmp string:__t:1 to eval expr STRING_LITERAL
DEBUG unix.swift:50:3:  walkExpr STRING_LITERAL assigning to vars: [string:__t:1]
INFO  compileAppFunction
DEBUG unix.swift:55:3:  Create tmp string:__t:1 to eval expr STRING_LITERAL
DEBUG unix.swift:55:3:  walkExpr STRING_LITERAL assigning to vars: [string:__t:1]
INFO  compileAppFunction
DEBUG unix.swift:60:3:  Create tmp string:__t:1 to eval expr STRING_LITERAL
DEBUG unix.swift:60:3:  walkExpr STRING_LITERAL assigning to vars: [string:__t:1]
INFO  compileAppFunction
DEBUG unix.swift:65:3:  Create tmp string:__t:1 to eval expr STRING_LITERAL
DEBUG unix.swift:65:3:  walkExpr STRING_LITERAL assigning to vars: [string:__t:1]
DEBUG unix.swift:65:11:  Create tmp string:__t:2 to eval expr STRING_LITERAL
DEBUG unix.swift:65:11:  walkExpr STRING_LITERAL assigning to vars: [string:__t:2]
DEBUG unix.swift:69: Finishing moduleunix for pass COMPILE_FUNCTIONS
DEBUG unix.swift:69: Entered module assert on pass COMPILE_FUNCTIONS
DEBUG assert.swift:42: Finishing moduleassert for pass COMPILE_FUNCTIONS
DEBUG assert.swift:42: Entered module pipelinefunctions.align_dedup on pass COMPILE_FUNCTIONS
INFO  compileAppFunction
DEBUG align_dedup.swift:4:9:  Create tmp string:__t:1 to eval expr STRING_LITERAL
DEBUG align_dedup.swift:4:9:  walkExpr STRING_LITERAL assigning to vars: [string:__t:1]
DEBUG align_dedup.swift:4:15:  Create tmp string:__t:2 to eval expr STRING_LITERAL
DEBUG align_dedup.swift:4:15:  walkExpr STRING_LITERAL assigning to vars: [string:__t:2]
DEBUG align_dedup.swift:4:33:  Create tmp string:__t:3 to eval expr STRING_LITERAL
DEBUG align_dedup.swift:4:33:  walkExpr STRING_LITERAL assigning to vars: [string:__t:3]
DEBUG align_dedup.swift:4:47:  Create tmp string:__t:4 to eval expr STRING_LITERAL
DEBUG align_dedup.swift:4:47:  walkExpr STRING_LITERAL assigning to vars: [string:__t:4]
INFO  compileAppFunction
DEBUG align_dedup.swift:9:15:  Create tmp string:__t:1 to eval expr STRING_LITERAL
DEBUG align_dedup.swift:9:15:  walkExpr STRING_LITERAL assigning to vars: [string:__t:1]
DEBUG align_dedup.swift:9:29:  Create tmp string:__t:2 to eval expr STRING_LITERAL
DEBUG align_dedup.swift:9:29:  walkExpr STRING_LITERAL assigning to vars: [string:__t:2]
DEBUG align_dedup.swift:9:40:  Create tmp string:__t:3 to eval expr STRING_LITERAL
DEBUG align_dedup.swift:9:40:  walkExpr STRING_LITERAL assigning to vars: [string:__t:3]
DEBUG align_dedup.swift:9:57:  Create tmp string:__t:4 to eval expr STRING_LITERAL
DEBUG align_dedup.swift:9:57:  walkExpr STRING_LITERAL assigning to vars: [string:__t:4]
DEBUG align_dedup.swift:9:62:  Create tmp string:__t:5 to eval expr STRING_LITERAL
DEBUG align_dedup.swift:9:62:  walkExpr STRING_LITERAL assigning to vars: [string:__t:5]
INFO  compileAppFunction
DEBUG align_dedup.swift:15:14:  Create tmp string:__t:1 to eval expr STRING_LITERAL
DEBUG align_dedup.swift:15:14:  walkExpr STRING_LITERAL assigning to vars: [string:__t:1]
DEBUG align_dedup.swift:15:21:  Create tmp string:__t:2 to eval expr STRING_LITERAL
DEBUG align_dedup.swift:15:21:  walkExpr STRING_LITERAL assigning to vars: [string:__t:2]
DEBUG align_dedup.swift:15:30:  Create tmp string:__t:3 to eval expr STRING_LITERAL
DEBUG align_dedup.swift:15:30:  walkExpr STRING_LITERAL assigning to vars: [string:__t:3]
INFO  compileAppFunction
DEBUG align_dedup.swift:27:16:  Create tmp string:__t:1 to eval expr STRING_LITERAL
DEBUG align_dedup.swift:27:16:  walkExpr STRING_LITERAL assigning to vars: [string:__t:1]
DEBUG align_dedup.swift:27:21:  Create tmp string:__t:2 to eval expr STRING_LITERAL
DEBUG align_dedup.swift:27:21:  walkExpr STRING_LITERAL assigning to vars: [string:__t:2]
INFO  compileAppFunction
DEBUG align_dedup.swift:33:14:  Create tmp string:__t:1 to eval expr STRING_LITERAL
DEBUG align_dedup.swift:33:14:  walkExpr STRING_LITERAL assigning to vars: [string:__t:1]
DEBUG align_dedup.swift:33:24:  Create tmp string:__t:2 to eval expr STRING_LITERAL
DEBUG align_dedup.swift:33:24:  walkExpr STRING_LITERAL assigning to vars: [string:__t:2]
DEBUG align_dedup.swift:33:42:  Create tmp string:__t:3 to eval expr STRING_LITERAL
DEBUG align_dedup.swift:33:42:  walkExpr STRING_LITERAL assigning to vars: [string:__t:3]
DEBUG align_dedup.swift:33:68:  Create tmp string:__t:4 to eval expr STRING_LITERAL
DEBUG align_dedup.swift:33:68:  walkExpr STRING_LITERAL assigning to vars: [string:__t:4]
INFO  compileAppFunction
DEBUG align_dedup.swift:40:14:  Create tmp string:__t:1 to eval expr STRING_LITERAL
DEBUG align_dedup.swift:40:14:  walkExpr STRING_LITERAL assigning to vars: [string:__t:1]
DEBUG align_dedup.swift:40:24:  Create tmp string:__t:2 to eval expr STRING_LITERAL
DEBUG align_dedup.swift:40:24:  walkExpr STRING_LITERAL assigning to vars: [string:__t:2]
DEBUG align_dedup.swift:40:42:  Create tmp string:__t:3 to eval expr STRING_LITERAL
DEBUG align_dedup.swift:40:42:  walkExpr STRING_LITERAL assigning to vars: [string:__t:3]
DEBUG align_dedup.swift:40:68:  Create tmp string:__t:4 to eval expr STRING_LITERAL
DEBUG align_dedup.swift:40:68:  walkExpr STRING_LITERAL assigning to vars: [string:__t:4]
INFO  compileAppFunction
DEBUG align_dedup.swift:45:17:  Create tmp string:__t:1 to eval expr STRING_LITERAL
DEBUG align_dedup.swift:45:17:  walkExpr STRING_LITERAL assigning to vars: [string:__t:1]
DEBUG align_dedup.swift:45:26:  Create tmp string:__t:2 to eval expr STRING_LITERAL
DEBUG align_dedup.swift:45:26:  walkExpr STRING_LITERAL assigning to vars: [string:__t:2]
DEBUG align_dedup.swift:45:43:  Create tmp string:__t:3 to eval expr STRING_LITERAL
DEBUG align_dedup.swift:45:43:  walkExpr STRING_LITERAL assigning to vars: [string:__t:3]
DEBUG align_dedup.swift:45:60:  Create tmp string:__t:4 to eval expr STRING_LITERAL
DEBUG align_dedup.swift:45:60:  walkExpr STRING_LITERAL assigning to vars: [string:__t:4]
DEBUG align_dedup.swift:45:79:  Create tmp string:__t:5 to eval expr STRING_LITERAL
DEBUG align_dedup.swift:45:79:  walkExpr STRING_LITERAL assigning to vars: [string:__t:5]
DEBUG align_dedup.swift:45:100:  Create tmp string:__t:6 to eval expr STRING_LITERAL
DEBUG align_dedup.swift:45:100:  walkExpr STRING_LITERAL assigning to vars: [string:__t:6]
DEBUG align_dedup.swift:45:128:  Create tmp string:__t:7 to eval expr STRING_LITERAL
DEBUG align_dedup.swift:45:128:  walkExpr STRING_LITERAL assigning to vars: [string:__t:7]
DEBUG align_dedup.swift:45:146:  Create tmp string:__t:8 to eval expr STRING_LITERAL
DEBUG align_dedup.swift:45:146:  walkExpr STRING_LITERAL assigning to vars: [string:__t:8]
INFO  compileAppFunction
DEBUG align_dedup.swift:51:14:  Create tmp string:__t:1 to eval expr STRING_LITERAL
DEBUG align_dedup.swift:51:14:  walkExpr STRING_LITERAL assigning to vars: [string:__t:1]
DEBUG align_dedup.swift:54: Finishing modulepipelinefunctions.align_dedup for pass COMPILE_FUNCTIONS
DEBUG align_dedup.swift:54: Entered module pipelinefunctions.realign_varcall_by_chr on pass COMPILE_FUNCTIONS
INFO  compileAppFunction
DEBUG realign_varcall_by_chr.swift:2:2:  Create tmp string:__t:1 to eval expr STRING_LITERAL
DEBUG realign_varcall_by_chr.swift:2:2:  walkExpr STRING_LITERAL assigning to vars: [string:__t:1]
DEBUG realign_varcall_by_chr.swift:2:22:  Create tmp string:__t:2 to eval expr STRING_LITERAL
DEBUG realign_varcall_by_chr.swift:2:22:  walkExpr STRING_LITERAL assigning to vars: [string:__t:2]
INFO  compileAppFunction
DEBUG realign_varcall_by_chr.swift:7:14:  Create tmp string:__t:1 to eval expr STRING_LITERAL
DEBUG realign_varcall_by_chr.swift:7:14:  walkExpr STRING_LITERAL assigning to vars: [string:__t:1]
INFO  compileAppFunction
DEBUG realign_varcall_by_chr.swift:12:17:  Create tmp string:__t:1 to eval expr STRING_LITERAL
DEBUG realign_varcall_by_chr.swift:12:17:  walkExpr STRING_LITERAL assigning to vars: [string:__t:1]
DEBUG realign_varcall_by_chr.swift:12:26:  Create tmp string:__t:2 to eval expr STRING_LITERAL
DEBUG realign_varcall_by_chr.swift:12:26:  walkExpr STRING_LITERAL assigning to vars: [string:__t:2]
DEBUG realign_varcall_by_chr.swift:12:41:  Create tmp string:__t:3 to eval expr STRING_LITERAL
DEBUG realign_varcall_by_chr.swift:12:41:  walkExpr STRING_LITERAL assigning to vars: [string:__t:3]
DEBUG realign_varcall_by_chr.swift:12:46:  Create tmp string:__t:4 to eval expr STRING_LITERAL
DEBUG realign_varcall_by_chr.swift:12:46:  walkExpr STRING_LITERAL assigning to vars: [string:__t:4]
DEBUG realign_varcall_by_chr.swift:12:71:  Create tmp string:__t:5 to eval expr STRING_LITERAL
DEBUG realign_varcall_by_chr.swift:12:71:  walkExpr STRING_LITERAL assigning to vars: [string:__t:5]
DEBUG realign_varcall_by_chr.swift:12:86:  Create tmp string:__t:6 to eval expr STRING_LITERAL
DEBUG realign_varcall_by_chr.swift:12:86:  walkExpr STRING_LITERAL assigning to vars: [string:__t:6]
DEBUG realign_varcall_by_chr.swift:12:107:  Create tmp string:__t:7 to eval expr STRING_LITERAL
DEBUG realign_varcall_by_chr.swift:12:107:  walkExpr STRING_LITERAL assigning to vars: [string:__t:7]
DEBUG realign_varcall_by_chr.swift:12:117:  Create tmp string:__t:8 to eval expr STRING_LITERAL
DEBUG realign_varcall_by_chr.swift:12:117:  walkExpr STRING_LITERAL assigning to vars: [string:__t:8]
INFO  compileAppFunction
DEBUG realign_varcall_by_chr.swift:17:17:  Create tmp string:__t:1 to eval expr STRING_LITERAL
DEBUG realign_varcall_by_chr.swift:17:17:  walkExpr STRING_LITERAL assigning to vars: [string:__t:1]
DEBUG realign_varcall_by_chr.swift:17:26:  Create tmp string:__t:2 to eval expr STRING_LITERAL
DEBUG realign_varcall_by_chr.swift:17:26:  walkExpr STRING_LITERAL assigning to vars: [string:__t:2]
DEBUG realign_varcall_by_chr.swift:17:41:  Create tmp string:__t:3 to eval expr STRING_LITERAL
DEBUG realign_varcall_by_chr.swift:17:41:  walkExpr STRING_LITERAL assigning to vars: [string:__t:3]
DEBUG realign_varcall_by_chr.swift:17:46:  Create tmp string:__t:4 to eval expr STRING_LITERAL
DEBUG realign_varcall_by_chr.swift:17:46:  walkExpr STRING_LITERAL assigning to vars: [string:__t:4]
DEBUG realign_varcall_by_chr.swift:17:63:  Create tmp string:__t:5 to eval expr STRING_LITERAL
DEBUG realign_varcall_by_chr.swift:17:63:  walkExpr STRING_LITERAL assigning to vars: [string:__t:5]
DEBUG realign_varcall_by_chr.swift:17:78:  Create tmp string:__t:6 to eval expr STRING_LITERAL
DEBUG realign_varcall_by_chr.swift:17:78:  walkExpr STRING_LITERAL assigning to vars: [string:__t:6]
DEBUG realign_varcall_by_chr.swift:17:99:  Create tmp string:__t:7 to eval expr STRING_LITERAL
DEBUG realign_varcall_by_chr.swift:17:99:  walkExpr STRING_LITERAL assigning to vars: [string:__t:7]
DEBUG realign_varcall_by_chr.swift:17:129:  Create tmp string:__t:8 to eval expr STRING_LITERAL
DEBUG realign_varcall_by_chr.swift:17:129:  walkExpr STRING_LITERAL assigning to vars: [string:__t:8]
INFO  compileAppFunction
DEBUG realign_varcall_by_chr.swift:22:17:  Create tmp string:__t:1 to eval expr STRING_LITERAL
DEBUG realign_varcall_by_chr.swift:22:17:  walkExpr STRING_LITERAL assigning to vars: [string:__t:1]
DEBUG realign_varcall_by_chr.swift:22:27:  Create tmp string:__t:2 to eval expr STRING_LITERAL
DEBUG realign_varcall_by_chr.swift:22:27:  walkExpr STRING_LITERAL assigning to vars: [string:__t:2]
DEBUG realign_varcall_by_chr.swift:22:42:  Create tmp string:__t:3 to eval expr STRING_LITERAL
DEBUG realign_varcall_by_chr.swift:22:42:  walkExpr STRING_LITERAL assigning to vars: [string:__t:3]
DEBUG realign_varcall_by_chr.swift:22:47:  Create tmp string:__t:4 to eval expr STRING_LITERAL
DEBUG realign_varcall_by_chr.swift:22:47:  walkExpr STRING_LITERAL assigning to vars: [string:__t:4]
DEBUG realign_varcall_by_chr.swift:22:66:  Create tmp string:__t:5 to eval expr STRING_LITERAL
DEBUG realign_varcall_by_chr.swift:22:66:  walkExpr STRING_LITERAL assigning to vars: [string:__t:5]
DEBUG realign_varcall_by_chr.swift:22:81:  Create tmp string:__t:6 to eval expr STRING_LITERAL
DEBUG realign_varcall_by_chr.swift:22:81:  walkExpr STRING_LITERAL assigning to vars: [string:__t:6]
DEBUG realign_varcall_by_chr.swift:22:96:  Create tmp string:__t:7 to eval expr STRING_LITERAL
DEBUG realign_varcall_by_chr.swift:22:96:  walkExpr STRING_LITERAL assigning to vars: [string:__t:7]
DEBUG realign_varcall_by_chr.swift:22:128:  Create tmp string:__t:8 to eval expr STRING_LITERAL
DEBUG realign_varcall_by_chr.swift:22:128:  walkExpr STRING_LITERAL assigning to vars: [string:__t:8]
DEBUG realign_varcall_by_chr.swift:22:139:  Create tmp string:__t:9 to eval expr STRING_LITERAL
DEBUG realign_varcall_by_chr.swift:22:139:  walkExpr STRING_LITERAL assigning to vars: [string:__t:9]
INFO  compileAppFunction
DEBUG realign_varcall_by_chr.swift:27:17:  Create tmp string:__t:1 to eval expr STRING_LITERAL
DEBUG realign_varcall_by_chr.swift:27:17:  walkExpr STRING_LITERAL assigning to vars: [string:__t:1]
DEBUG realign_varcall_by_chr.swift:27:27:  Create tmp string:__t:2 to eval expr STRING_LITERAL
DEBUG realign_varcall_by_chr.swift:27:27:  walkExpr STRING_LITERAL assigning to vars: [string:__t:2]
DEBUG realign_varcall_by_chr.swift:27:42:  Create tmp string:__t:3 to eval expr STRING_LITERAL
DEBUG realign_varcall_by_chr.swift:27:42:  walkExpr STRING_LITERAL assigning to vars: [string:__t:3]
DEBUG realign_varcall_by_chr.swift:27:47:  Create tmp string:__t:4 to eval expr STRING_LITERAL
DEBUG realign_varcall_by_chr.swift:27:47:  walkExpr STRING_LITERAL assigning to vars: [string:__t:4]
DEBUG realign_varcall_by_chr.swift:27:60:  Create tmp string:__t:5 to eval expr STRING_LITERAL
DEBUG realign_varcall_by_chr.swift:27:60:  walkExpr STRING_LITERAL assigning to vars: [string:__t:5]
DEBUG realign_varcall_by_chr.swift:27:75:  Create tmp string:__t:6 to eval expr STRING_LITERAL
DEBUG realign_varcall_by_chr.swift:27:75:  walkExpr STRING_LITERAL assigning to vars: [string:__t:6]
DEBUG realign_varcall_by_chr.swift:27:90:  Create tmp string:__t:7 to eval expr STRING_LITERAL
DEBUG realign_varcall_by_chr.swift:27:90:  walkExpr STRING_LITERAL assigning to vars: [string:__t:7]
DEBUG realign_varcall_by_chr.swift:27:111:  Create tmp string:__t:8 to eval expr STRING_LITERAL
DEBUG realign_varcall_by_chr.swift:27:111:  walkExpr STRING_LITERAL assigning to vars: [string:__t:8]
DEBUG realign_varcall_by_chr.swift:27:122:  Create tmp string:__t:9 to eval expr STRING_LITERAL
DEBUG realign_varcall_by_chr.swift:27:122:  walkExpr STRING_LITERAL assigning to vars: [string:__t:9]
INFO  compileAppFunction
DEBUG realign_varcall_by_chr.swift:32:17:  Create tmp string:__t:1 to eval expr STRING_LITERAL
DEBUG realign_varcall_by_chr.swift:32:17:  walkExpr STRING_LITERAL assigning to vars: [string:__t:1]
DEBUG realign_varcall_by_chr.swift:32:26:  Create tmp string:__t:2 to eval expr STRING_LITERAL
DEBUG realign_varcall_by_chr.swift:32:26:  walkExpr STRING_LITERAL assigning to vars: [string:__t:2]
DEBUG realign_varcall_by_chr.swift:32:41:  Create tmp string:__t:3 to eval expr STRING_LITERAL
DEBUG realign_varcall_by_chr.swift:32:41:  walkExpr STRING_LITERAL assigning to vars: [string:__t:3]
DEBUG realign_varcall_by_chr.swift:32:46:  Create tmp string:__t:4 to eval expr STRING_LITERAL
DEBUG realign_varcall_by_chr.swift:32:46:  walkExpr STRING_LITERAL assigning to vars: [string:__t:4]
DEBUG realign_varcall_by_chr.swift:32:64:  Create tmp string:__t:5 to eval expr STRING_LITERAL
DEBUG realign_varcall_by_chr.swift:32:64:  walkExpr STRING_LITERAL assigning to vars: [string:__t:5]
DEBUG realign_varcall_by_chr.swift:32:79:  Create tmp string:__t:6 to eval expr STRING_LITERAL
DEBUG realign_varcall_by_chr.swift:32:79:  walkExpr STRING_LITERAL assigning to vars: [string:__t:6]
DEBUG realign_varcall_by_chr.swift:32:94:  Create tmp string:__t:7 to eval expr STRING_LITERAL
DEBUG realign_varcall_by_chr.swift:32:94:  walkExpr STRING_LITERAL assigning to vars: [string:__t:7]
DEBUG realign_varcall_by_chr.swift:32:111:  Create tmp string:__t:8 to eval expr STRING_LITERAL
DEBUG realign_varcall_by_chr.swift:32:111:  walkExpr STRING_LITERAL assigning to vars: [string:__t:8]
DEBUG realign_varcall_by_chr.swift:32:127:  Create tmp string:__t:9 to eval expr STRING_LITERAL
DEBUG realign_varcall_by_chr.swift:32:127:  walkExpr STRING_LITERAL assigning to vars: [string:__t:9]
DEBUG realign_varcall_by_chr.swift:32:149:  Create tmp string:__t:10 to eval expr STRING_LITERAL
DEBUG realign_varcall_by_chr.swift:32:149:  walkExpr STRING_LITERAL assigning to vars: [string:__t:10]
DEBUG realign_varcall_by_chr.swift:32:156:  Create tmp string:__t:11 to eval expr STRING_LITERAL
DEBUG realign_varcall_by_chr.swift:32:156:  walkExpr STRING_LITERAL assigning to vars: [string:__t:11]
DEBUG realign_varcall_by_chr.swift:32:167:  Create tmp string:__t:12 to eval expr STRING_LITERAL
DEBUG realign_varcall_by_chr.swift:32:167:  walkExpr STRING_LITERAL assigning to vars: [string:__t:12]
DEBUG realign_varcall_by_chr.swift:32:179:  Create tmp string:__t:13 to eval expr STRING_LITERAL
DEBUG realign_varcall_by_chr.swift:32:179:  walkExpr STRING_LITERAL assigning to vars: [string:__t:13]
DEBUG realign_varcall_by_chr.swift:32:184:  Create tmp string:__t:14 to eval expr STRING_LITERAL
DEBUG realign_varcall_by_chr.swift:32:184:  walkExpr STRING_LITERAL assigning to vars: [string:__t:14]
DEBUG realign_varcall_by_chr.swift:32:195:  Create tmp string:__t:15 to eval expr STRING_LITERAL
DEBUG realign_varcall_by_chr.swift:32:195:  walkExpr STRING_LITERAL assigning to vars: [string:__t:15]
DEBUG realign_varcall_by_chr.swift:32:200:  Create tmp string:__t:16 to eval expr STRING_LITERAL
DEBUG realign_varcall_by_chr.swift:32:200:  walkExpr STRING_LITERAL assigning to vars: [string:__t:16]
DEBUG realign_varcall_by_chr.swift:32:215:  Create tmp string:__t:17 to eval expr STRING_LITERAL
DEBUG realign_varcall_by_chr.swift:32:215:  walkExpr STRING_LITERAL assigning to vars: [string:__t:17]
DEBUG realign_varcall_by_chr.swift:32:220:  Create tmp string:__t:18 to eval expr STRING_LITERAL
DEBUG realign_varcall_by_chr.swift:32:220:  walkExpr STRING_LITERAL assigning to vars: [string:__t:18]
DEBUG realign_varcall_by_chr.swift:32:238:  Create tmp string:__t:19 to eval expr STRING_LITERAL
DEBUG realign_varcall_by_chr.swift:32:238:  walkExpr STRING_LITERAL assigning to vars: [string:__t:19]
DEBUG realign_varcall_by_chr.swift:32:243:  Create tmp string:__t:20 to eval expr STRING_LITERAL
DEBUG realign_varcall_by_chr.swift:32:243:  walkExpr STRING_LITERAL assigning to vars: [string:__t:20]
DEBUG realign_varcall_by_chr.swift:32:260:  Create tmp string:__t:21 to eval expr STRING_LITERAL
DEBUG realign_varcall_by_chr.swift:32:260:  walkExpr STRING_LITERAL assigning to vars: [string:__t:21]
DEBUG realign_varcall_by_chr.swift:32:265:  Create tmp string:__t:22 to eval expr STRING_LITERAL
DEBUG realign_varcall_by_chr.swift:32:265:  walkExpr STRING_LITERAL assigning to vars: [string:__t:22]
DEBUG realign_varcall_by_chr.swift:32:293:  Create tmp string:__t:23 to eval expr STRING_LITERAL
DEBUG realign_varcall_by_chr.swift:32:293:  walkExpr STRING_LITERAL assigning to vars: [string:__t:23]
DEBUG realign_varcall_by_chr.swift:32:298:  Create tmp string:__t:24 to eval expr STRING_LITERAL
DEBUG realign_varcall_by_chr.swift:32:298:  walkExpr STRING_LITERAL assigning to vars: [string:__t:24]
DEBUG realign_varcall_by_chr.swift:32:312:  Create tmp string:__t:25 to eval expr STRING_LITERAL
DEBUG realign_varcall_by_chr.swift:32:312:  walkExpr STRING_LITERAL assigning to vars: [string:__t:25]
DEBUG realign_varcall_by_chr.swift:32:317:  Create tmp string:__t:26 to eval expr STRING_LITERAL
DEBUG realign_varcall_by_chr.swift:32:317:  walkExpr STRING_LITERAL assigning to vars: [string:__t:26]
DEBUG realign_varcall_by_chr.swift:32:337:  Create tmp string:__t:27 to eval expr STRING_LITERAL
DEBUG realign_varcall_by_chr.swift:32:337:  walkExpr STRING_LITERAL assigning to vars: [string:__t:27]
DEBUG realign_varcall_by_chr.swift:32:342:  Create tmp string:__t:28 to eval expr STRING_LITERAL
DEBUG realign_varcall_by_chr.swift:32:342:  walkExpr STRING_LITERAL assigning to vars: [string:__t:28]
DEBUG realign_varcall_by_chr.swift:32:363:  Create tmp string:__t:29 to eval expr STRING_LITERAL
DEBUG realign_varcall_by_chr.swift:32:363:  walkExpr STRING_LITERAL assigning to vars: [string:__t:29]
DEBUG realign_varcall_by_chr.swift:32:382:  Create tmp int:__t:30 to eval expr INT_LITERAL
DEBUG realign_varcall_by_chr.swift:32:382:  walkExpr INT_LITERAL assigning to vars: [int:__t:30]
DEBUG realign_varcall_by_chr.swift:32:385:  Create tmp string:__t:31 to eval expr STRING_LITERAL
DEBUG realign_varcall_by_chr.swift:32:385:  walkExpr STRING_LITERAL assigning to vars: [string:__t:31]
DEBUG realign_varcall_by_chr.swift:32:404:  Create tmp int:__t:32 to eval expr INT_LITERAL
DEBUG realign_varcall_by_chr.swift:32:404:  walkExpr INT_LITERAL assigning to vars: [int:__t:32]
DEBUG realign_varcall_by_chr.swift:32:407:  Create tmp string:__t:33 to eval expr STRING_LITERAL
DEBUG realign_varcall_by_chr.swift:32:407:  walkExpr STRING_LITERAL assigning to vars: [string:__t:33]
DEBUG realign_varcall_by_chr.swift:32:432:  Create tmp string:__t:34 to eval expr STRING_LITERAL
DEBUG realign_varcall_by_chr.swift:32:432:  walkExpr STRING_LITERAL assigning to vars: [string:__t:34]
DEBUG realign_varcall_by_chr.swift:32:438:  Create tmp int:__t:35 to eval expr INT_LITERAL
DEBUG realign_varcall_by_chr.swift:32:438:  walkExpr INT_LITERAL assigning to vars: [int:__t:35]
DEBUG realign_varcall_by_chr.swift:32:440:  Create tmp string:__t:36 to eval expr STRING_LITERAL
DEBUG realign_varcall_by_chr.swift:32:440:  walkExpr STRING_LITERAL assigning to vars: [string:__t:36]
DEBUG realign_varcall_by_chr.swift:32:451:  Create tmp string:__t:37 to eval expr STRING_LITERAL
DEBUG realign_varcall_by_chr.swift:32:451:  walkExpr STRING_LITERAL assigning to vars: [string:__t:37]
DEBUG realign_varcall_by_chr.swift:36: Finishing modulepipelinefunctions.realign_varcall_by_chr for pass COMPILE_FUNCTIONS
DEBUG realign_varcall_by_chr.swift:36: Entered module pipelinefunctions.merge_vcf on pass COMPILE_FUNCTIONS
INFO  compileAppFunction
DEBUG merge_vcf.swift:3:17:  Create tmp string:__t:1 to eval expr STRING_LITERAL
DEBUG merge_vcf.swift:3:17:  walkExpr STRING_LITERAL assigning to vars: [string:__t:1]
DEBUG merge_vcf.swift:3:26:  Create tmp string:__t:2 to eval expr STRING_LITERAL
DEBUG merge_vcf.swift:3:26:  walkExpr STRING_LITERAL assigning to vars: [string:__t:2]
DEBUG merge_vcf.swift:3:41:  Create tmp string:__t:3 to eval expr STRING_LITERAL
DEBUG merge_vcf.swift:3:41:  walkExpr STRING_LITERAL assigning to vars: [string:__t:3]
DEBUG merge_vcf.swift:3:46:  Create tmp string:__t:4 to eval expr STRING_LITERAL
DEBUG merge_vcf.swift:3:46:  walkExpr STRING_LITERAL assigning to vars: [string:__t:4]
DEBUG merge_vcf.swift:3:61:  Create tmp string:__t:5 to eval expr STRING_LITERAL
DEBUG merge_vcf.swift:3:61:  walkExpr STRING_LITERAL assigning to vars: [string:__t:5]
DEBUG merge_vcf.swift:3:76:  Create tmp string:__t:6 to eval expr STRING_LITERAL
DEBUG merge_vcf.swift:3:76:  walkExpr STRING_LITERAL assigning to vars: [string:__t:6]
DEBUG merge_vcf.swift:3:101:  Create tmp string:__t:7 to eval expr STRING_LITERAL
DEBUG merge_vcf.swift:3:101:  walkExpr STRING_LITERAL assigning to vars: [string:__t:7]
DEBUG merge_vcf.swift:7: Finishing modulepipelinefunctions.merge_vcf for pass COMPILE_FUNCTIONS
DEBUG merge_vcf.swift:7: Entered module pipelinefunctions.joint_vcf on pass COMPILE_FUNCTIONS
INFO  compileAppFunction
DEBUG joint_vcf.swift:3:17:  Create tmp string:__t:1 to eval expr STRING_LITERAL
DEBUG joint_vcf.swift:3:17:  walkExpr STRING_LITERAL assigning to vars: [string:__t:1]
DEBUG joint_vcf.swift:3:26:  Create tmp string:__t:2 to eval expr STRING_LITERAL
DEBUG joint_vcf.swift:3:26:  walkExpr STRING_LITERAL assigning to vars: [string:__t:2]
DEBUG joint_vcf.swift:3:41:  Create tmp string:__t:3 to eval expr STRING_LITERAL
DEBUG joint_vcf.swift:3:41:  walkExpr STRING_LITERAL assigning to vars: [string:__t:3]
DEBUG joint_vcf.swift:3:46:  Create tmp string:__t:4 to eval expr STRING_LITERAL
DEBUG joint_vcf.swift:3:46:  walkExpr STRING_LITERAL assigning to vars: [string:__t:4]
DEBUG joint_vcf.swift:3:62:  Create tmp string:__t:5 to eval expr STRING_LITERAL
DEBUG joint_vcf.swift:3:62:  walkExpr STRING_LITERAL assigning to vars: [string:__t:5]
DEBUG joint_vcf.swift:3:87:  Create tmp string:__t:6 to eval expr STRING_LITERAL
DEBUG joint_vcf.swift:3:87:  walkExpr STRING_LITERAL assigning to vars: [string:__t:6]
DEBUG joint_vcf.swift:7: Finishing modulepipelinefunctions.joint_vcf for pass COMPILE_FUNCTIONS
DEBUG joint_vcf.swift:7: Entered module pipelinefunctions.miscellaneous on pass COMPILE_FUNCTIONS
DEBUG miscellaneous.swift:4:23: compile function: starting: getConfigVariables
DEBUG miscellaneous.swift:4:23: analyzer: starting: getConfigVariables
DEBUG miscellaneous.swift:8:17:   Variable keyValuePair was declared and assigned
DEBUG miscellaneous.swift:9:17:   Variable name was declared and assigned
DEBUG miscellaneous.swift:9:31:   Complex read rooted at var: keyValuePair
DEBUG miscellaneous.swift:10:17:   Variable value was declared and assigned
DEBUG miscellaneous.swift:10:32:   Complex read rooted at var: keyValuePair
DEBUG miscellaneous.swift:4:23: analyzer: done: getConfigVariables
DEBUG miscellaneous.swift:8:24:   walkExpr CALL_FUNCTION assigning to vars: [string[int]:keyValuePair]
DEBUG miscellaneous.swift:8:53:   Create tmp string:__t:1 to eval expr STRING_LITERAL
DEBUG miscellaneous.swift:8:53:   walkExpr STRING_LITERAL assigning to vars: [string:__t:1]
DEBUG miscellaneous.swift:9:24:   walkExpr ARRAY_LOAD assigning to vars: [string:name]
DEBUG miscellaneous.swift:10:24:   walkExpr ARRAY_LOAD assigning to vars: [string:value]
DEBUG miscellaneous.swift:11:28:   assignment: 
DEBUG miscellaneous.swift:4:23: compile function: done: getConfigVariables
INFO  compileAppFunction
DEBUG miscellaneous.swift:17:9:  Create tmp string:__t:1 to eval expr STRING_LITERAL
DEBUG miscellaneous.swift:17:9:  walkExpr STRING_LITERAL assigning to vars: [string:__t:1]
DEBUG miscellaneous.swift:17:20:  Create tmp string:__t:2 to eval expr STRING_LITERAL
DEBUG miscellaneous.swift:17:20:  walkExpr STRING_LITERAL assigning to vars: [string:__t:2]
DEBUG miscellaneous.swift:20: Finishing modulepipelinefunctions.miscellaneous for pass COMPILE_FUNCTIONS
DEBUG Optimising Swift IC
DEBUG Iteration: 0 Pass: Prune unused functions
DEBUG Iteration: 0 Pass: Uniquify variable names
DEBUG Iteration: 0 Pass: Flatten nested
DEBUG Iteration: 0 Pass: Validate
DEBUG Iteration: 0 Pass: Function inlining
DEBUG Inline locs: {samblaster=[__entry], __ol:novosort=[__entry], BaseRecalibrator=[__entry], getConfigVariables=[__entry], length=[replace_all], PrintReads=[__entry], samtools_view2=[__entry, __entry, __entry, __entry, __entry, __entry, __entry, __entry, __entry, __entry], RealignerTargetCreator=[__entry], CombineGVCFs=[__entry], IndelRealigner=[__entry], trim=[__entry, __entry, __entry, __entry, __entry], GenotypeGVCFs=[__entry], novoalign=[__entry], samtools_flagstat=[__entry], HaplotypeCaller=[__entry], picard=[__entry], samtools_index=[__entry], replace_all=[__entry, __entry, __entry, __entry, __entry]}
DEBUG Functions to prune: []
DEBUG inlining samtools_view2 into __entry
DEBUG Call to function samtools_view2 inlined into __entry
DEBUG inlining samblaster into __entry
DEBUG Call to function samblaster inlined into __entry
DEBUG inlining samtools_view2 into __entry
DEBUG Call to function samtools_view2 inlined into __entry
DEBUG inlining samtools_view2 into __entry
DEBUG Call to function samtools_view2 inlined into __entry
DEBUG inlining samtools_view2 into __entry
DEBUG Call to function samtools_view2 inlined into __entry
DEBUG inlining picard into __entry
DEBUG Call to function picard inlined into __entry
DEBUG inlining novoalign into __entry
DEBUG Call to function novoalign inlined into __entry
DEBUG inlining samtools_view2 into __entry
DEBUG Call to function samtools_view2 inlined into __entry
DEBUG inlining samtools_view2 into __entry
DEBUG Call to function samtools_view2 inlined into __entry
DEBUG inlining samtools_view2 into __entry
DEBUG Call to function samtools_view2 inlined into __entry
DEBUG inlining samtools_view2 into __entry
DEBUG Call to function samtools_view2 inlined into __entry
DEBUG inlining samtools_view2 into __entry
DEBUG Call to function samtools_view2 inlined into __entry
DEBUG inlining samtools_index into __entry
DEBUG Call to function samtools_index inlined into __entry
DEBUG inlining replace_all into __entry
DEBUG Call to function replace_all inlined into __entry
DEBUG inlining trim into __entry
DEBUG Call to function trim inlined into __entry
DEBUG inlining replace_all into __entry
DEBUG Call to function replace_all inlined into __entry
DEBUG inlining trim into __entry
DEBUG Call to function trim inlined into __entry
DEBUG inlining RealignerTargetCreator into __entry
DEBUG Call to function RealignerTargetCreator inlined into __entry
DEBUG inlining IndelRealigner into __entry
DEBUG Call to function IndelRealigner inlined into __entry
DEBUG inlining BaseRecalibrator into __entry
DEBUG Call to function BaseRecalibrator inlined into __entry
DEBUG inlining PrintReads into __entry
DEBUG Call to function PrintReads inlined into __entry
DEBUG inlining HaplotypeCaller into __entry
DEBUG Call to function HaplotypeCaller inlined into __entry
DEBUG inlining samtools_view2 into __entry
DEBUG Call to function samtools_view2 inlined into __entry
DEBUG inlining __ol:novosort into __entry
DEBUG Call to function __ol:novosort inlined into __entry
DEBUG inlining CombineGVCFs into __entry
DEBUG Call to function CombineGVCFs inlined into __entry
DEBUG inlining samtools_flagstat into __entry
DEBUG Call to function samtools_flagstat inlined into __entry
DEBUG inlining replace_all into __entry
DEBUG Call to function replace_all inlined into __entry
DEBUG inlining trim into __entry
DEBUG Call to function trim inlined into __entry
DEBUG inlining replace_all into __entry
DEBUG Call to function replace_all inlined into __entry
DEBUG inlining trim into __entry
DEBUG Call to function trim inlined into __entry
DEBUG inlining GenotypeGVCFs into __entry
DEBUG Call to function GenotypeGVCFs inlined into __entry
DEBUG inlining replace_all into __entry
DEBUG Call to function replace_all inlined into __entry
DEBUG inlining trim into __entry
DEBUG Call to function trim inlined into __entry
DEBUG inlining getConfigVariables into __entry
DEBUG Call to function getConfigVariables inlined into __entry
DEBUG inlining length into replace_all
DEBUG Call to function length inlined into replace_all
DEBUG changed=true
DEBUG Inline locs: {length=[__entry, __entry, __entry, __entry, __entry]}
DEBUG Functions to prune: [samblaster, __ol:novosort, BaseRecalibrator, getConfigVariables, PrintReads, samtools_view2, RealignerTargetCreator, CombineGVCFs, IndelRealigner, trim, GenotypeGVCFs, novoalign, samtools_flagstat, HaplotypeCaller, picard, samtools_index, replace_all]
DEBUG inlining length into __entry
DEBUG Call to function length inlined into __entry
DEBUG inlining length into __entry
DEBUG Call to function length inlined into __entry
DEBUG inlining length into __entry
DEBUG Call to function length inlined into __entry
DEBUG inlining length into __entry
DEBUG Call to function length inlined into __entry
DEBUG inlining length into __entry
DEBUG Call to function length inlined into __entry
DEBUG changed=true
DEBUG Inline locs: {}
DEBUG Functions to prune: [length]
DEBUG changed=true
DEBUG Inline locs: {}
DEBUG Functions to prune: []
DEBUG changed=false
DEBUG Iteration: 0 Pass: Loop hoisting
DEBUG Iteration: 0 Pass: Propagate aliases
DEBUG Iteration: 0 Pass: Value numbering
DEBUG Constant fold: LOCAL_OP.NOT[true] => false
DEBUG Constant fold: LOCAL_OP.NOT[true] => false
DEBUG Constant fold: LOCAL_OP.NOT[true] => false
DEBUG Constant fold: LOCAL_OP.NOT[true] => false
DEBUG Constant fold: LOCAL_OP.NOT[true] => false
DEBUG Constant fold: LOCAL_OP.NOT[true] => false
DEBUG Constant fold: LOCAL_OP.NOT[true] => false
DEBUG Constant fold: LOCAL_OP.NOT[true] => false
DEBUG Constant fold: LOCAL_OP.NOT[true] => false
DEBUG Constant fold: LOCAL_OP.NOT[true] => false
DEBUG Constant fold: LOCAL_OP.NOT[true] => false
DEBUG Constant fold: LOCAL_OP.NOT[true] => false
DEBUG Constant fold: LOCAL_OP.STRCAT["*.GATKCombineGVCF.raw.vcf"] => "*.GATKCombineGVCF.raw.vcf"
DEBUG Constant fold: LOCAL_OP.NOT[true] => false
DEBUG Iteration: 0 Pass: Loop simplify
DEBUG Iteration: 0 Pass: Dead code elimination
DEBUG Final variables to be eliminated: [string:__t:341, string:__t:583, string:__t:342, string:__t:584, string:__t:581, string:__t:582, string:__t:587, string:__t:346, string:__t:588, string:__t:104, string:__t:585, string:__t:101, string:__t:344, string:__t:586, string:__t:75, string:__t:76, string:__t:77, string:__t:78, string:__t:71, string:__t:72, string:__t:580, string:__t:73, $string:__v:__t:8:4, $string:__v:__t:8:5, string:__t:81, string:__t:349, string:__t:107, string:__t:108, string:__t:347, string:__t:589, string:__t:106, $string:__v:__t:8:1, $string:__v:__t:8:2, int:__t:109, $string:__v:__t:8:3, string:__t:352, string:__t:594, string:__t:110, string:__t:111, $string:__v:t:553, string:__t:592, string:__t:351, string:__t:593, string:__t:598, string:__t:114, string:__t:357, string:__t:599, string:__t:115, string:__t:354, int:__t:596, string:__t:355, string:__t:113, string:__t:86, string:__t:87, string:__t:88, string:__t:89, string:__t:82, string:__t:590, string:__t:591, void:__t:83, string:__t:84, string:__t:91, string:__t:92, int:__t:118, string:__t:358, string:__t:116, string:__t:5:5, string:__t:121, string:__t:5:6, string:__t:122, float:__t:361, string:__t:5:3, string:__t:5:4, string:__t:120, string:__t:5:9, int:__t:125, float:__t:365, string:__t:5:7, float:__t:366, string:__t:5:8, string:__t:98, string:__t:5:1, string:__t:93, string:__t:5:2, string:__t:94, string:__t:96, string:__of:alignedbam:5, string:__t:27:1, string:__of:alignedbam:1, string:__t:129, string:__of:alignedbam:2, string:__t:369, string:__of:alignedbam:3, string:__t:127, string:__of:alignedbam:4, string:__t:128, string:__t:132, string:__t:133, string:__t:378, string:__t:136, string:__t:379, int:__t:137, string:__t:376, string:__t:134, string:__t:377, string:__t:135, string:__t:370, $boolean:__v:2:10, $string:__v:chr:1, string:__t:16:1, string:__t:138, string:__t:139, string:__t:39, string:__t:385, string:__t:143, string:__t:144, string:__t:141, string:__t:384, string:__t:142, int:__t:147, string:__t:36, string:__t:37, string:__t:145, string:__t:38, string:__t:32, string:__t:34, string:__t:381, string:__t:30, string:__t:380, string:__t:149, string:__t:396, int:__t:154, string:__t:394, string:__t:395, string:__t:46, string:__t:158, string:__t:47, string:__t:48, string:__t:156, string:__t:49, string:__t:157, string:__t:44, string:__t:45, string:__t:392, string:__filename:outputfile, string:__t:150, string:__t:393, string:__t:151, string:__t:40, string:__t:41, string:__t:391, $boolean:__v:mapped_outputfile, string:__t:3:7, string:__t:165, string:__t:3:8, string:__t:166, string:__t:3:5, string:__t:163, string:__t:3:6, string:__t:57, string:__t:169, string:__t:59, string:__t:3:9, string:__t:167, void:__t:168, string:__t:53, string:__t:54, string:__t:55, string:__t:56, string:__t:3:3, string:__t:161, string:__filename:output, string:__t:3:4, string:__t:162, string:__t:51, string:__t:3:1, string:__t:52, string:__t:160, string:__t:3:2, string:__t:25:1, string:__t:176, string:__t:177, string:__t:174, string:__t:68, $boolean:__v:mapped_output, string:__t:178, string:__t:179, string:__t:65, string:__t:66, string:__t:67, string:__t:60, string:__t:172, string:__t:61, string:__t:173, string:__t:62, string:__t:63, string:__t:171, $string:__v:read1, string:__of:dedupbam:1, string:__of:dedupbam:2, string:__t:14:1, $string:__v:read2, string:__t:186, string:__t:189, string:__t:183, string:__t:181, $string:__v:__t:4:8, $string:__v:__t:4:9, $boolean:__v:mapped_output:2, string:__filename:outputfile:1, $boolean:__v:mapped_output:1, $boolean:__v:mapped_output:4, $boolean:__v:mapped_output:3, string:__filename:outputfile:4, string:__filename:outputfile:5, $string:__v:__t:4:1, string:__filename:outputfile:2, $string:__v:__t:4:2, string:__filename:outputfile:3, $string:__v:__t:4:3, $string:__v:__t:4:4, $string:__v:__t:4:5, string:__filename:outputfile:6, $string:__v:__t:4:6, string:__filename:outputfile:7, $string:__v:__t:4:7, string:__t:198, string:__t:199, string:__t:196, string:__t:197, string:__t:190, string:__t:191, string:__t:194, int:__t:192, string:__t:193, string:__v:unified, string:__t:1:9, string:__t:18, string:__t:19, string:__t:1:7, string:__t:1:8, string:__t:14, string:__t:16, string:__t:1:1, string:__t:10, string:__t:1:2, string:__t:12, string:__t:1:3, string:__t:1:4, string:__of:realignedbam, string:__t:28, string:__t:29, string:__t:24, string:__t:27, string:__t:20, string:__t:21, string:__t:22, string:__t:23, $string:__v:__t:6:6, $string:__v:__t:6:7, $string:__v:__t:6:1, $string:__v:__t:6:2, $string:__v:__t:6:3, $string:__v:__t:6:4, $string:__v:__t:6:5, $boolean:__v:mapped_output:1:1, $boolean:__v:mapped_output:1:3, $boolean:__v:mapped_output:1:2, string:__t:29:1, string:__t:18:1, string:__t:31:1, string:__t:1:14, string:__t:1:12, string:__t:1:13, string:__t:1:19, string:__t:1:17, string:__t:1:10, string:__t:1:11, $boolean:__v:mapped_metricsfile, string:__t:20:1, string:__t:709, $string:__v:__t:1, $string:__v:__t:6, $string:__v:__t:7, $string:__v:__t:8, $string:__v:__t:9, int:__t:705, $string:__v:__t:2, string:__t:706, $string:__v:__t:3, string:__t:703, $string:__v:__t:4, string:__t:704, $string:__v:__t:5, string:__t:718, string:__t:719, string:name, string:__t:712, string:__t:713, string:__filename:output:3, string:__t:710, string:__t:711, string:__filename:output:2, string:__t:716, string:__filename:output:1, string:__t:720, string:__filename:inputFile, int:__t:729, string:__t:3:10, $string:__v:__t:1:3, string:__t:724, $string:__v:__t:1:4, $string:__v:__t:1:5, int:__t:722, $string:__v:__t:1:6, $string:__v:__t:1:7, $string:__v:__t:1:8, string:__t:725, $string:__v:__t:1:9, string:__t:726, string:__filename:intervals, string:__t:731, $string:__v:__t:1:1, $string:__v:__t:1:2, string:__t:734, string:__t:735, string:__t:732, void:__t:733, string:__t:736, string:__t:737, int:__t:35:1, string:__t:742, boolean:__t:500, string:__t:509, int:__t:745, string:__t:503, string:__t:746, string:__t:743, string:__t:501, string:__t:744, string:__t:502, string:__t:508, string:__t:748, string:__t:506, string:__t:752, string:__t:510, string:__t:753, string:__t:24:1, string:__t:511, $string:__v:t:391, string:__of:recalibratedbam, $string:__v:__filename:metricsfile2, string:__of:realignedbam:2, string:__t:756, string:__of:realignedbam:1, string:__t:515, int:__t:513, string:__t:758, string:__t:516, string:__t:517, string:__t:9:1, string:__t:760, string:__t:9:2, string:__t:763, string:__t:522, string:__t:761, string:__t:9:3, int:__t:520, string:__t:11:1, string:__t:525, string:__t:526, string:__t:523, string:__t:524, string:__t:769, string:__t:770, string:__t:771, string:__t:774, string:__t:532, void:__t:775, string:__t:533, string:__t:772, string:__t:530, string:__t:773, $string:__v:__filename:outputfile1, string:__t:536, string:__t:776, string:__t:535, string:__t:782, string:__t:780, string:__t:543, int:__t:544, string:__t:302, string:__t:783, string:__t:541, string:__t:33:1, string:__t:784, string:__t:542, int:__t:300, string:__of:alignedbam, $string:__v:__t:2:10, string:__t:547, string:__t:548, string:__t:787, string:__t:545, string:__t:303, string:__t:788, string:__t:546, string:__t:304, string:__t:309, string:__t:549, string:__t:307, string:__t:308, string:__t:792, string:__t:550, string:__t:793, string:__t:551, string:__t:791, string:__t:796, string:__t:554, string:__t:797, string:__t:555, string:__t:794, string:__t:552, string:__t:310, string:__t:795, string:__t:22:1, string:__t:553, string:__t:311, string:__filename:metricsfile, string:__t:316, string:__t:317, string:__t:798, string:__t:314, string:__t:799, string:__t:318, string:__t:319, string:__t:561, string:__t:7:3, string:__t:562, string:__t:7:4, string:__t:7:1, string:__t:560, string:__t:7:2, string:__t:7:7, string:__t:323, string:__t:566, string:__t:324, int:__t:563, string:__t:7:5, int:__t:321, string:__t:564, string:__t:7:6, int:__t:328, string:__t:325, string:__t:330, $boolean:__v:3:1, string:__t:573, string:__t:331, $boolean:__v:3:2, string:__t:570, string:__t:571, string:__t:334, string:__t:576, void:__t:335, int:__t:577, string:__t:574, string:__t:332, void:__t:333, $boolean:__v:3:9, $boolean:__v:3:7, $boolean:__v:3:8, $boolean:__v:3:5, $boolean:__v:3:6, $boolean:__v:3:3, $boolean:__v:3:4, string:__t:339, string:__t:336, string:__t:578, string:__t:337, string:__t:579, string:__t:462, string:__t:6:4, int:__t:220, string:__t:463, string:__t:6:5, string:__t:221, string:__t:6:2, string:__t:460, string:__t:461, string:__t:6:3, string:__t:6:8, string:__t:466, string:__t:225, string:__t:6:6, string:__t:222, string:__t:6:7, string:__t:465, $string:__v:__t:15, $string:__v:__t:16, $string:__v:__t:13, $string:__v:__t:14, $string:__v:__t:11, $string:__v:__t:12, string:__t:6:1, $string:__v:__t:10, $string:__v:__t:19, $string:__v:__t:17, $string:__v:__t:18, string:__t:228, string:__t:28:1, string:__t:229, string:__t:468, string:__t:469, string:__t:227, $boolean:__v:2:2, string:__t:231, string:__t:474, $boolean:__v:2:3, string:__t:232, string:__t:471, string:__t:472, $boolean:__v:2:1, string:__t:230, string:__t:477, string:__t:478, string:__t:236, string:__t:475, int:__t:234, $boolean:__v:2:8, $boolean:__v:2:9, $boolean:__v:2:6, $boolean:__v:2:7, $boolean:__v:2:4, $boolean:__v:2:5, string:__t:17:1, string:__t:237, string:__t:238, string:__t:484, string:__t:485, $int:__v:__t:30, string:__t:243, string:tot_dups, string:__t:483, int:__t:241, void:__t:246, string:__t:489, string:__t:247, string:__t:486, string:__t:244, string:__t:487, string:__t:245, $string:__v:__t:37, $int:__v:__t:35, $string:__v:__t:36, string:__t:480, $string:__v:__t:33, string:__t:481, $string:__v:__t:34, $string:__v:__t:31, $int:__v:__t:32, $string:__v:__t:7:5, $string:__v:__t:7:6, $string:__v:__t:7:1, $string:__v:__t:7:2, $string:__v:__t:7:3, $string:__v:__t:7:4, string:__t:495, string:__t:253, string:__t:496, string:__t:493, string:__t:251, void:__t:494, string:__t:499, string:__t:258, string:__t:497, string:__t:255, string:__filename:inputFile:7, string:__t:498, $string:__v:__t:26, $string:__v:__t:27, $string:__v:__t:24, $string:__v:__t:25, string:__t:491, $string:__v:__t:22, string:sample, string:__t:492, $string:__v:__t:23, string:__t:250, $string:__v:__t:20, string:__t:490, $string:__v:__t:21, string:__of:mergedbam:2, string:__of:mergedbam:1, $string:__v:__t:28, $string:__v:__t:29, string:__filename:inputFile:6, string:__filename:inputFile:5, string:__filename:inputFile:4, string:__filename:inputFile:3, string:__filename:inputFile:2, string:__filename:inputFile:1, string:__t:4:6, $string:__v:__filename:output1:1, int:__t:264, $string:__v:__filename:output1:2, string:__t:4:7, string:__t:265, $string:__v:__filename:output1:3, string:__t:4:4, string:__t:262, string:__t:4:5, string:__t:263, string:__t:268, string:__t:4:8, string:__t:266, string:__t:4:9, string:__t:4:2, string:__t:4:3, string:__t:261, string:__t:4:1, $boolean:__v:__t:500, string:__t:26:1, string:__t:275, string:__t:273, string:__t:278, string:__t:271, string:__t:272, string:__t:15:1, string:__t:286, int:__t:284, string:__t:285, string:__t:13:1, string:__t:288, string:__t:289, string:__t:282, string:__t:283, string:__t:281, $string:__v:__t:9:1, $string:__v:__t:9:2, string:__t:297, string:__t:295, string:__t:296, string:__t:290, int:__t:293, string:__t:291, string:__t:37:1, $string:__v:t:418, string:__t:2:8, string:__t:2:9, string:__t:2:6, string:__t:2:7, string:__t:2:1, string:__t:2:4, string:__t:2:5, string:__t:2:2, string:__t:2:3, string:__filename:recalreport, $string:__v:__t:3:9, $string:__v:__t:3:1, $string:__v:__t:3:2, $string:__v:__t:3:3, $string:__v:__t:3:4, $string:__v:__filename:output1, $string:__v:__t:3:5, $string:__v:__t:3:6, $string:__v:__t:3:7, $string:__v:__t:3:8, string:__t:4:10, $boolean:__v:3:10, $boolean:__v:3:11, string:__filename:inputFilename, string:tot_reads, string:__t:19:1, string:__of:dedupsortedbam:5, string:__of:dedupsortedbam:4, string:__of:dedupsortedbam:7, string:__of:dedupsortedbam:6, string:__of:dedupsortedbam:8, $string:__v:__t:5:7, $string:__v:__t:5:8, string:__of:dedupsortedbam:1, string:__of:dedupsortedbam:3, string:__of:dedupsortedbam:2, $string:__v:__t:5:1, $string:__v:t:802, $string:__v:__t:5:2, $string:__v:__t:5:3, $string:__v:__t:5:4, $string:__v:__t:5:5, $string:__v:__t:5:6, string:__of:mergedbam, $boolean:__v:mapped_outputfile:1:6, $boolean:__v:mapped_outputfile:1:7, $boolean:__v:mapped_outputfile:1:4, $boolean:__v:mapped_outputfile:1:5, $boolean:__v:mapped_outputfile:1:2, $boolean:__v:mapped_outputfile:1:3, $boolean:__v:mapped_outputfile:1:1, string:__of:recalibratedbam:2, string:__of:recalibratedbam:1, string:tot_mapped, int:__t:30:1, $string:__v:__filename:outputfile1:4, $string:__v:__filename:outputfile1:3, $string:__v:__filename:outputfile1:2, $string:__v:__filename:outputfile1:1, string:__t:808, string:__t:809, string:__t:800, string:__t:801, string:__of:dedupbam, string:__t:802, string:__t:803, string:__t:819, string:__v:unified:1, string:__t:818, $string:__v:unified:2, $string:__v:__filename:outputfile1:7, $string:__v:__filename:outputfile1:6, $string:__v:__filename:outputfile1:5, int:__t:811, string:__t:812, string:__t:810, string:__t:814, string:__t:822, $string:__v:__t:2:2, $boolean:__v:mapped_outputfile:1, $boolean:__v:mapped_outputfile:2, $string:__v:__t:2:3, $boolean:__v:mapped_outputfile:3, $string:__v:__t:2:4, $boolean:__v:mapped_outputfile:4, $string:__v:__t:2:5, $string:__v:__t:2:6, $string:__v:__t:2:7, string:__t:824, $string:__v:__t:2:8, $string:__v:__t:2:9, $boolean:__v:mapped_outputfile:5, $boolean:__v:mapped_outputfile:6, $boolean:__v:mapped_outputfile:7, $boolean:__v:mapped_outputfile:8, $string:__v:__t:2:1, string:__t:2:11, string:__t:2:10, $boolean:__v:mapped_metricsfile:1, string:__t:608, string:__t:609, int:__t:603, string:__t:600, string:__t:606, string:__t:607, string:__t:605, string:__t:610, int:__t:619, string:__t:613, string:__t:614, string:__t:611, string:__t:612, string:__t:617, string:__t:618, string:__t:615, string:__t:616, string:__t:12:1, string:__t:620, string:__t:621, string:__t:624, string:__t:623, string:__t:628, string:__t:629, string:__t:626, string:__t:627, string:__t:631, string:__t:632, string:__t:630, $boolean:__v:3, $boolean:__v:2, $boolean:__v:6, $boolean:__v:5, $boolean:__v:4, string:__t:635, string:__t:636, string:__t:633, string:__t:36:1, string:__t:634, int:__t:639, string:__t:637, string:__t:638, string:__t:642, string:__t:34:1, string:__t:643, string:__t:640, string:__t:641, int:__t:646, string:__t:405, string:__t:644, string:__t:408, string:__t:409, string:__t:648, string:__t:406, string:__t:649, string:__t:407, string:__t:650, int:__t:653, string:__t:23:1, string:__t:411, string:__t:412, string:__t:410, void:__t:657, string:__t:658, string:__t:655, string:__t:656, string:__t:419, string:__t:659, string:__t:418, string:__t:8:2, string:__t:660, string:__t:8:3, string:__t:661, string:__t:8:1, string:__t:664, string:__t:8:6, string:__t:422, string:__t:665, string:__t:423, string:__t:8:4, string:__t:662, string:__t:10:1, string:__t:420, string:__t:8:5, string:__t:663, string:__t:421, string:__t:668, string:__t:669, string:__t:666, string:__t:667, string:__t:671, string:__t:672, string:__t:670, string:__t:675, string:__t:433, string:__t:676, string:__t:434, string:__t:673, string:__t:674, string:__t:432, string:__t:5, string:__t:4, string:__t:3, string:__t:2, string:__t:1, string:__t:9, string:__t:8, string:__t:6, string:__t:679, string:__of:chrdedupsortedbam:1, string:__t:437, string:__of:chrdedupsortedbam:2, string:__t:438, string:__t:677, string:__t:435, string:__t:678, string:__t:436, string:__t:439, int:__t:682, string:__t:683, string:__t:680, string:__t:681, string:__t:445, string:__t:203, string:line, string:__t:684, int:__t:32:1, int:__t:201, string:__t:448, string:__t:449, string:__t:446, string:__t:204, string:__t:447, string:__t:205, string:value, int:__t:208, void:__t:451, string:__t:452, string:__t:694, string:__t:210, string:__t:692, string:__of:chrdedupsortedbam, string:__t:450, string:__t:455, string:__t:697, string:__t:698, void:__t:456, void:__t:695, string:__t:21:1, string:__t:211, string:__of:dedupsortedbam, string:__t:454, string:__t:696, string:__t:212, string:__t:690, $string:__v:__t:1:10, $string:__v:__t:1:11, $string:__v:__t:1:12, string:__t:459, string:__t:217, string:__t:218, string:__t:699, string:__t:457, string:__t:215, string:__t:458, string:__t:216, string:__t:219]
DEBUG Final variables to be eliminated: []
DEBUG Final variables to be eliminated: [$boolean:__v:mapped_o:1, $boolean:__v:2, string:__t:1, $string:__v:__t:1, $string:__v:__filename:o1]
DEBUG Final variables to be eliminated: []
DEBUG Final variables to be eliminated: [$boolean:__v:mapped_o:1, $boolean:__v:2, string:__t:1, $string:__v:__t:1, $string:__v:__filename:o1]
DEBUG Final variables to be eliminated: []
DEBUG Final variables to be eliminated: [$string:__v:__t:1, $boolean:__v:mapped_o:1, $boolean:__v:2, string:__t:1, $string:__v:__filename:o1]
DEBUG Final variables to be eliminated: []
DEBUG Final variables to be eliminated: [$string:__v:__t:1, string:__t:2, string:__t:1, $string:__v:__t:2]
DEBUG Final variables to be eliminated: []
DEBUG Final variables to be eliminated: [string:__t:4, $boolean:__v:2, string:__t:3, string:__t:2, string:__t:1, $string:__v:__t:1, $boolean:__v:mapped_output:1, $string:__v:__filename:output1, $string:__v:__t:2, $string:__v:__t:3, $string:__v:__t:4]
DEBUG Final variables to be eliminated: []
DEBUG Final variables to be eliminated: [$boolean:__v:2, string:__t:3, string:__t:2, string:__t:1, $string:__v:__t:1, $boolean:__v:mapped_output:1, $string:__v:__filename:output1, $string:__v:__t:2, $string:__v:__t:3]
DEBUG Final variables to be eliminated: []
DEBUG Final variables to be eliminated: [string:__t:4, $boolean:__v:2, string:__t:3, string:__t:2, string:__t:1, $string:__v:__t:1, $boolean:__v:mapped_output:1, $string:__v:__filename:output1, $string:__v:__t:2, $string:__v:__t:3, $string:__v:__t:4]
DEBUG Final variables to be eliminated: []
DEBUG Final variables to be eliminated: [$boolean:__v:2, string:__t:2, string:__t:1, $string:__v:__t:1, $boolean:__v:mapped_output:1, $string:__v:__filename:output1, $string:__v:__t:2]
DEBUG Final variables to be eliminated: []
DEBUG Iteration: 0 Pass: demote globals
DEBUG Iteration: 0 Pass: Function signature changing
DEBUG Iteration: 0 Pass: Continuation fusion
DEBUG Iteration: 0 Pass: Wait coalescing
DEBUG Iteration: 0 Pass: Validate
DEBUG Iteration: 1 Pass: Loop hoisting
DEBUG Iteration: 1 Pass: Value numbering
DEBUG Constant fold: LOCAL_OP.NOT[false] => true
DEBUG Iteration: 1 Pass: Loop simplify
DEBUG Iteration: 1 Pass: Dead code elimination
DEBUG Final variables to be eliminated: [string:RANK, string:SOFT, $string:__v:s:2, boolean:__t:595, $string:__v:s:1, $string$[int]:__v:known:1, $string:__v:javadir:2, boolean:__t:233, $string:__v:s:4, $string:__v:s:3, boolean:__t:117, $boolean:__v:__t:200, $string:__v:javadir:4, $string:__v:javadir:3, $boolean:__v:__t:320, $string:__v:gatkdir:2, $string:__v:gatkdir:3, $string:__v:gatkdir:1, boolean:__t:146, int:numAlignments_dedupsortedbam, string:HARD, $boolean:__v:__t:645, boolean:__t:292, $boolean:__v:__t:512, int:numAlignments_realignedbam, $boolean:__v:__t:146, string:__v:unified, int:__t:1:5, int:__t:1:6, $string:__v:inputFile:10, $boolean:__o:store, $string:__v:reference:3, int:numAlignments_dedup, int:numAlignments_chrdedupsortedbam, int:numAlignments_dedupsortedbam:2, int:numAlignments_dedupsortedbam:1, $string:__v:reference:2, $string:__v:reference:1, string:configFilename, $boolean:__v:__t:233, $int:__v:thr:1, $int:__v:thr:2, $boolean:__v:__t:117, $boolean:__v:__t:595, string[int]:configFileData, int:__t:1:15, int:__t:1:18, int:__t:1:16, $string:__v:inputFile:9, int:numAlignments_recalibratedbam, string:NODE, string:__t:805, int:numAlignments_mergedbam, $string:__v:inputFile:4, string:__v:unified:1, $string:__v:unified:2, $string:__v:__filename:inputFile:5, $string:__v:__filename:inputFile:3, $string:__v:__filename:inputFile:4, string:__t:701, $boolean:__v:__t:292, boolean:__t:721, string:__t:739, $string:__v:__filename:recalreport, $boolean:__o:ismapped, $string:__v:__filename:intervals, boolean:__t:512, $boolean:__v:__t:721, boolean:__t:645, string:__t:538, int:numAlignments_aligned, string:__t:557, boolean:__t:320, int:numAlignments_aligned:1, boolean:__t:200, $string:__v:s]
DEBUG Final variables to be eliminated: []
DEBUG Final variables to be eliminated: []
DEBUG Final variables to be eliminated: []
DEBUG Final variables to be eliminated: []
DEBUG Final variables to be eliminated: []
DEBUG Final variables to be eliminated: []
DEBUG Final variables to be eliminated: []
DEBUG Final variables to be eliminated: []
DEBUG Final variables to be eliminated: []
DEBUG Iteration: 1 Pass: Function signature changing
DEBUG Iteration: 1 Pass: Continuation fusion
DEBUG Iteration: 1 Pass: Wait coalescing
DEBUG Iteration: 1 Pass: Validate
DEBUG Iteration: 2 Pass: Array build
DEBUG Iteration: 2 Pass: Struct build
DEBUG Iteration: 2 Pass: Unroll loops
DEBUG looking to unroll loops in __entry
DEBUG looking to unroll loops in cp
DEBUG looking to unroll loops in sed
DEBUG looking to unroll loops in echo
DEBUG looking to unroll loops in mkdir
DEBUG looking to unroll loops in bwa_mem
DEBUG looking to unroll loops in samtools_view
DEBUG looking to unroll loops in novosort
DEBUG looking to unroll loops in find_files
DEBUG Iteration: 2 Pass: Validate
DEBUG Iteration: 2 Pass: Loop hoisting
DEBUG Iteration: 2 Pass: Value numbering
DEBUG Could not find declaration for __v:configFile
DEBUG Could not find declaration for __v:configFile
DEBUG Could not find declaration for __v:configFile
DEBUG Could not find declaration for __v:configFile
DEBUG Could not find declaration for __v:configFile:1
DEBUG Could not find declaration for __v:configFile:1
DEBUG Could not find declaration for __v:configFile:1
DEBUG Could not find declaration for __v:configFile
DEBUG Could not find declaration for __v:configFile
DEBUG Could not find declaration for __v:configFile
DEBUG Iteration: 2 Pass: Loop simplify
DEBUG Iteration: 2 Pass: Dead code elimination
DEBUG Final variables to be eliminated: [$string:__v:javadir:5, $string:__v:gatkdir:4, $boolean:__v:mapped_configFile, string:__v:unified, $string:__v:reference:4, $int:__v:thr:3, string:__v:unified:1, $string:__v:unified:2, $string:__v:__filename:inputFile:6, $string:__v:dbsnp:1, $boolean:__v:mapped_configFile:1]
DEBUG Final variables to be eliminated: []
DEBUG Final variables to be eliminated: []
DEBUG Final variables to be eliminated: []
DEBUG Final variables to be eliminated: []
DEBUG Final variables to be eliminated: []
DEBUG Final variables to be eliminated: []
DEBUG Final variables to be eliminated: []
DEBUG Final variables to be eliminated: []
DEBUG Final variables to be eliminated: []
DEBUG Iteration: 2 Pass: Function signature changing
DEBUG Iteration: 2 Pass: Continuation fusion
DEBUG Iteration: 2 Pass: Wait coalescing
DEBUG Iteration: 2 Pass: Validate
DEBUG Iteration: 3 Pass: Function inlining
DEBUG Inline locs: {mkdir=[__entry, __entry]}
DEBUG Functions to prune: []
DEBUG inlining mkdir into __entry
DEBUG Call to function mkdir inlined into __entry
DEBUG inlining mkdir into __entry
DEBUG Call to function mkdir inlined into __entry
DEBUG changed=true
DEBUG Inline locs: {}
DEBUG Functions to prune: [mkdir]
DEBUG changed=true
DEBUG Inline locs: {}
DEBUG Functions to prune: []
DEBUG changed=false
DEBUG Iteration: 3 Pass: Loop hoisting
DEBUG Iteration: 3 Pass: Propagate aliases
DEBUG Iteration: 3 Pass: Value numbering
DEBUG Could not find declaration for __v:configFile
DEBUG Could not find declaration for __v:configFile
DEBUG Could not find declaration for __v:configFile
DEBUG Could not find declaration for __v:configFile
DEBUG Could not find declaration for __v:configFile:1
DEBUG Could not find declaration for __v:configFile:1
DEBUG Could not find declaration for __v:configFile:1
DEBUG Could not find declaration for __v:configFile
DEBUG Could not find declaration for __v:configFile
DEBUG Could not find declaration for __v:configFile
DEBUG Iteration: 3 Pass: Loop simplify
DEBUG Iteration: 3 Pass: Dead code elimination
DEBUG Final variables to be eliminated: [string:__v:unified, void:__t:25, string:__v:unified:1, $string:__v:unified:2, $string:__of:configFile, void:__t:789]
DEBUG Final variables to be eliminated: []
DEBUG Final variables to be eliminated: []
DEBUG Final variables to be eliminated: []
DEBUG Final variables to be eliminated: []
DEBUG Final variables to be eliminated: []
DEBUG Final variables to be eliminated: []
DEBUG Final variables to be eliminated: []
DEBUG Final variables to be eliminated: []
DEBUG Iteration: 3 Pass: demote globals
DEBUG Iteration: 3 Pass: Function signature changing
DEBUG Iteration: 3 Pass: Continuation fusion
DEBUG Iteration: 3 Pass: Wait coalescing
DEBUG Iteration: 3 Pass: Validate
DEBUG Iteration: 4 Pass: Loop hoisting
DEBUG Iteration: 4 Pass: Value numbering
DEBUG Could not find declaration for __v:configFile
DEBUG Could not find declaration for __v:configFile
DEBUG Could not find declaration for __v:configFile
DEBUG Could not find declaration for __v:configFile
DEBUG Could not find declaration for __v:configFile:1
DEBUG Could not find declaration for __v:configFile:1
DEBUG Could not find declaration for __v:configFile:1
DEBUG Could not find declaration for __v:configFile
DEBUG Could not find declaration for __v:configFile
DEBUG Could not find declaration for __v:configFile
DEBUG Iteration: 4 Pass: Loop simplify
DEBUG Iteration: 4 Pass: Dead code elimination
DEBUG Final variables to be eliminated: [string:__v:unified, string:__v:unified:1, $string:__v:unified:2]
DEBUG Final variables to be eliminated: []
DEBUG Final variables to be eliminated: []
DEBUG Final variables to be eliminated: []
DEBUG Final variables to be eliminated: []
DEBUG Final variables to be eliminated: []
DEBUG Final variables to be eliminated: []
DEBUG Final variables to be eliminated: []
DEBUG Final variables to be eliminated: []
DEBUG Iteration: 4 Pass: Function signature changing
DEBUG Iteration: 4 Pass: Continuation fusion
DEBUG Iteration: 4 Pass: Wait coalescing
DEBUG Iteration: 4 Pass: Validate
DEBUG Iteration: 5 Pass: Prune unused functions
DEBUG Iteration: 5 Pass: Array build
DEBUG Iteration: 5 Pass: Struct build
DEBUG Iteration: 5 Pass: Unroll loops
DEBUG looking to unroll loops in __entry
DEBUG looking to unroll loops in cp
DEBUG looking to unroll loops in sed
DEBUG looking to unroll loops in echo
DEBUG looking to unroll loops in bwa_mem
DEBUG looking to unroll loops in samtools_view
DEBUG looking to unroll loops in novosort
DEBUG looking to unroll loops in find_files
DEBUG Iteration: 5 Pass: Validate
DEBUG Iteration: 5 Pass: Loop hoisting
DEBUG Iteration: 5 Pass: Value numbering
DEBUG Could not find declaration for __v:configFile
DEBUG Could not find declaration for __v:configFile
DEBUG Could not find declaration for __v:configFile
DEBUG Could not find declaration for __v:configFile
DEBUG Could not find declaration for __v:configFile:1
DEBUG Could not find declaration for __v:configFile:1
DEBUG Could not find declaration for __v:configFile:1
DEBUG Could not find declaration for __v:configFile
DEBUG Could not find declaration for __v:configFile
DEBUG Could not find declaration for __v:configFile
DEBUG Iteration: 5 Pass: Loop simplify
DEBUG Iteration: 5 Pass: Dead code elimination
DEBUG Final variables to be eliminated: [string:__v:unified, string:__v:unified:1, $string:__v:unified:2]
DEBUG Final variables to be eliminated: []
DEBUG Final variables to be eliminated: []
DEBUG Final variables to be eliminated: []
DEBUG Final variables to be eliminated: []
DEBUG Final variables to be eliminated: []
DEBUG Final variables to be eliminated: []
DEBUG Final variables to be eliminated: []
DEBUG Final variables to be eliminated: []
DEBUG Iteration: 5 Pass: Function signature changing
DEBUG Iteration: 5 Pass: Continuation fusion
DEBUG Iteration: 5 Pass: Inline dataflow ops
DEBUG Iteration: 5 Pass: Wait coalescing
DEBUG Iteration: 5 Pass: Validate
DEBUG Iteration: 6 Pass: Loop hoisting
DEBUG Iteration: 6 Pass: Propagate aliases
DEBUG Iteration: 6 Pass: Value numbering
DEBUG Constant fold: LOCAL_OP.NOT[false] => true
DEBUG Could not find declaration for __v:configFile
DEBUG Could not find declaration for __v:configFile
DEBUG Could not find declaration for __v:configFile
DEBUG Could not find declaration for __v:configFile
DEBUG Could not find declaration for __v:configFile:1
DEBUG Could not find declaration for __v:configFile:1
DEBUG Could not find declaration for __v:configFile:1
DEBUG Could not find declaration for __v:configFile
DEBUG Could not find declaration for __v:configFile
DEBUG Could not find declaration for __v:configFile
DEBUG Iteration: 6 Pass: Loop simplify
DEBUG Iteration: 6 Pass: Dead code elimination
DEBUG Final variables to be eliminated: [$int:__v:c:__c:i_10:1, $int:__v:c:__c:i_10:2, void:__t:343, string:__t:74, $string:__v:t:442:1, $string:__v:t:58:1, $string:__v:c:s_jointVCFca, $string:__v:t:556, $string:__v:s:9, $string:__v:s:8, $string:__v:s:7, $string:__v:s:6, $string:__v:s:5, $string:__v:t:431:1, $string:__v:t:69:1, float:__t:359, $int:__v:c:__c:i_10:5, $int:__v:c:__c:i_10:6, $int:__v:c:__c:i_10:3, $int:__v:c:__c:i_10:4, float:__t:364, boolean:__t:367, void:__t:123, boolean:__t:124, float:__t:360, $boolean:__v:__t:685, $string:__v:c:s_novoalign, string:__t:374, string:__t:375, string:__t:372, $string:__v:gatkdir:5, string:__t:373, $string:__v:gatkdir:6, $string:__v:c:s__deduplica, void:__t:371, $string:__v:t:444:1, $string:__v:chr:2, $string:__v:chr:1, $string:__v:chr:4, $string:__v:chr:3, $string:__v:chr:6, $string:__v:chr:5, $string:__v:chr:8, $string:__v:chr:7, $string:__v:c:s_realign, void:__t:386, float:__t:383, $string:__v:c:s__, string:__t:389, $string:__v:c:s_novosort_c, string:__t:387, string:__t:388, boolean:__t:382, $string:__v:t:479:1, $string:__v:sampleName, void:__t:152, boolean:__t:153, string:__t:398, string:__t:399, string:__t:43, string:chr, string:__t:390, boolean:__t:164, $float:__v:t:359:1, $string:__v:c:s_picard_com, string:__t:50, $string:__v:t:170:1, $string:__v:c:s_GenomeAnal, $string:__v:c:s__raw_g_vcf, $string:__v:c:s_jointVCFs-1, $string:__v:c:s_novosort_c:1, $string:__v:c:s_novosort_c:2, $string:__v:t:537, string:__t:69, $string:__v:t:400:1, string:__t:170, $string:__v:c:s___________-2, $string:__v:c:s___________-1, $string:__v:t:700, $string:__v:c:s_GenomeAnal:1, $string:__v:c:s_GenomeAnal:2, $string:__v:sampleName:9, $string:__v:sampleName:4, $string:__v:sampleName:3, $string:__v:sampleName:2, $string:__v:sampleName:1, $string:__v:sampleName:8, $string:__v:t:473:1, $string:__v:sampleName:7, $string:__v:sampleName:6, $string:__v:sampleName:5, string:__v:unified, $string:__v:t:375:1, $int:__v:c:__c:i_10, string:__t:17, $string:__v:t:399:1, $float:__v:t:364:1, $string:__v:t:388:1, $string:__v:c:s__nodups_ba, $string:__v:t:738, $boolean:__v:t:124:1, $int:__v:t:686:1, $string:__v:c:s_GATK_BQSR_, $float:__v:perc_dup:4, $float:__v:perc_dup:5, $float:__v:perc_dup:1, $float:__v:perc_dup:2, $float:__v:perc_dup:3, $string:__v:t:464:2, $string:__v:c:s_sorting_an, $string:__v:t:816:1, $string:__v:t:464:1, $boolean:__v:__t:248, $string:__v:t:159:1, $string:__v:t:488:1, $string:__v:dirname, $string:__v:c:s__GATKCombi, $string:__v:t:428:1, $float:__v:c:f_100.0:1, $string:__v:t:417:1, $float:__v:t:383:1, $int:__v:t:766:1, $string:__v:c:s__:3, $string:__v:c:s__:2, $string:__v:c:s__:5, $string:__v:c:s__:4, $string:__v:c:s__:7, $string:__v:c:s__:6, $string:__v:t:470:2, $string:__v:t:470:1, $string:__v:t:372:1, $string:__v:c:s__recal_rep, $string:__v:c:s__:1, $string:__v:t:777:1, $string:__v:__filename:inputFile:7, $string:__v:__filename:inputFile:1, string:__t:707, string:__t:702, string:__t:700, $string:__v:dirname:1, $string:__v:c:s_SAMBLASTER, $string:__v:c:s__chr_bamLi, $string:__v:c:s_samtools_c, $string:__v:t:528:1, $string:__v:t:64:1, string:__wfilename:sampleInfoFile, $string:__v:c:s__flagstats, void:__t:727, boolean:__t:728, $string$[int]:__v:sampleLines, string:__t:738, $string:__v:t:374:1, string:__t:740, $string:__v:t:42:1, string:__t:749, string:__t:750, $float:__v:perc_mapped:5, $float:__v:perc_mapped:4, $string:__v:c:s_variantFil, $float:__v:perc_mapped:3, $float:__v:perc_mapped:2, $string:__v:t:390:1, $string:__v:t:42:2, $string:__v:t:568:1, void:__t:518, boolean:__t:519, boolean:__t:764, string:__v:sampleInfoFilefilename-wait, $string:__v:c:s__nodups_so, int:__t:765, int:__t:766, $string:__v:c:s__nodups_sa, string:__t:528, string[int]:sampleLines, $string:__v:c:s__wdups_sor:2, $string:__v:t:31:1, $string:__v:c:s__wdups_sor:1, $string:__v:t:402:1, string:__t:537, string:__t:539, string:__t:785, $boolean:__v:t:602:1, $string:__v:t:33:1, $string:__v:RealignDir:1, $string:__v:c:s_, string:__t:790, $string:__v:c:s_bwa_mem_co:2, $string:__v:c:s__recalibra, $string:__v:t:426:1, $string:__v:c:s_bwa_mem_co:1, $string:__v:c:s_align:1, $string:__v:c:s_align:2, $string:__v:c:s_PICARD, $string:__v:c:s_align:3, $string:__v:c:s_GATK_Indel, string:__t:558, $string:__v:c:s_align:4, $string:__v:c:s_align:5, string:__t:556, $string:__v:c:s_align:6, $string:__v:c:s___minimum_, $string:__v:c:s_align:7, $string:__v:c:s_bwa_mem_co, $string:__v:t:415:1, $string:__v:c:s__wdups_sam, boolean:__t:327, string:__t:568, void:__t:326, $string:__v:t:404:1, $string:__v:c:s__Sorting_b, void:__t:338, $string:__v:c:s____QC_rule, $string:__v:c:s_align, $string:__v:c:s__wdups_bam, $string:__v:t:345:3, $string:__v:t:345:2, $string:__v:t:345:5, $string:__v:t:345:4, $string:__v:c:s__picard_me, $string:__v:novosortdir, $string:__v:t:443:1, void:__t:239, string:__t:482, boolean:__t:240, string:__t:488, $string:__v:c:s_:4, $string:__v:c:s_:3, $string:__v:c:s_:6, $string:__v:c:s_:5, $boolean:__v:t:728:1, boolean:__t:248, $string:__v:c:s_:2, $string:__v:c:s_:1, $string:__v:c:s__recalibra:2, $string:__v:t:467:1, $string:__v:c:s__recalibra:1, $string:__v:t:467:2, $string:__v:c:s__duplicati:1, string:__t:269, $string:__v:c:s__-2, float:perc_dup, $string:__v:c:s__mapping_c, $boolean:__v:__t:764, $string:__v:t:90:1, void:__t:298, $string:__v:t:90:2, $string:__v:c:s_docsQC_tes, boolean:__t:299, $string:__v:c:s__realignTa, $string:__v:t:26:1, $string:__v:novoaligndir, $string:__v:c:s__alignment:1, $string:__v:c:s__alignment:2, $boolean:__v:__t:382, $string:__v:c:s__mapping_c:1, $string:__v:t:398:1, $string:__v:t:750:1, $string:__v:c:s___maximum_, $string:__v:c:s__chr_vcfLi, $int:__v:t:687:1, $string:__v:t:17:1, $boolean:__v:t:519:1, $string:__v:t:785:1, $string:__v:t:387:1, $string:__v:t:17:2, $boolean:__v:__t:164, $boolean:__v:t:652:1, $boolean:__o:store, $string:__v:c:s_RG_IDs_LBs, $string:__v:c:s__wdups_sor, $string:__v:t:389:1, $string:__v:t:70:2, $string:__v:t:70:1, $string:__v:c:s_novosort:1, $string:__v:t:441:1, $string:__v:t:476:1, $string:__v:c:s_novosort:2, $boolean:__v:__t:367, $string:__v:c:s____QC_rule-1, $string:__v:c:s___minimum_:1, $string:__v:t:804, $string:__v:c:s_novosort:3, $string:__v:t:430:1, $boolean:__v:mapped_sampleInfoFile:1, $string:__v:t:416:1, $string:__v:c:s__alignment, $string:__v:inputFile:8, $string:__v:c:s___rule2_ok, $string:__v:t:175:1, $string:__v:t:778:2, $string:__v:t:778:1, $string:__v:c:s__GATKCombi:1, $string:__v:sampleName:19, $string:__v:sampleName:18, $string:__v:t:85:1, $string:__v:sampleName:13, $string:__v:sampleName:12, $string:__v:sampleName:11, $string:__v:sampleName:10, $string:__v:sampleName:17, $string:__v:c:s__recal_fou, $string:__v:sampleName:16, $string:__v:sampleName:15, $string:__v:sampleName:14, string:__t:806, $string:__v:c:s__-2:6, $string:__v:sampleName:20, $string:__v:c:s__-2:5, $string:__v:c:s__-2:7, $float:__v:t:360:1, $string:__v:c:s__-2:2, $string:__v:c:s__-2:1, $boolean:__v:t:153:1, $string:__v:c:s__-2:4, $string:__v:c:s__-2:3, string:__t:804, $string:__v:t:429:1, $string:__v:c:s___rule2_no, $string:__v:t:50:1, $string:__v:sampleName:22, $string:__v:sampleName:21, $string:__v:unified:1, string:__t:815, string:__t:816, $string:__v:c:s_jointVCFs, $string:__v:t:482:1, $int:__v:t:765:1, $string:__v:VarcallDir:1, $boolean:__v:t:240:1, $string:__v:t:74:1, $string:__v:t:373:1, $string:__v:c:s__real_foun, $boolean:__v:t:299:1, boolean:__t:602, void:__t:601, $float:__v:t:362:2, $string:__v:c:s__duplicati, $string:__v:c:s__realigned, $boolean:__o:ismapped, $string:__v:t:401:1, $string:__v:c:s_BWAMEM, $string:__v:c:s___maximum_:1, string:__t:400, string:__t:401, string:__t:404, string:__t:402, string:__t:403, $string:__v:c:s_novosort, $string:__v:c:s___raw_g_vc, $boolean:__v:t:327:1, void:__t:651, boolean:__t:652, $string:__v:t:425:1, $string:__v:t:43:1, $string:__v:t:43:2, string:__t:415, string:__t:416, void:__t:413, string:__t:414, string:__t:417, $string:__v:t:414:1, $boolean:__v:t:207:1, string:__t:426, string:__t:427, string:__t:425, string:__t:428, $string:__v:c:s_splitting_, string:__t:429, $string:__v:c:s_variant, string:__t:430, string:__t:431, $string:__v:t:403:1, $string:__v:c:s__GATKCombi-1, void:__t:440, string:__t:441, string:__t:444, int:__t:686, int:__t:687, string:__t:442, string:__t:443, boolean:__t:685, string:sampleName, void:__t:206, boolean:__t:207, $string:__v:t:427:1, $float:__v:c:f_100.0, $boolean:__v:mapped_sampleInfoFile, $string:__v:c:s_-1, $string:__v:__filename:inputFilename]
DEBUG Final variables to be eliminated: []
DEBUG Final variables to be eliminated: []
DEBUG Final variables to be eliminated: []
DEBUG Final variables to be eliminated: []
DEBUG Final variables to be eliminated: []
DEBUG Final variables to be eliminated: []
DEBUG Final variables to be eliminated: []
DEBUG Final variables to be eliminated: []
DEBUG Iteration: 6 Pass: demote globals
DEBUG Iteration: 6 Pass: Function signature changing
DEBUG Iteration: 6 Pass: Continuation fusion
DEBUG Iteration: 6 Pass: Wait coalescing
DEBUG Iteration: 6 Pass: Validate
DEBUG Iteration: 7 Pass: Loop hoisting
DEBUG Iteration: 7 Pass: Value numbering
DEBUG Could not find declaration for __v:configFile
DEBUG Could not find declaration for __v:configFile
DEBUG Could not find declaration for __v:configFile
DEBUG Could not find declaration for __v:configFile
DEBUG Could not find declaration for __v:configFile:1
DEBUG Could not find declaration for __v:configFile:1
DEBUG Could not find declaration for __v:configFile:1
DEBUG Could not find declaration for __v:configFile
DEBUG Could not find declaration for __v:configFile
DEBUG Could not find declaration for __v:configFile
DEBUG Iteration: 7 Pass: Loop simplify
DEBUG Iteration: 7 Pass: Dead code elimination
DEBUG Final variables to be eliminated: [$string:__v:t:781:1, $string:__v:samtoolsdir:6, $string:__v:__filename:output:3, $string:__v:t:301:1, string:__t:155, string:__t:58, string:__t:175, $string:__v:t:521:1, $string:__v:t:786:2, string:__v:unified, $string:__v:t:70:4, $string:__v:__wfilename:sampleInfoFile, $string:__v:t:755:1, $string:__v:inputFile:7, $string:__v:inputFile:6, $string:__v:inputFile:2, $string:__v:unified:1, $string:__v:__filename:metricsfile, $string:__v:VarcallDir:2, $string:__v:VarcallDir:3, $string:__v:t:155:1, $string:__v:t:529:1, $string:__v:t:529:2, string:__t:521, string:__t:301, $string:__v:RealignDir:5, $string:__v:RealignDir:6, $string:__v:RealignDir:3, $string:__v:RealignDir:4, $string:__v:RealignDir:2, string:__t:329, $string:__v:t:329:1, $string:__v:t:779:4, $string:__v:t:779:3, $string:__v:t:779:8, $string:__v:t:779:1]
DEBUG Final variables to be eliminated: []
DEBUG Final variables to be eliminated: []
DEBUG Final variables to be eliminated: []
DEBUG Final variables to be eliminated: []
DEBUG Final variables to be eliminated: []
DEBUG Final variables to be eliminated: []
DEBUG Final variables to be eliminated: []
DEBUG Final variables to be eliminated: []
DEBUG Iteration: 7 Pass: Function signature changing
DEBUG Iteration: 7 Pass: Continuation fusion
DEBUG Iteration: 7 Pass: Validate
DEBUG Iteration: 7 Pass: Wait coalescing
DEBUG Iteration: 7 Pass: Validate
DEBUG Iteration: 8 Pass: Function inlining
DEBUG Prune builtin: size
DEBUG Inline locs: {}
DEBUG Functions to prune: []
DEBUG changed=false
DEBUG Iteration: 8 Pass: Array build
DEBUG Iteration: 8 Pass: Struct build
DEBUG Iteration: 8 Pass: Unroll loops
DEBUG looking to unroll loops in __entry
DEBUG looking to unroll loops in cp
DEBUG looking to unroll loops in sed
DEBUG looking to unroll loops in echo
DEBUG looking to unroll loops in bwa_mem
DEBUG looking to unroll loops in samtools_view
DEBUG looking to unroll loops in novosort
DEBUG looking to unroll loops in find_files
DEBUG Iteration: 8 Pass: Validate
DEBUG Iteration: 8 Pass: Loop hoisting
DEBUG Iteration: 8 Pass: Value numbering
DEBUG Could not find declaration for __v:configFile
DEBUG Could not find declaration for __v:configFile
DEBUG Could not find declaration for __v:configFile
DEBUG Could not find declaration for __v:configFile
DEBUG Could not find declaration for __v:configFile:1
DEBUG Could not find declaration for __v:configFile:1
DEBUG Could not find declaration for __v:configFile:1
DEBUG Could not find declaration for __v:configFile
DEBUG Could not find declaration for __v:configFile
DEBUG Could not find declaration for __v:configFile
DEBUG Iteration: 8 Pass: Loop simplify
DEBUG Iteration: 8 Pass: Dead code elimination
DEBUG Final variables to be eliminated: [string:__t:467, string:__t:464, string:__t:473, string:__t:476, string:__t:470, string:__t:479, float:__t:362, string[int]:__t:276, string:__t:277, $string:__v:__filename:outputfile:1, $string:__v:__filename:outputfile:5, $string:__v:__filename:outputfile:4, $string:__v:__filename:outputfile:3, $string:__v:__filename:outputfile:2, string:__v:unified, $string:__v:reference:6, $string:__v:reference:5, $int:__v:thr:4, $string:__v:unified:1, $string:__v:__filename:inputFile:2, string:__t:820, string[int]:__t:717, int:__t:714, string:__t:604, $float:__v:t:362:1, $string:__v:t:654:1, $string:__v:t:604:1, $string:__v:t:277, string:__t:754, string:__t:654]
DEBUG Final variables to be eliminated: []
DEBUG Final variables to be eliminated: []
DEBUG Final variables to be eliminated: []
DEBUG Final variables to be eliminated: []
DEBUG Final variables to be eliminated: []
DEBUG Final variables to be eliminated: []
DEBUG Final variables to be eliminated: []
DEBUG Final variables to be eliminated: []
DEBUG Iteration: 8 Pass: Function signature changing
DEBUG Iteration: 8 Pass: Continuation fusion
DEBUG Iteration: 8 Pass: Wait coalescing
DEBUG Iteration: 8 Pass: Validate
DEBUG Iteration: 9 Pass: Propagate aliases
DEBUG Iteration: 9 Pass: Value numbering
DEBUG Could not find declaration for __v:configFile
DEBUG Could not find declaration for __v:configFile
DEBUG Could not find declaration for __v:configFile
DEBUG Could not find declaration for __v:configFile
DEBUG Could not find declaration for __v:configFile:1
DEBUG Could not find declaration for __v:configFile:1
DEBUG Could not find declaration for __v:configFile:1
DEBUG Could not find declaration for __v:configFile
DEBUG Could not find declaration for __v:configFile
DEBUG Could not find declaration for __v:configFile
DEBUG Iteration: 9 Pass: Loop simplify
DEBUG Iteration: 9 Pass: Dead code elimination
DEBUG Final variables to be eliminated: [string:__v:unified, $string:__v:unified:1]
DEBUG Final variables to be eliminated: []
DEBUG Final variables to be eliminated: []
DEBUG Final variables to be eliminated: []
DEBUG Final variables to be eliminated: []
DEBUG Final variables to be eliminated: []
DEBUG Final variables to be eliminated: []
DEBUG Final variables to be eliminated: []
DEBUG Final variables to be eliminated: []
DEBUG Iteration: 9 Pass: demote globals
DEBUG Iteration: 9 Pass: Function signature changing
DEBUG Iteration: 9 Pass: Continuation fusion
DEBUG Iteration: 9 Pass: Wait coalescing
DEBUG Iteration: 9 Pass: Validate
DEBUG Iteration: 9 Pass: Dead code elimination
DEBUG Final variables to be eliminated: []
DEBUG Final variables to be eliminated: []
DEBUG Final variables to be eliminated: []
DEBUG Final variables to be eliminated: []
DEBUG Final variables to be eliminated: []
DEBUG Final variables to be eliminated: []
DEBUG Final variables to be eliminated: []
DEBUG Final variables to be eliminated: []
DEBUG Iteration: 9 Pass: Prune unused functions
DEBUG Iteration: 9 Pass: Fixup variable passing
DEBUG Iteration: 9 Pass: Refcount adding
DEBUG Iteration: 9 Pass: Fixup variable passing
DEBUG Iteration: 9 Pass: Validate
DEBUG Optimisation done
DEBUG Using Swift IC to regenerate code
DEBUG Starting to generate program from Swift IC
DEBUG Generating required packages
DEBUG Done generating required packages
DEBUG generating struct types
DEBUG Done generating struct types
DEBUG generating work types
DEBUG Done generating work types
DEBUG Generating global constants
DEBUG Done generating global constants
DEBUG Generating global variables
DEBUG Done generating global variables
DEBUG Generating builtins
DEBUG generating: length
DEBUG TurbineGenerator: Defined built-in length
DEBUG generating: trace
DEBUG TurbineGenerator: Defined built-in trace
DEBUG generating: input_file
DEBUG TurbineGenerator: Defined built-in input_file
DEBUG generating: argv_accept
DEBUG TurbineGenerator: Defined built-in argv_accept
DEBUG generating: argv
DEBUG TurbineGenerator: Defined built-in argv
DEBUG generating: glob
DEBUG TurbineGenerator: Defined built-in glob
DEBUG generating: read
DEBUG TurbineGenerator: Defined built-in read
DEBUG generating: file_lines
DEBUG TurbineGenerator: Defined built-in file_lines
DEBUG generating: split
DEBUG TurbineGenerator: Defined built-in split
DEBUG generating: replaceAll
DEBUG TurbineGenerator: Defined built-in replaceAll
DEBUG generating: trim
DEBUG TurbineGenerator: Defined built-in trim
DEBUG generating: samtools_view2
DEBUG TurbineGenerator: Defined built-in samtools_view2
DEBUG Done generating builtin functions
DEBUG Generating functions
DEBUG Generating function __entry
DEBUG call builtin: glob
DEBUG call builtin: glob
DEBUG Done generating function __entry
DEBUG Generating function cp
DEBUG Done generating function cp
DEBUG Generating function sed
DEBUG Done generating function sed
DEBUG Generating function echo
DEBUG Done generating function echo
DEBUG Generating function bwa_mem
DEBUG Done generating function bwa_mem
DEBUG Generating function samtools_view
DEBUG Done generating function samtools_view
DEBUG Generating function novosort
DEBUG Done generating function novosort
DEBUG Generating function find_files
DEBUG Done generating function find_files
DEBUG Done generating functions
DEBUG Done using Swift IC to regenerate code
DEBUG STC done: 2016/11/28 02:18:30
