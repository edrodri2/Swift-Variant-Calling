
# Generated by stc version 0.7.2
# date                    : 2016/12/01 22:09:48
# Turbine version         : 0.9.1
# Input filename          : /home/azza/swift-project/Swift-Variant-Calling/VCcallingPipeline.swift
# Output filename         : /home/azza/swift-project/Swift-Variant-Calling/./swift-t-VCcallingPipeline.K7k.tic
# STC home                : /usr/local/src/swift-t-1.1/stc
# Turbine home            : /usr/local/src/swift-t-1.1/turbine
# Compiler settings:
# stc.auto-declare              : true
# stc.c_preprocess              : true
# stc.checkpointing             : true
# stc.compiler-debug            : true
# stc.debugging                 : COMMENTS
# stc.ic.output-file            : 
# stc.input_filename            : VCcallingPipeline.swift
# stc.log.file                  : 
# stc.log.trace                 : false
# stc.must_pass_wait_vars       : true
# stc.opt.algebra               : true
# stc.opt.array-build           : true
# stc.opt.batch-refcounts       : true
# stc.opt.cancel-refcounts      : true
# stc.opt.constant-fold         : true
# stc.opt.controlflow-fusion    : true
# stc.opt.dataflow-op-inline    : true
# stc.opt.dead-code-elim        : true
# stc.opt.demote-globals        : true
# stc.opt.disable-asserts       : false
# stc.opt.expand-loop-threshold-insts: 256
# stc.opt.expand-loop-threshold-iters: 16
# stc.opt.expand-loops          : false
# stc.opt.finalized-var         : true
# stc.opt.flatten-nested        : true
# stc.opt.full-function-inline  : false
# stc.opt.full-unroll           : false
# stc.opt.function-always-inline-threshold: 5
# stc.opt.function-inline       : true
# stc.opt.function-inline-threshold: 50
# stc.opt.function-signature    : true
# stc.opt.hoist                 : true
# stc.opt.hoist-refcounts       : true
# stc.opt.loop-simplify         : true
# stc.opt.max-iterations        : 10
# stc.opt.merge-refcounts       : true
# stc.opt.piggyback-refcounts   : true
# stc.opt.pipeline              : false
# stc.opt.propagate-aliases     : true
# stc.opt.reorder-insts         : false
# stc.opt.shared-constants      : true
# stc.opt.unroll-loop-threshold-insts: 192
# stc.opt.unroll-loop-threshold-iters: 8
# stc.opt.unroll-loops          : true
# stc.opt.value-number          : true
# stc.opt.wait-coalesce         : true
# stc.output_filename           : ./swift-t-VCcallingPipeline.K7k.tic
# stc.preproc.force-cpp         : false
# stc.preproc.force-gcc         : false
# stc.preprocess_only           : false
# stc.profile                   : false
# stc.refcounting               : true
# stc.rpath                     : /home/azza/swift-project/Swift-Variant-Calling/pipelinefunctions
# stc.stc_home                  : /usr/local/src/swift-t-1.1/stc
# stc.turbine.version           : 0.9.1
# stc.turbine_home              : /usr/local/src/swift-t-1.1/turbine
# stc.version                   : 0.7.2

# Metadata:

# rpath entries
lappend auto_path "/home/azza/swift-project/Swift-Variant-Calling/pipelinefunctions"
package require turbine 0.9.1
namespace import turbine::*


proc swift:constants {  } {
    turbine::c::log "function:swift:constants"
    global c:s__GATKCombi-2
    turbine::allocate_custom c:s__GATKCombi-2 string 1 1 1 1
    turbine::store_string ${c:s__GATKCombi-2} "*.GATKCombineGVCF.raw.vcf"
    global c:s_sknownSite
    turbine::allocate_custom c:s_sknownSite string 1 1 2 1
    turbine::store_string ${c:s_sknownSite} "s/^/--knownSites /g"
    global c:s_sknown_g
    turbine::allocate_custom c:s_sknown_g string 1 1 3 1
    turbine::store_string ${c:s_sknown_g} "s/^/-known /g"
    global c:s_svariant_g
    turbine::allocate_custom c:s_svariant_g string 1 1 4 1
    turbine::store_string ${c:s_svariant_g} "s/^/--variant /g"
}

package require align 0.2


proc swift:main {  } {
    turbine::c::log "function: __entry"
    # Var: string t:7 EXPR_TEMPORARY VCcallingPipeline.swift:29:33
    # Var: string t:777 EXPR_TEMPORARY VCcallingPipeline.swift:235:16
    # Var: string t:778 EXPR_TEMPORARY VCcallingPipeline.swift:235:40
    # Var: string t:779 EXPR_TEMPORARY VCcallingPipeline.swift:235:23
    # Var: string t:781 EXPR_TEMPORARY VCcallingPipeline.swift:235:41
    # Var: string t:786 EXPR_TEMPORARY VCcallingPipeline.swift:236:27
    # Var: $string v:configFilename VALUE_OF [string:configFilename]
    # Var: $void v:t:775 VALUE_OF [void:__t:775]
    # Var: int u:samples_processing_done VCcallingPipeline.swift:31:0
    # Var: file u:jointVCF VCcallingPipeline.swift:235:80
    # Var: file u:configFile VCcallingPipeline.swift:24:0
    # Var: file u:sampleInfoFile VCcallingPipeline.swift:29:0
    # Var: string[string] u:vars VCcallingPipeline.swift:27:0
    # Var: file u:variantFiles VCcallingPipeline.swift:236:42
    # Var: string t:11 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():41:88
    # Var: string t:13 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():41:106
    # Var: string t:15 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():41:148
    # Var: string t:35 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():54:14
    # Var: string t:80 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():66:5
    # Var: string t:340 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():121:54
    # Var: string t:345 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():122:55
    # Var: string t:348 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():124:31
    # Var: string t:453 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():157:17
    # Var: $file v:configFile VALUE_OF [file:configFile]
    # Var: $file v:configFile:1 VALUE_OF [file:configFile]
    # Var: $string$[int] v:configFileData VALUE_OF [string[int]:configFileData]
    # Var: boolean t:79 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():66:32
    # Var: float t:368 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():134:17
    # Var: string[int] u:indices VCcallingPipeline.swift:__entry():157:9
    lassign [ adlb::multicreate [ list string 1 1 5 ] [ list string 1 1 6 ] [ list string 2 1 7 ] [ list string 2 1 8 ] [ list string 1 1 9 ] [ list string 2 1 10 ] [ list integer 1 1 11 ] [ list container string string 17 1 15 ] [ list string 1 1 17 ] [ list string 1 1 18 ] [ list string 1 1 19 ] [ list string 1 1 20 ] [ list string 2 1 21 ] [ list string 2 1 22 ] [ list string 1 1 23 ] [ list string 1 1 24 ] [ list string 1 1 25 ] [ list integer 1 1 26 ] [ list float 1 1 27 ] [ list container integer string 1 1 28 ] ] t:7 t:777 t:778 t:779 t:781 t:786 u:samples_processing_done u:vars t:11 t:13 t:15 t:35 t:80 t:340 t:345 t:348 t:453 t:79 t:368 u:indices
    turbine::c::log "allocated t:7=<${t:7}> t:777=<${t:777}> t:778=<${t:778}> t:779=<${t:779}> t:781=<${t:781}>"
    turbine::c::log "allocated t:786=<${t:786}> u:samples_processing_done=<${u:samples_processing_done}> u:vars=<${u:vars}> t:11=<${t:11}> t:13=<${t:13}>"
    turbine::c::log "allocated t:15=<${t:15}> t:35=<${t:35}> t:80=<${t:80}> t:340=<${t:340}> t:345=<${t:345}>"
    turbine::c::log "allocated t:348=<${t:348}> t:453=<${t:453}> t:79=<${t:79}> t:368=<${t:368}> u:indices=<${u:indices}>"
    lassign [ turbine::make_file_tds [ adlb::multicreate [ list file 0 1 12 ] [ list file 1 1 13 ] [ list file 1 1 14 ] [ list file 1 1 16 ] ] [ list 1 0 0 1 ] ] u:jointVCF u:configFile u:sampleInfoFile u:variantFiles
    turbine::argv_accept_impl [ list "runfile" ]
    set v:configFilename [ turbine::argv_get_impl "runfile" ]
    set tcltmp:init_rc 1
    set v:configFile [ turbine::create_local_file_ref "" ${tcltmp:init_rc} 0 ]
    turbine::input_file_local v:configFile ${v:configFilename}
    turbine::store_file ${u:configFile} v:configFile 1
    set v:configFile:1 [ turbine::retrieve_file ${u:configFile} CACHED 1 ]
    set v:configFileData [ turbine::file_lines_impl ${v:configFile:1} ]
    turbine::container_reference ${u:vars} "SAMPLEINFORMATION" ${t:7} string
    turbine::trace_impl "####    Now launching joint_genotyping script for all SAMPLEs: each 200 together        ##########"
    turbine::container_reference ${u:vars} "OUTPUTDIR" ${t:779} string
    turbine::container_reference ${u:vars} "DELIVERYFOLDER" ${t:781} string
    turbine::container_reference ${u:vars} "TMPDIR" ${t:786} string
    turbine::container_reference ${u:vars} "SAMPLELB" ${t:11} string
    turbine::container_reference ${u:vars} "SAMPLEPL" ${t:13} string
    turbine::container_reference ${u:vars} "SAMPLECN" ${t:15} string
    turbine::container_reference ${u:vars} "MARKDUPLICATESTOOL" ${t:80} string
    turbine::container_reference ${u:vars} "DUP_CUTOFF" ${t:340} string
    turbine::container_reference ${u:vars} "MAP_CUTOFF" ${t:345} string
    turbine::container_reference ${u:vars} "SAMTOOLSDIR" ${t:348} string
    turbine::container_reference ${u:vars} "CHRNAMES" ${t:453} string
    dict for {tcltmp:ignore v:line} ${v:configFileData} {
        # Var: string[int] u:keyValuePair RENAMED [string[int]:keyValuePair] ./pipelinefunctions/miscellaneous.swift:getConfigVariables():8:16
        # Var: $string$[int] v:keyValuePair VALUE_OF [string[int]:keyValuePair]
        # Var: $string v:alias:name VALUE_OF [string:__alias:name]
        # Var: $string v:alias:value VALUE_OF [string:__alias:value]
        lassign [ adlb::multicreate [ list container integer string 1 2 29 ] ] u:keyValuePair
        turbine::c::log "allocated u:keyValuePair=<${u:keyValuePair}>"
        set v:keyValuePair [ turbine::split_impl ${v:line} "=" ]
        turbine::build_rec ${u:keyValuePair} ${v:keyValuePair} [ list container integer string ] 0 1
        set a:name [ adlb::subscript_container ${u:keyValuePair} 0 ]
        set v:alias:name [ turbine::retrieve_string ${a:name} ]
        set a:value [ adlb::subscript_container ${u:keyValuePair} 1 ]
        set v:alias:value [ turbine::retrieve_string ${a:value} CACHED 1 ]
        turbine::container_insert ${u:vars} ${v:alias:name} ${v:alias:value} string 0
        adlb::write_refcount_decr ${u:keyValuePair} 1
    }
    turbine::rule [ list ${u:samples_processing_done} ] "__entry-explicit-wait4 ${t:777} ${t:778} {${u:jointVCF}} ${u:samples_processing_done} {${u:variantFiles}} ${u:vars}"
    turbine::rule [ list ${t:7} ] "__entry-call_foreign-input_file ${t:11} ${t:13} ${t:15} ${t:340} ${t:345} ${t:348} ${t:35} ${t:368} ${t:7} ${t:778} ${t:779} ${t:786} ${t:79} ${t:80} ${u:indices} {${u:sampleInfoFile}} ${u:samples_processing_done} ${u:vars}"
    turbine::rule [ list ${t:786} ] "__entry-async_op-strcat-14 ${t:786} {${u:variantFiles}}"
    turbine::rule [ list ${t:80} ] "__entry-async_op-eq_string-2 ${t:79} ${t:80}"
    turbine::rule [ list ${t:340} ] "__entry-async_op-parse_float-4 ${t:340} ${t:368}"
    turbine::rule [ list ${t:453} ] "__entry-call_foreign-split-3 ${t:453} ${u:indices}"
    turbine::rule [ list ${t:779} ${t:781} ] "__entry-optmerged-11 ${t:35} ${t:777} ${t:778} ${t:779} ${t:781} {${u:jointVCF}}"
    turbine::decr_local_file_refcount v:configFile
    adlb::write_refcount_decr ${u:vars} 1
}


proc __entry-explicit-wait4 { t:777 t:778 u:jointVCF u:samples_processing_done u:variantFiles u:vars } {
    # Var: string c:s__GATKCombi-2 OPT_TEMPORARY
    global c:s__GATKCombi-2
    # Var: string[int] u:varlist VCcallingPipeline.swift:__entry():240:1
    lassign [ adlb::multicreate [ list container integer string 1 1 30 ] ] u:varlist
    turbine::c::log "allocated u:varlist=<${u:varlist}>"
    f:find_files ${u:variantFiles} ${t:778} ${c:s__GATKCombi-2} -100 "HARD" "RANK"
    turbine::rule [ list [ turbine::get_file_td ${u:variantFiles} ] ] "__entry-chain22 ${t:777} {${u:jointVCF}} {${u:variantFiles}} ${u:varlist} ${u:vars}"
    turbine::read_refcount_decr ${u:samples_processing_done} 1
    turbine::read_refcount_decr ${t:778} 1
}


proc __entry-chain22 { t:777 u:jointVCF u:variantFiles u:varlist u:vars } {
    # Var: string c:s_svariant_g OPT_TEMPORARY
    global c:s_svariant_g
    # Var: file t:807 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():240:48
    lassign [ turbine::make_file_tds [ adlb::multicreate [ list file 1 1 31 ] ] [ list 0 ] ] t:807
    f:sed ${t:807} ${u:variantFiles} ${c:s_svariant_g} -100 "HARD" "RANK"
    turbine::rule [ list [ turbine::get_file_td ${t:807} ] ] "__entry-call_foreign-read ${t:777} {${t:807}} {${u:jointVCF}} ${u:varlist} ${u:vars}"
    turbine::file_read_refcount_decr ${u:variantFiles} 1
}


proc __entry-call_foreign-read { t:777 t:807 u:jointVCF u:varlist u:vars } {
    # Var: $file v:t:807 VALUE_OF [file:__t:807]
    # Var: $string v:t:806 VALUE_OF [string:__t:806]
    # Var: $int v:n:4 RENAMED [$int:__v:n]
    # Var: $string v:t:805 VALUE_OF [string:__t:805]
    # Var: $string v:o:4 RENAMED [$string:__v:o]
    # Var: $string$[int] v:varlist VALUE_OF [string[int]:varlist]
    # Var: string t:813 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():241:27
    # Var: string t:817 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():241:51
    # Var: string t:821 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():241:92
    # Var: string t:823 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():241:113
    # Var: $string$[int] v:variants:1 RENAMED [$string$[int]:__v:variants] ./pipelinefunctions/joint_vcf.swift:GenotypeGVCFs():3:91
    lassign [ adlb::multicreate [ list string 1 1 32 ] [ list string 1 1 33 ] [ list string 1 1 34 ] [ list string 1 1 35 ] ] t:813 t:817 t:821 t:823
    turbine::c::log "allocated t:813=<${t:813}> t:817=<${t:817}> t:821=<${t:821}> t:823=<${t:823}>"
    set v:t:807 [ turbine::retrieve_file ${t:807} CACHED 1 ]
    set v:t:806 [ turbine::file_read_local ${v:t:807} ]
    set v:n:4 [ string length ${v:t:806} ]
    set v:t:805 [ turbine::replace_all_impl ${v:t:806} "\n" " " 0 ${v:n:4} ]
    set v:o:4 [ string trim ${v:t:805} ]
    set v:varlist [ turbine::split_impl ${v:o:4} " " ]
    turbine::build_rec ${u:varlist} ${v:varlist} [ list container integer string ] 0 1
    turbine::container_reference ${u:vars} "JAVADIR" ${t:813} string
    turbine::container_reference ${u:vars} "GATKDIR" ${t:817} string
    turbine::container_reference ${u:vars} "REFGENOMEDIR" ${t:821} string
    turbine::container_reference ${u:vars} "REFGENOME" ${t:823} string
    set v:variants:1 [ turbine::unpack_args ${u:varlist} 1 string ]
    turbine::rule [ list ${t:777} ${t:813} ${t:817} ${t:821} ${t:823} ] "__entry-async_op-dircat ${t:777} ${t:813} ${t:817} ${t:821} ${t:823} {${v:variants:1}} {${u:jointVCF}}"
    turbine::read_refcount_decr ${u:varlist} 1
}


proc __entry-async_op-dircat { t:777 t:813 t:817 t:821 t:823 v:variants:1 u:jointVCF } {
    # Var: $string v:t:821 VALUE_OF [string:__t:821]
    # Var: $string v:t:823 VALUE_OF [string:__t:823]
    # Var: $string v:t:820 VALUE_OF [string:__t:820]
    # Var: $string v:t:817 VALUE_OF [string:__t:817]
    # Var: $string v:t:816 VALUE_OF [string:__t:816]
    # Var: $string v:t:815 VALUE_OF [string:__t:815]
    # Var: $string v:javadir:7 RENAMED [$string:__v:javadir] ./pipelinefunctions/joint_vcf.swift:GenotypeGVCFs():3:91
    # Var: $string v:__filename:outputfile:7 RENAMED [$string:__v:__filename:outputfile] ./pipelinefunctions/joint_vcf.swift:GenotypeGVCFs():3:91
    # Var: $file v:outputfile:7 RENAMED [$file:__v:outputfile] ./pipelinefunctions/joint_vcf.swift:GenotypeGVCFs():3:91
    set v:t:821 [ turbine::retrieve_string ${t:821} CACHED 1 ]
    set v:t:823 [ turbine::retrieve_string ${t:823} CACHED 1 ]
    set v:t:820 "${v:t:821}/${v:t:823}"
    set v:t:817 [ turbine::retrieve_string ${t:817} CACHED 1 ]
    set v:t:816 "${v:t:817}/GenomeAnalysisTK.jar"
    set v:t:815 "${v:t:816}"
    set v:javadir:7 [ turbine::retrieve_string ${t:813} CACHED 1 ]
    set v:__filename:outputfile:7 [ turbine::retrieve_string ${t:777} CACHED 1 ]
    set tcltmp:init_rc 2
    set v:outputfile:7 [ turbine::create_local_file_ref ${v:__filename:outputfile:7} ${tcltmp:init_rc} 1 ]
    turbine::c::log [ list exec: __v:javadir:7 "-Xmx8g" "-jar" ${v:t:815} "-T" "GenotypeGVCFs" "-R" ${v:t:820} {*}${v:variants:1} "-o" ${v:__filename:outputfile:7} [ dict create ] ]
    turbine::exec_external ${v:javadir:7} [ dict create ] "-Xmx8g" "-jar" ${v:t:815} "-T" "GenotypeGVCFs" "-R" ${v:t:820} {*}${v:variants:1} "-o" ${v:__filename:outputfile:7}
    turbine::store_file ${u:jointVCF} v:outputfile:7 0
    turbine::decr_local_file_refcount v:outputfile:7
}


proc __entry-call_foreign-input_file { t:11 t:13 t:15 t:340 t:345 t:348 t:35 t:368 t:7 t:778 t:779 t:786 t:79 t:80 u:indices u:sampleInfoFile u:samples_processing_done u:vars } {
    # Var: $string v:t:7 VALUE_OF [string:__t:7]
    # Var: $file v:sampleInfoFile VALUE_OF [file:sampleInfoFile]
    # Var: $file v:sampleInfoFile:1 VALUE_OF [file:sampleInfoFile]
    # Var: $string$[int] v:sampleLines:1 VALUE_OF [string[int]:sampleLines]
    set v:t:7 [ turbine::retrieve_string ${t:7} CACHED 1 ]
    set tcltmp:init_rc 1
    set v:sampleInfoFile [ turbine::create_local_file_ref "" ${tcltmp:init_rc} 0 ]
    turbine::input_file_local v:sampleInfoFile ${v:t:7}
    turbine::store_file ${u:sampleInfoFile} v:sampleInfoFile 1
    set v:sampleInfoFile:1 [ turbine::retrieve_file ${u:sampleInfoFile} CACHED 1 ]
    set v:sampleLines:1 [ turbine::file_lines_impl ${v:sampleInfoFile:1} ]
    turbine::rule [ list ] "__entry-foreach-wait1 ${t:11} ${t:13} ${t:15} ${t:340} ${t:345} ${t:348} ${t:35} ${t:368} ${t:778} ${t:779} ${t:786} ${t:79} ${t:80} {${v:sampleLines:1}} ${u:indices} ${u:samples_processing_done} ${u:vars}"
    turbine::decr_local_file_refcount v:sampleInfoFile
}


proc __entry-foreach-wait1 { t:11 t:13 t:15 t:340 t:345 t:348 t:35 t:368 t:778 t:779 t:786 t:79 t:80 v:sampleLines:1 u:indices u:samples_processing_done u:vars } {
    set tcltmp:iters [ dict size ${v:sampleLines:1} ]
    turbine::read_refcount_incr ${t:340} [ expr { 3 * ${tcltmp:iters} } ]
    turbine::read_refcount_incr ${t:13} [ expr { ${tcltmp:iters} } ]
    turbine::read_refcount_incr ${t:35} [ expr { ${tcltmp:iters} } ]
    turbine::read_refcount_incr ${t:79} [ expr { ${tcltmp:iters} } ]
    turbine::read_refcount_incr ${t:345} [ expr { 2 * ${tcltmp:iters} } ]
    turbine::read_refcount_incr ${t:368} [ expr { ${tcltmp:iters} } ]
    turbine::read_refcount_incr ${t:786} [ expr { 4 * ${tcltmp:iters} } ]
    turbine::read_refcount_incr ${t:15} [ expr { ${tcltmp:iters} } ]
    turbine::read_refcount_incr ${t:11} [ expr { ${tcltmp:iters} } ]
    turbine::read_refcount_incr ${t:80} [ expr { ${tcltmp:iters} } ]
    turbine::read_refcount_incr ${u:indices} [ expr { ${tcltmp:iters} } ]
    turbine::read_refcount_incr ${t:778} [ expr { 2 * ${tcltmp:iters} } ]
    turbine::read_refcount_incr ${t:779} [ expr { 3 * ${tcltmp:iters} } ]
    turbine::read_refcount_incr ${u:vars} [ expr { 21 * ${tcltmp:iters} } ]
    turbine::read_refcount_incr ${t:348} [ expr { 6 * ${tcltmp:iters} } ]
    dict for {tcltmp:ignore v:sample} ${v:sampleLines:1} {
        # Var: string c:s_svariant_g OPT_TEMPORARY
        global c:s_svariant_g
        # Var: string[int] u:sampleInfo VCcallingPipeline.swift:__entry():36:1
        # Var: string u:read1 VCcallingPipeline.swift:__entry():38:1
        # Var: string u:read2 VCcallingPipeline.swift:__entry():39:1
        # Var: string u:rgheader VCcallingPipeline.swift:__entry():41:1
        # Var: string u:VarcallDir VCcallingPipeline.swift:__entry():45:1
        # Var: string u:RealignDir VCcallingPipeline.swift:__entry():46:1
        # Var: string t:26 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():50:22
        # Var: file u:dedupsortedbam VCcallingPipeline.swift:__entry():50:71
        # Var: string t:31 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():51:15
        # Var: file u:outbam VCcallingPipeline.swift:__entry():51:46
        # Var: string t:33 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():52:19
        # Var: file u:rawvariant VCcallingPipeline.swift:__entry():52:50
        # Var: file u:qcfile VCcallingPipeline.swift:__entry():54:69
        # Var: string t:42 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():55:18
        # Var: file u:mergedbam VCcallingPipeline.swift:__entry():55:78
        # Var: file u:mergedvariant VCcallingPipeline.swift:__entry():56:82
        # Var: file u:flagstats VCcallingPipeline.swift:__entry():59:87
        # Var: string t:64 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():62:18
        # Var: file u:alignedsam VCcallingPipeline.swift:__entry():62:63
        # Var: string t:70 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():63:45
        # Var: file u:chr_bamListfile VCcallingPipeline.swift:__entry():63:57
        # Var: file u:chr_vcfListfile VCcallingPipeline.swift:__entry():64:57
        # Var: string[int] u:stat VCcallingPipeline.swift:__entry():126:1
        # Var: string[int] t:350 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():127:14
        # Var: string[int] t:353 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():128:13
        # Var: string[int] t:356 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():129:12
        # Var: float u:perc_mapped VCcallingPipeline.swift:__entry():132:12
        # Var: float t:363 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():132:38
        # Var: int u:chromosomes_processing_done VCcallingPipeline.swift:__entry():158:1
        # Var: string[int] u:chr_bamList VCcallingPipeline.swift:__entry():217:1
        # Var: string t:730 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():222:38
        # Var: string[int] u:chr_vcfList VCcallingPipeline.swift:__entry():225:1
        # Var: file t:741 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():225:52
        # Var: $string$[int] v:sampleInfo VALUE_OF [string[int]:sampleInfo]
        # Var: $string v:alias:sampleName VALUE_OF [string:__alias:sampleName]
        # Var: $string v:alias:read1 VALUE_OF [string:__alias:read1]
        # Var: $string v:alias:read2 VALUE_OF [string:__alias:read2]
        # Var: $void v:t:333 VALUE_OF [void:__t:333]
        # Var: $void v:t:335 VALUE_OF [void:__t:335]
        # Var: $void v:t:451 VALUE_OF [void:__t:451]
        # Var: $string v:t:697 VALUE_OF [string:__t:697]
        # Var: $string v:t:696 VALUE_OF [string:__t:696]
        # Var: $void v:t:695 VALUE_OF [void:__t:695]
        # Var: $string v:t:735 VALUE_OF [string:__t:735]
        # Var: $string v:t:734 VALUE_OF [string:__t:734]
        # Var: $void v:t:733 VALUE_OF [void:__t:733]
        lassign [ adlb::multicreate [ list container integer string 1 2 36 ] [ list string 1 1 37 ] [ list string 1 1 38 ] [ list string 1 1 39 ] [ list string 1 1 40 ] [ list string 1 1 41 ] [ list string 2 1 42 ] [ list string 1 1 44 ] [ list string 1 1 46 ] [ list string 1 1 49 ] [ list string 2 1 53 ] [ list string 1 1 55 ] [ list container integer string 3 1 58 ] [ list container integer string 1 1 59 ] [ list container integer string 1 1 60 ] [ list container integer string 1 1 61 ] [ list float 1 1 62 ] [ list float 1 1 63 ] [ list integer 1 1 64 ] [ list container integer string 1 1 65 ] [ list string 1 1 66 ] [ list container integer string 1 1 67 ] ] u:sampleInfo u:read1 u:read2 u:rgheader u:VarcallDir u:RealignDir t:26 t:31 t:33 t:42 t:64 t:70 u:stat t:350 t:353 t:356 u:perc_mapped t:363 u:chromosomes_processing_done u:chr_bamList t:730 u:chr_vcfList
        turbine::c::log "allocated u:sampleInfo=<${u:sampleInfo}> u:read1=<${u:read1}> u:read2=<${u:read2}> u:rgheader=<${u:rgheader}> u:VarcallDir=<${u:VarcallDir}>"
        turbine::c::log "allocated u:RealignDir=<${u:RealignDir}> t:26=<${t:26}> t:31=<${t:31}> t:33=<${t:33}> t:42=<${t:42}>"
        turbine::c::log "allocated t:64=<${t:64}> t:70=<${t:70}> u:stat=<${u:stat}> t:350=<${t:350}> t:353=<${t:353}>"
        turbine::c::log "allocated t:356=<${t:356}> u:perc_mapped=<${u:perc_mapped}> t:363=<${t:363}> u:chromosomes_processing_done=<${u:chromosomes_processing_done}> u:chr_bamList=<${u:chr_bamList}>"
        turbine::c::log "allocated t:730=<${t:730}> u:chr_vcfList=<${u:chr_vcfList}>"
        lassign [ turbine::make_file_tds [ adlb::multicreate [ list file 4 1 43 ] [ list file 1 1 45 ] [ list file 1 1 47 ] [ list file 6 1 48 ] [ list file 1 1 50 ] [ list file 1 1 51 ] [ list file 1 1 52 ] [ list file 2 1 54 ] [ list file 1 1 56 ] [ list file 1 1 57 ] [ list file 1 1 68 ] ] [ list 1 1 1 1 1 1 1 1 1 1 0 ] ] u:dedupsortedbam u:outbam u:rawvariant u:qcfile u:mergedbam u:mergedvariant u:flagstats u:alignedsam u:chr_bamListfile u:chr_vcfListfile t:741
        set v:sampleInfo [ turbine::split_impl ${v:sample} " " ]
        turbine::build_rec ${u:sampleInfo} ${v:sampleInfo} [ list container integer string ] 0 1
        set a:sampleName [ adlb::subscript_container ${u:sampleInfo} 0 ]
        set v:alias:sampleName [ turbine::retrieve_string ${a:sampleName} ]
        set a:read1 [ adlb::subscript_container ${u:sampleInfo} 1 ]
        set v:alias:read1 [ turbine::retrieve_string ${a:read1} ]
        turbine::store_string ${u:read1} ${v:alias:read1}
        set a:read2 [ adlb::subscript_container ${u:sampleInfo} 2 ]
        set v:alias:read2 [ turbine::retrieve_string ${a:read2} CACHED 1 ]
        turbine::store_string ${u:read2} ${v:alias:read2}
        turbine::trace_impl "#############     END ALIGNMENT-DEDUPLICATION BLOCK                   ############"
        turbine::trace_impl "########   ALIGNMENT QC TEST   FOR SAMPLE" ${v:alias:sampleName} "             ###############"
        set a:t:351 [ adlb::subscript_container ${u:stat} 4 ]
        set a:tot_mapped [ adlb::subscript_container ${t:350} 0 ]
        set a:t:354 [ adlb::subscript_container ${u:stat} 0 ]
        set a:tot_reads [ adlb::subscript_container ${t:353} 0 ]
        set a:t:357 [ adlb::subscript_container ${u:stat} 3 ]
        set a:tot_dups [ adlb::subscript_container ${t:356} 0 ]
        turbine::trace_impl "#############   WRAP UP the align_dedup stage   ############"
        set v:t:697 "#######   MERGE BAMS BLOCK STARTS HERE  FOR             ${v:alias:sampleName}"
        set v:t:696 "${v:t:697}      ######"
        turbine::trace_impl ${v:t:696}
        set v:t:735 "#######   MERGE VCFs BLOCK STARTS HERE  FOR             ${v:alias:sampleName}"
        set v:t:734 "${v:t:735}       ######"
        turbine::trace_impl ${v:t:734}
        f:sed ${t:741} ${u:chr_vcfListfile} ${c:s_svariant_g} -100 "HARD" "RANK"
        turbine::rule [ list ${t:79} ] [ list __entry-if1 ${t:26} ${t:348} ${t:64} ${t:779} ${t:786} ${t:79} ${t:80} ${v:alias:read1} ${v:alias:read2} ${v:alias:sampleName} ${u:alignedsam} ${u:dedupsortedbam} ${u:qcfile} ${u:read1} ${u:read2} ${u:rgheader} ${u:vars} ]
        turbine::rule [ list ${u:chromosomes_processing_done} ] [ list __entry-explicit-wait3 ${u:RealignDir} ${u:VarcallDir} ${t:31} ${t:348} ${t:42} ${t:730} ${t:786} ${v:alias:sampleName} ${u:chr_bamList} ${u:chr_bamListfile} ${u:chr_vcfListfile} ${u:chromosomes_processing_done} ${u:mergedbam} ${u:outbam} ${u:qcfile} ${u:vars} ]
        turbine::rule [ list ${t:11} ${t:13} ${t:15} ] [ list __entry-async_op-sprintf ${t:11} ${t:13} ${t:15} ${v:alias:sampleName} ${u:rgheader} ]
        turbine::rule [ list ${t:35} ] "__entry-copy_in_filename ${t:35} {${u:qcfile}}"
        turbine::rule [ list ${t:778} ] [ list __entry-async_op-dircat-1 ${t:42} ${t:730} ${t:778} ${v:alias:sampleName} ${u:mergedbam} ${u:mergedvariant} ]
        turbine::rule [ list ${t:340} ] "__entry-call_foreign-trace ${t:340}"
        turbine::rule [ list ${t:345} ] "__entry-call_foreign-trace-1 ${t:345}"
        turbine::rule [ list ${a:t:351} ] "__entry-call_foreign-split {${a:t:351}} ${t:350}"
        turbine::rule [ list ${a:t:354} ] "__entry-call_foreign-split-1 {${a:t:354}} ${t:353}"
        turbine::rule [ list ${a:t:357} ] "__entry-call_foreign-split-2 {${a:t:357}} ${t:356}"
        turbine::rule [ list ${a:tot_reads} ] [ list __entry-async_op-parse_float ${a:tot_dups} ${a:tot_reads} ${t:340} ${t:345} ${t:363} ${t:368} ${v:alias:sampleName} ${u:perc_mapped} ${u:qcfile} ]
        turbine::rule [ list ${a:tot_mapped} ] "__entry-async_op-parse_float-3 {${a:tot_mapped}} ${t:363}"
        turbine::rule [ list [ turbine::get_file_td ${t:741} ] ] "__entry-call_foreign-read-2 ${t:33} {${t:741}} ${t:778} {${v:sampleLines:1}} ${u:chr_vcfList} {${u:mergedvariant}} {${u:rawvariant}} ${u:samples_processing_done} ${u:vars}"
        turbine::rule [ list ${t:779} ] [ list __entry-optmerged-5 ${u:RealignDir} ${u:VarcallDir} ${t:26} ${t:31} ${t:33} ${t:348} ${t:70} ${t:779} ${v:alias:sampleName} ${u:chromosomes_processing_done} ${u:dedupsortedbam} ${u:flagstats} ${u:indices} ${u:outbam} ${u:qcfile} ${u:rawvariant} ${u:stat} ${u:vars} ]
        turbine::rule [ list ${t:786} ] [ list __entry-optmerged-10 ${t:64} ${t:70} ${t:786} ${v:alias:sampleName} ${u:alignedsam} ${u:chr_bamListfile} ${u:chr_vcfListfile} ]
        adlb::write_refcount_decr ${u:sampleInfo} 1
    }
    turbine::read_refcount_decr ${t:340} 1
    turbine::read_refcount_decr ${t:368} 1
    turbine::read_refcount_decr ${t:786} 1
    turbine::read_refcount_decr ${t:15} 1
    turbine::read_refcount_decr ${t:345} 1
    turbine::read_refcount_decr ${t:11} 1
    turbine::read_refcount_decr ${t:13} 1
    turbine::read_refcount_decr ${t:35} 1
    turbine::read_refcount_decr ${t:79} 1
    turbine::read_refcount_decr ${t:80} 1
    turbine::read_refcount_decr ${u:indices} 1
    turbine::read_refcount_decr ${t:779} 1
    turbine::read_refcount_decr ${t:348} 1
    turbine::read_refcount_decr ${t:778} 1
    turbine::read_refcount_decr ${u:vars} 1
}


proc __entry-if1 { t:26 t:348 t:64 t:779 t:786 t:79 t:80 v:alias:read1 v:alias:read2 v:alias:sampleName u:alignedsam u:dedupsortedbam u:qcfile u:read1 u:read2 u:rgheader u:vars } {
    # Var: $boolean v:__t:79 VALUE_OF [boolean:__t:79] VCcallingPipeline.swift:__entry():66:35
    set v:__t:79 [ turbine::retrieve_integer ${t:79} CACHED 1 ]
    if { ${v:__t:79} } {
        # Var: string t:85 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():68:17
        # Var: file u:dedupsam VCcallingPipeline.swift:__entry():68:63
        # Var: string t:90 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():69:17
        # Var: file u:dedupbam VCcallingPipeline.swift:__entry():69:66
        # Var: string t:95 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():71:23
        # Var: string t:97 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():71:53
        # Var: string[int] t:99 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():71:72
        # Var: string t:100 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():71:72
        # Var: int t:102 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():71:95
        # Var: string t:103 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():71:106
        # Var: string t:126 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():76:35
        # Var: string t:130 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():77:28
        # Var: string t:131 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():77:35
        # Var: string[int] t:140 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():77:129
        # Var: $void v:t:83 VALUE_OF [void:__t:83]
        lassign [ adlb::multicreate [ list string 1 1 69 ] [ list string 1 1 71 ] [ list string 1 1 73 ] [ list string 1 1 74 ] [ list container integer string 1 1 75 ] [ list string 1 1 76 ] [ list integer 1 1 77 ] [ list string 1 1 78 ] [ list string 1 1 79 ] [ list string 1 1 80 ] [ list string 1 1 81 ] [ list container integer string 1 1 82 ] ] t:85 t:90 t:95 t:97 t:99 t:100 t:102 t:103 t:126 t:130 t:131 t:140
        turbine::c::log "allocated t:85=<${t:85}> t:90=<${t:90}> t:95=<${t:95}> t:97=<${t:97}> t:99=<${t:99}>"
        turbine::c::log "allocated t:100=<${t:100}> t:102=<${t:102}> t:103=<${t:103}> t:126=<${t:126}> t:130=<${t:130}>"
        turbine::c::log "allocated t:131=<${t:131}> t:140=<${t:140}>"
        lassign [ turbine::make_file_tds [ adlb::multicreate [ list file 1 1 70 ] [ list file 1 1 72 ] ] [ list 1 1 ] ] u:dedupsam u:dedupbam
        turbine::array_kv_build ${t:140} [ ::adlb::dict_create 0 "--compression" 1 "1" ] 1 integer string
        turbine::trace_impl "##CASE1: dedup tool is ## SAMBLASTER ##. We use a single command for align-deduplication ##"
        turbine::container_reference ${u:vars} "BWADIR" ${t:95} string
        turbine::container_reference ${u:vars} "BWAINDEX" ${t:97} string
        turbine::container_reference ${u:vars} "BWAMEMPARAMS" ${t:100} string
        turbine::container_reference ${u:vars} "PBSCORES" ${t:103} string
        f:bwa_mem ${u:alignedsam} ${t:95} ${u:read1} ${u:read2} ${t:97} ${t:99} ${t:102} ${u:rgheader} -100 "HARD" "RANK"
        turbine::container_reference ${u:vars} "NOVOCRAFTDIR" ${t:131} string
        f:novosort ${u:dedupsortedbam} ${t:130} ${u:dedupbam} ${t:786} ${t:102} ${t:140} -100 "HARD" "RANK"
        turbine::rule [ list [ turbine::get_file_td ${u:alignedsam} ] ] [ list __entry-chain1 ${t:102} ${t:126} ${t:348} ${t:64} ${t:85} ${t:90} ${v:alias:sampleName} ${u:alignedsam} ${u:dedupbam} ${u:dedupsam} ${u:qcfile} ${u:vars} ]
        turbine::rule [ list ${t:786} ] [ list __entry-async_op-strcat ${t:786} ${t:85} ${v:alias:sampleName} ${u:dedupsam} ]
        turbine::rule [ list ${t:779} ] [ list __entry-async_op-strcat-1 ${t:126} ${t:779} ${t:90} ${v:alias:sampleName} ${u:dedupbam} ]
        turbine::rule [ list ${t:100} ] "__entry-arr_copy_in_imm ${t:100} ${t:99}"
        turbine::rule [ list ${t:103} ] "__entry-async_op-parse_int ${t:102} ${t:103}"
        turbine::rule [ list ${t:131} ] "__entry-async_op-strcat-2 ${t:130} ${t:131}"
        turbine::rule [ list ${t:26} ${t:348} [ turbine::get_file_td ${u:dedupsortedbam} ] ] [ list __entry-optmerged ${t:26} ${t:348} ${v:alias:sampleName} ${u:dedupsortedbam} ${u:qcfile} ]
        turbine::read_refcount_decr ${t:99} 1
        turbine::read_refcount_decr ${t:140} 1
        turbine::read_refcount_decr ${t:95} 1
        turbine::read_refcount_decr ${t:130} 1
        turbine::read_refcount_decr ${t:97} 1
    } else {
        # Var: string t:159 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():82:19
        # Var: file u:alignedbam VCcallingPipeline.swift:__entry():82:67
        lassign [ adlb::multicreate [ list string 2 1 87 ] ] t:159
        turbine::c::log "allocated t:159=<${t:159}>"
        lassign [ turbine::make_file_tds [ adlb::multicreate [ list file 2 1 88 ] ] [ list 1 ] ] u:alignedbam
        turbine::read_refcount_incr ${u:rgheader} 1
        turbine::read_refcount_incr ${u:vars} 2
        turbine::file_read_refcount_incr ${u:qcfile} 1
        turbine::read_refcount_incr ${t:348} 1
        turbine::file_read_refcount_incr ${u:alignedsam} 1
        turbine::read_refcount_incr ${t:779} 1
        turbine::read_refcount_incr ${t:80} 1
        turbine::read_refcount_incr ${u:read1} 1
        turbine::read_refcount_incr ${u:read2} 1
        turbine::read_refcount_incr ${t:26} 1
        turbine::read_refcount_incr ${t:786} 1
        turbine::rule [ list ${t:779} ] [ list __entry-async_op-strcat-3 ${t:159} ${t:779} ${v:alias:sampleName} ${u:alignedbam} ]
        turbine::rule [ list ${t:80} ] [ list __entry-async_op-eq_string ${t:159} ${t:26} ${t:348} ${t:64} ${t:779} ${t:786} ${t:80} ${v:alias:read1} ${v:alias:read2} ${v:alias:sampleName} ${u:alignedbam} ${u:alignedsam} ${u:dedupsortedbam} ${u:qcfile} ${u:read1} ${u:read2} ${u:rgheader} ${u:vars} ]
    }
    turbine::read_refcount_decr ${t:786} 1
    turbine::read_refcount_decr ${t:26} 1
    turbine::file_read_refcount_decr ${u:dedupsortedbam} 1
    turbine::read_refcount_decr ${u:read2} 1
    turbine::read_refcount_decr ${t:64} 1
    turbine::read_refcount_decr ${u:read1} 1
    turbine::read_refcount_decr ${t:80} 1
    turbine::read_refcount_decr ${t:779} 1
    turbine::file_read_refcount_decr ${u:alignedsam} 1
    turbine::read_refcount_decr ${t:348} 1
    turbine::file_read_refcount_decr ${u:qcfile} 1
    turbine::read_refcount_decr ${u:vars} 1
    turbine::read_refcount_decr ${u:rgheader} 1
}


proc __entry-chain1 { t:102 t:126 t:348 t:64 t:85 t:90 v:alias:sampleName u:alignedsam u:dedupbam u:dedupsam u:qcfile u:vars } {
    # Var: string t:105 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():72:24
    lassign [ adlb::multicreate [ list string 1 1 83 ] ] t:105
    turbine::c::log "allocated t:105=<${t:105}>"
    turbine::container_reference ${u:vars} "SAMBLASTERDIR" ${t:105} string
    turbine::rule [ list ${t:105} ${t:64} ${t:85} ] [ list samblaster-app-leaf1 ${t:102} ${t:105} ${t:126} ${t:348} ${t:64} ${t:85} ${t:90} ${v:alias:sampleName} ${u:alignedsam} ${u:dedupbam} ${u:dedupsam} ${u:qcfile} ]
}


proc samblaster-app-leaf1 { t:102 t:105 t:126 t:348 t:64 t:85 t:90 v:alias:sampleName u:alignedsam u:dedupbam u:dedupsam u:qcfile } {
    # Var: $string v:samblasterdir RENAMED [$string:__v:samblasterdir] ./pipelinefunctions/align_dedup.swift:samblaster():27:43
    # Var: $string v:__filename:inputFile RENAMED [$string:__v:__filename:inputFile] ./pipelinefunctions/align_dedup.swift:samblaster():27:43
    # Var: $string v:__filename:output RENAMED [$string:__v:__filename:output] ./pipelinefunctions/align_dedup.swift:samblaster():27:43
    # Var: $file v:inputFile:1 RENAMED [$file:__v:inputFile] ./pipelinefunctions/align_dedup.swift:samblaster():27:43
    # Var: $file v:output RENAMED [$file:__v:output] ./pipelinefunctions/align_dedup.swift:samblaster():27:43
    set v:samblasterdir [ turbine::retrieve_string ${t:105} CACHED 1 ]
    set v:__filename:inputFile [ turbine::retrieve_string ${t:64} CACHED 1 ]
    set v:__filename:output [ turbine::retrieve_string ${t:85} CACHED 1 ]
    set v:inputFile:1 [ turbine::retrieve_file ${u:alignedsam} CACHED 1 ]
    set tcltmp:init_rc 2
    set v:output [ turbine::create_local_file_ref ${v:__filename:output} ${tcltmp:init_rc} 1 ]
    turbine::c::log [ list exec: __v:samblasterdir "-M" "-i" ${v:__filename:inputFile} [ dict create "stdout" ${v:__filename:output} ] ]
    turbine::exec_external ${v:samblasterdir} [ dict create "stdout" ${v:__filename:output} ] "-M" "-i" ${v:__filename:inputFile}
    turbine::store_file ${u:dedupsam} v:output 0
    turbine::rule [ list ] [ list __entry-chain2 ${t:102} ${t:126} ${t:348} ${t:90} ${v:alias:sampleName} ${u:dedupbam} ${u:dedupsam} ${u:qcfile} ]
    turbine::decr_local_file_refcount v:output
}


proc __entry-chain2 { t:102 t:126 t:348 t:90 v:alias:sampleName u:dedupbam u:dedupsam u:qcfile } {
    # Var: string[int] t:112 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():73:89
    lassign [ adlb::multicreate [ list container integer string 1 1 84 ] ] t:112
    turbine::c::log "allocated t:112=<${t:112}>"
    turbine::array_kv_build ${t:112} [ ::adlb::dict_create 0 "-u" ] 1 integer string
    f:samtools_view ${u:dedupbam} ${t:348} ${u:dedupsam} ${t:102} ${t:112} -100 "HARD" "RANK"
    turbine::rule [ list ${t:348} ${t:90} [ turbine::get_file_td ${u:dedupbam} ] ] [ list __entry-chain3 ${t:126} ${t:348} ${t:90} ${v:alias:sampleName} ${u:dedupbam} ${u:qcfile} ]
    turbine::read_refcount_decr ${t:112} 1
    turbine::file_read_refcount_decr ${u:dedupsam} 1
    turbine::read_refcount_decr ${t:102} 1
}


proc __entry-chain3 { t:126 t:348 t:90 v:alias:sampleName u:dedupbam u:qcfile } {
    # Var: $string v:samtoolsdir RENAMED [$string:__v:samtoolsdir]
    # Var: $string v:inputFile RENAMED [$string:__v:inputFile]
    # Var: $int v:numAlignments RENAMED [$int:__v:numAlignments]
    # Var: $boolean v:t:117 VALUE_OF [boolean:__t:117]
    # Var: $boolean v:t:124 VALUE_OF [boolean:__t:124]
    set v:samtoolsdir [ turbine::retrieve_string ${t:348} CACHED 1 ]
    set v:inputFile [ turbine::retrieve_string ${t:90} CACHED 1 ]
    set v:numAlignments [ alignment::samtools_view ${v:samtoolsdir} ${v:inputFile} ]
    set v:t:117 [ expr { ${v:numAlignments} == 0 } ]
    set v:t:124 [ expr { ${v:numAlignments} > 0 } ]
    set tcltmp:prio [ turbine::get_priority ]
    turbine::set_priority ${tcltmp:prio}
    adlb::spawn 0 [ list __entry-if2 ${v:alias:sampleName} ${v:inputFile} ${v:t:117} ${u:qcfile} ]
    turbine::reset_priority
    turbine::rule [ list ${t:126} ] "__entry-async_op-assert ${t:126} ${v:t:124}"
    turbine::file_read_refcount_decr ${u:dedupbam} 1
}


proc __entry-if2 { v:alias:sampleName v:inputFile v:t:117 u:qcfile } {
    if { ${v:t:117} } {
        # Var: string t:119 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():75:46
        # Var: $string v:t:119 VALUE_OF [string:__t:119]
        lassign [ adlb::multicreate [ list string 1 1 85 ] ] t:119
        turbine::c::log "allocated t:119=<${t:119}>"
        set v:t:119 "${v:alias:sampleName}\tALIGNMENT\tFAIL\tbwa mem command did not produce alignments for ${v:inputFile}\n"
        turbine::store_string ${t:119} ${v:t:119}
        f:echo ${u:qcfile} ${t:119} -100 "HARD" "RANK"
        turbine::read_refcount_decr ${t:119} 1
    }
    turbine::file_read_refcount_decr ${u:qcfile} 1
}


proc __entry-async_op-assert { t:126 v:t:124 } {
    # Var: $string v:t:126:1 VALUE_OF [string:__t:126]
    # Var: $void v:t:123 VALUE_OF [void:__t:123]
    set v:t:126:1 [ turbine::retrieve_string ${t:126} CACHED 1 ]
    turbine::assert_impl ${v:t:124} ${v:t:126:1}
}


proc __entry-async_op-strcat { t:786 t:85 v:alias:sampleName u:dedupsam } {
    # Var: $string v:t:786:3 VALUE_OF [string:__t:786]
    # Var: $string v:t:85 VALUE_OF [string:__t:85]
    set v:t:786:3 [ turbine::retrieve_string ${t:786} CACHED 1 ]
    set v:t:85 "${v:t:786:3}/align/${v:alias:sampleName}.wdups.sam"
    turbine::store_string ${t:85} ${v:t:85}
    turbine::set_filename_val ${u:dedupsam} ${v:t:85}
}


proc __entry-async_op-strcat-1 { t:126 t:779 t:90 v:alias:sampleName u:dedupbam } {
    # Var: $string v:t:779:5 VALUE_OF [string:__t:779]
    # Var: $string v:t:90 VALUE_OF [string:__t:90]
    # Var: $string v:t:126 VALUE_OF [string:__t:126]
    set v:t:779:5 [ turbine::retrieve_string ${t:779} CACHED 1 ]
    set v:t:90 "${v:t:779:5}/align/${v:alias:sampleName}.wdups.bam"
    turbine::store_string ${t:90} ${v:t:90}
    turbine::set_filename_val ${u:dedupbam} ${v:t:90}
    set v:t:126 "bwa mem command did not produce alignments for ${v:t:90} alignment failed"
    turbine::store_string ${t:126} ${v:t:126}
}


proc __entry-arr_copy_in_imm { t:100 t:99 } {
    # Var: $string v:t:100 VALUE_OF [string:__t:100]
    set v:t:100 [ turbine::retrieve_string ${t:100} CACHED 1 ]
    turbine::array_kv_build ${t:99} [ ::adlb::dict_create 0 ${v:t:100} ] 1 integer string
}


proc __entry-async_op-parse_int { t:102 t:103 } {
    # Var: $string v:t:103 VALUE_OF [string:__t:103]
    # Var: $int v:t:102 VALUE_OF [int:__t:102]
    set v:t:103 [ turbine::retrieve_string ${t:103} CACHED 1 ]
    set v:t:102 [ turbine::parse_int_impl ${v:t:103} 10 ]
    turbine::store_integer ${t:102} ${v:t:102}
}


proc __entry-async_op-strcat-2 { t:130 t:131 } {
    # Var: $string v:t:131 VALUE_OF [string:__t:131]
    # Var: $string v:t:130 VALUE_OF [string:__t:130]
    set v:t:131 [ turbine::retrieve_string ${t:131} CACHED 1 ]
    set v:t:130 "${v:t:131}/novosort"
    turbine::store_string ${t:130} ${v:t:130}
}


proc __entry-optmerged { t:26 t:348 v:alias:sampleName u:dedupsortedbam u:qcfile } {
    # Var: $string v:t:26:2 VALUE_OF [string:__t:26]
    # Var: $string v:t:155 VALUE_OF [string:__t:155]
    # Var: $string v:samtoolsdir:1 RENAMED [$string:__v:samtoolsdir]
    # Var: $int v:numAlignments:1 RENAMED [$int:__v:numAlignments]
    # Var: $boolean v:t:146 VALUE_OF [boolean:__t:146]
    # Var: $boolean v:t:153 VALUE_OF [boolean:__t:153]
    # Var: $void v:t:152 VALUE_OF [void:__t:152]
    set v:t:26:2 [ turbine::retrieve_string ${t:26} CACHED 1 ]
    set v:t:155 "novosort command did not produce alignments for ${v:t:26:2} Sorting bam failed"
    set v:samtoolsdir:1 [ turbine::retrieve_string ${t:348} CACHED 1 ]
    set v:numAlignments:1 [ alignment::samtools_view ${v:samtoolsdir:1} ${v:t:26:2} ]
    set v:t:146 [ expr { ${v:numAlignments:1} == 0 } ]
    set v:t:153 [ expr { ${v:numAlignments:1} > 0 } ]
    turbine::assert_impl ${v:t:153} ${v:t:155}
    set tcltmp:prio [ turbine::get_priority ]
    turbine::set_priority ${tcltmp:prio}
    adlb::spawn 0 [ list __entry-if3 ${v:alias:sampleName} ${v:t:146} ${v:t:26:2} ${u:qcfile} ]
    turbine::reset_priority
    turbine::file_read_refcount_decr ${u:dedupsortedbam} 1
}


proc __entry-if3 { v:alias:sampleName v:t:146 v:t:26:2 u:qcfile } {
    if { ${v:t:146} } {
        # Var: string t:148 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():79:55
        # Var: $string v:t:148 VALUE_OF [string:__t:148]
        lassign [ adlb::multicreate [ list string 1 1 86 ] ] t:148
        turbine::c::log "allocated t:148=<${t:148}>"
        set v:t:148 "${v:alias:sampleName}\tALIGNMENT\tFAIL\t novosort command did not produce alignments for ${v:t:26:2}\n"
        turbine::store_string ${t:148} ${v:t:148}
        f:echo ${u:qcfile} ${t:148} -100 "HARD" "RANK"
        turbine::read_refcount_decr ${t:148} 1
    }
    turbine::file_read_refcount_decr ${u:qcfile} 1
}


proc __entry-async_op-strcat-3 { t:159 t:779 v:alias:sampleName u:alignedbam } {
    # Var: $string v:t:779:6 VALUE_OF [string:__t:779]
    # Var: $string v:t:159 VALUE_OF [string:__t:159]
    set v:t:779:6 [ turbine::retrieve_string ${t:779} CACHED 1 ]
    set v:t:159 "${v:t:779:6}/align/${v:alias:sampleName}.nodups.bam"
    turbine::store_string ${t:159} ${v:t:159}
    turbine::set_filename_val ${u:alignedbam} ${v:t:159}
}


proc __entry-async_op-eq_string { t:159 t:26 t:348 t:64 t:779 t:786 t:80 v:alias:read1 v:alias:read2 v:alias:sampleName u:alignedbam u:alignedsam u:dedupsortedbam u:qcfile u:read1 u:read2 u:rgheader u:vars } {
    # Var: $string v:t:80:1 VALUE_OF [string:__t:80]
    # Var: $boolean v:t:164 VALUE_OF [boolean:__t:164]
    set v:t:80:1 [ turbine::retrieve_string ${t:80} CACHED 1 ]
    set v:t:164 [ string equal ${v:t:80:1} "PICARD" ]
    if { ${v:t:164} } {
        # Var: file u:alignedsortedbam VCcallingPipeline.swift:__entry():85:75
        # Var: file u:metricsfile VCcallingPipeline.swift:__entry():86:70
        # Var: string t:180 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():87:24
        # Var: string t:182 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():87:54
        # Var: string[int] t:184 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():87:73
        # Var: string t:185 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():87:73
        # Var: int t:187 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():87:96
        # Var: string t:188 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():87:107
        # Var: string t:209 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():91:38
        # Var: string t:213 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():92:31
        # Var: string t:214 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():92:38
        # Var: string[int] t:223 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():92:120
        # Var: string t:242 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():96:45
        # Var: $void v:t:168 VALUE_OF [void:__t:168]
        lassign [ adlb::multicreate [ list string 1 1 91 ] [ list string 1 1 92 ] [ list container integer string 1 1 93 ] [ list string 1 1 94 ] [ list integer 1 1 95 ] [ list string 1 1 96 ] [ list string 1 1 97 ] [ list string 1 1 98 ] [ list string 1 1 99 ] [ list container integer string 1 1 100 ] [ list string 1 1 101 ] ] t:180 t:182 t:184 t:185 t:187 t:188 t:209 t:213 t:214 t:223 t:242
        turbine::c::log "allocated t:180=<${t:180}> t:182=<${t:182}> t:184=<${t:184}> t:185=<${t:185}> t:187=<${t:187}>"
        turbine::c::log "allocated t:188=<${t:188}> t:209=<${t:209}> t:213=<${t:213}> t:214=<${t:214}> t:223=<${t:223}>"
        turbine::c::log "allocated t:242=<${t:242}>"
        lassign [ turbine::make_file_tds [ adlb::multicreate [ list file 1 1 89 ] [ list file 0 1 90 ] ] [ list 1 1 ] ] u:alignedsortedbam u:metricsfile
        turbine::read_refcount_incr ${t:779} 1
        turbine::read_refcount_incr ${t:26} 1
        turbine::read_refcount_incr ${t:159} 1
        turbine::array_kv_build ${t:223} [ ::adlb::dict_create ] 1 integer string
        turbine::trace_impl "##CASE 2: dedup tool is ## PICARD ##. One command for align, one for sort, one for dedup ##"
        turbine::container_reference ${u:vars} "BWADIR" ${t:180} string
        turbine::container_reference ${u:vars} "BWAINDEX" ${t:182} string
        turbine::container_reference ${u:vars} "BWAMEMPARAMS" ${t:185} string
        turbine::container_reference ${u:vars} "PBSCORES" ${t:188} string
        f:bwa_mem ${u:alignedsam} ${t:180} ${u:read1} ${u:read2} ${t:182} ${t:184} ${t:187} ${u:rgheader} -100 "HARD" "RANK"
        turbine::container_reference ${u:vars} "NOVOCRAFTDIR" ${t:214} string
        f:novosort ${u:alignedsortedbam} ${t:213} ${u:alignedbam} ${t:786} ${t:187} ${t:223} -100 "HARD" "RANK"
        turbine::rule [ list [ turbine::get_file_td ${u:alignedsam} ] ] [ list __entry-chain5 ${t:159} ${t:187} ${t:209} ${t:348} ${v:alias:sampleName} ${u:alignedbam} ${u:alignedsam} ${u:qcfile} ]
        turbine::rule [ list ${t:185} ] "__entry-arr_copy_in_imm-1 ${t:184} ${t:185}"
        turbine::rule [ list ${t:188} ] "__entry-async_op-parse_int-1 ${t:187} ${t:188}"
        turbine::rule [ list ${t:159} ] "__entry-async_op-strcat-4 ${t:159} ${t:209}"
        turbine::rule [ list ${t:214} ] "__entry-async_op-strcat-5 ${t:213} ${t:214}"
        turbine::rule [ list ${t:26} ] "__entry-async_op-strcat-6 ${t:242} ${t:26}"
        turbine::rule [ list ${t:779} ] [ list __entry-optmerged-1 ${t:242} ${t:26} ${t:348} ${t:779} ${t:786} ${v:alias:sampleName} ${u:alignedsortedbam} ${u:dedupsortedbam} ${u:metricsfile} ${u:qcfile} ${u:vars} ]
        turbine::read_refcount_decr ${t:223} 1
        turbine::read_refcount_decr ${t:213} 1
        turbine::read_refcount_decr ${t:180} 1
        turbine::read_refcount_decr ${t:184} 1
        turbine::read_refcount_decr ${t:182} 1
    } else {
        # Var: string t:249 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():99:7
        # Var: $void v:t:246 VALUE_OF [void:__t:246]
        lassign [ adlb::multicreate [ list string 1 1 107 ] ] t:249
        turbine::c::log "allocated t:249=<${t:249}>"
        turbine::read_refcount_incr ${u:rgheader} 1
        turbine::read_refcount_incr ${t:348} 2
        turbine::file_read_refcount_incr ${u:alignedsam} 1
        turbine::read_refcount_incr ${u:read1} 1
        turbine::read_refcount_incr ${t:64} 1
        turbine::read_refcount_incr ${u:read2} 1
        turbine::file_read_refcount_incr ${u:alignedbam} 2
        turbine::file_read_refcount_incr ${u:dedupsortedbam} 1
        turbine::trace_impl "##CASE DEFAULT: dedup tool is ## NOVOSORT ##. We use one command for dup-sort ##"
        turbine::container_reference ${u:vars} "ALIGNERTOOL" ${t:249} string
        turbine::rule [ list [ turbine::get_file_td ${u:alignedbam} ] ] [ list __entry-explicit-wait1 ${t:26} ${t:348} ${t:786} ${v:alias:sampleName} ${u:alignedbam} ${u:dedupsortedbam} ${u:qcfile} ${u:vars} ]
        turbine::rule [ list ${t:249} ] [ list __entry-async_op-eq_string-1 ${t:249} ${t:348} ${t:64} ${v:alias:read1} ${v:alias:read2} ${u:alignedbam} ${u:alignedsam} ${u:read1} ${u:read2} ${u:rgheader} ${u:vars} ]
        turbine::rule [ list ${t:159} ${t:348} ] [ list __entry-optmerged-3 ${t:159} ${t:348} ${v:alias:sampleName} ${u:qcfile} ]
    }
    turbine::read_refcount_decr ${t:159} 1
    turbine::read_refcount_decr ${t:786} 1
    turbine::read_refcount_decr ${t:26} 1
    turbine::file_read_refcount_decr ${u:dedupsortedbam} 1
    turbine::file_read_refcount_decr ${u:alignedbam} 1
    turbine::read_refcount_decr ${u:read2} 1
    turbine::read_refcount_decr ${t:64} 1
    turbine::read_refcount_decr ${u:read1} 1
    turbine::read_refcount_decr ${t:779} 1
    turbine::file_read_refcount_decr ${u:alignedsam} 1
    turbine::read_refcount_decr ${t:348} 1
    turbine::file_read_refcount_decr ${u:qcfile} 1
    turbine::read_refcount_decr ${u:vars} 1
    turbine::read_refcount_decr ${u:rgheader} 1
}


proc __entry-chain5 { t:159 t:187 t:209 t:348 v:alias:sampleName u:alignedbam u:alignedsam u:qcfile } {
    # Var: string[int] t:195 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():88:94
    lassign [ adlb::multicreate [ list container integer string 1 1 102 ] ] t:195
    turbine::c::log "allocated t:195=<${t:195}>"
    turbine::array_kv_build ${t:195} [ ::adlb::dict_create 0 "-u" ] 1 integer string
    f:samtools_view ${u:alignedbam} ${t:348} ${u:alignedsam} ${t:187} ${t:195} -100 "HARD" "RANK"
    turbine::rule [ list ${t:159} ${t:348} [ turbine::get_file_td ${u:alignedbam} ] ] [ list __entry-chain6 ${t:159} ${t:209} ${t:348} ${v:alias:sampleName} ${u:alignedbam} ${u:qcfile} ]
    turbine::read_refcount_decr ${t:187} 1
    turbine::file_read_refcount_decr ${u:alignedsam} 1
    turbine::read_refcount_decr ${t:195} 1
}


proc __entry-chain6 { t:159 t:209 t:348 v:alias:sampleName u:alignedbam u:qcfile } {
    # Var: $string v:samtoolsdir:2 RENAMED [$string:__v:samtoolsdir]
    # Var: $string v:inputFile:3 RENAMED [$string:__v:inputFile]
    # Var: $int v:numAlignments:2 RENAMED [$int:__v:numAlignments]
    # Var: $boolean v:t:200 VALUE_OF [boolean:__t:200]
    # Var: $boolean v:t:207 VALUE_OF [boolean:__t:207]
    set v:samtoolsdir:2 [ turbine::retrieve_string ${t:348} CACHED 1 ]
    set v:inputFile:3 [ turbine::retrieve_string ${t:159} CACHED 1 ]
    set v:numAlignments:2 [ alignment::samtools_view ${v:samtoolsdir:2} ${v:inputFile:3} ]
    set v:t:200 [ expr { ${v:numAlignments:2} == 0 } ]
    set v:t:207 [ expr { ${v:numAlignments:2} > 0 } ]
    set tcltmp:prio [ turbine::get_priority ]
    turbine::set_priority ${tcltmp:prio}
    adlb::spawn 0 [ list __entry-if5 ${v:alias:sampleName} ${v:inputFile:3} ${v:t:200} ${u:qcfile} ]
    turbine::reset_priority
    turbine::rule [ list ${t:209} ] "__entry-async_op-assert-1 ${t:209} ${v:t:207}"
    turbine::file_read_refcount_decr ${u:alignedbam} 1
}


proc __entry-if5 { v:alias:sampleName v:inputFile:3 v:t:200 u:qcfile } {
    if { ${v:t:200} } {
        # Var: string t:202 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():90:49
        # Var: $string v:t:202 VALUE_OF [string:__t:202]
        lassign [ adlb::multicreate [ list string 1 1 103 ] ] t:202
        turbine::c::log "allocated t:202=<${t:202}>"
        set v:t:202 "${v:alias:sampleName}\tALIGNMENT\tFAIL\tbwa mem command did not produce alignments for ${v:inputFile:3}\n"
        turbine::store_string ${t:202} ${v:t:202}
        f:echo ${u:qcfile} ${t:202} -100 "HARD" "RANK"
        turbine::read_refcount_decr ${t:202} 1
    }
    turbine::file_read_refcount_decr ${u:qcfile} 1
}


proc __entry-async_op-assert-1 { t:209 v:t:207 } {
    # Var: $string v:t:209:1 VALUE_OF [string:__t:209]
    # Var: $void v:t:206 VALUE_OF [void:__t:206]
    set v:t:209:1 [ turbine::retrieve_string ${t:209} CACHED 1 ]
    turbine::assert_impl ${v:t:207} ${v:t:209:1}
}


proc __entry-arr_copy_in_imm-1 { t:184 t:185 } {
    # Var: $string v:t:185 VALUE_OF [string:__t:185]
    set v:t:185 [ turbine::retrieve_string ${t:185} CACHED 1 ]
    turbine::array_kv_build ${t:184} [ ::adlb::dict_create 0 ${v:t:185} ] 1 integer string
}


proc __entry-async_op-parse_int-1 { t:187 t:188 } {
    # Var: $string v:t:188 VALUE_OF [string:__t:188]
    # Var: $int v:t:187 VALUE_OF [int:__t:187]
    set v:t:188 [ turbine::retrieve_string ${t:188} CACHED 1 ]
    set v:t:187 [ turbine::parse_int_impl ${v:t:188} 10 ]
    turbine::store_integer ${t:187} ${v:t:187}
}


proc __entry-async_op-strcat-4 { t:159 t:209 } {
    # Var: $string v:t:159:2 VALUE_OF [string:__t:159]
    # Var: $string v:t:209 VALUE_OF [string:__t:209]
    set v:t:159:2 [ turbine::retrieve_string ${t:159} CACHED 1 ]
    set v:t:209 "bwa mem command did not produce alignments for ${v:t:159:2} alignment failed"
    turbine::store_string ${t:209} ${v:t:209}
}


proc __entry-async_op-strcat-5 { t:213 t:214 } {
    # Var: $string v:t:214 VALUE_OF [string:__t:214]
    # Var: $string v:t:213 VALUE_OF [string:__t:213]
    set v:t:214 [ turbine::retrieve_string ${t:214} CACHED 1 ]
    set v:t:213 "${v:t:214}/novosort"
    turbine::store_string ${t:213} ${v:t:213}
}


proc __entry-async_op-strcat-6 { t:242 t:26 } {
    # Var: $string v:t:26:3 VALUE_OF [string:__t:26]
    # Var: $string v:t:242 VALUE_OF [string:__t:242]
    set v:t:26:3 [ turbine::retrieve_string ${t:26} CACHED 1 ]
    set v:t:242 "picard command did not produce alignments for ${v:t:26:3} deduplication failed"
    turbine::store_string ${t:242} ${v:t:242}
}


proc __entry-optmerged-1 { t:242 t:26 t:348 t:779 t:786 v:alias:sampleName u:alignedsortedbam u:dedupsortedbam u:metricsfile u:qcfile u:vars } {
    # Var: $string v:t:779:7 VALUE_OF [string:__t:779]
    # Var: $string v:t:170 VALUE_OF [string:__t:170]
    # Var: $string v:t:175 VALUE_OF [string:__t:175]
    set v:t:779:7 [ turbine::retrieve_string ${t:779} CACHED 1 ]
    set v:t:170 "${v:t:779:7}/align/${v:alias:sampleName}.nodups.sorted.bam"
    set v:t:175 "${v:t:779:7}/align/${v:alias:sampleName}.picard.metrics"
    turbine::set_filename_val ${u:alignedsortedbam} ${v:t:170}
    turbine::set_filename_val ${u:metricsfile} ${v:t:175}
    turbine::rule [ list [ turbine::get_file_td ${u:alignedsortedbam} ] ] [ list __entry-chain7 ${t:242} ${t:26} ${t:348} ${t:786} ${v:alias:sampleName} ${v:t:170} ${v:t:175} ${u:alignedsortedbam} ${u:dedupsortedbam} ${u:metricsfile} ${u:qcfile} ${u:vars} ]
}


proc __entry-chain7 { t:242 t:26 t:348 t:786 v:alias:sampleName v:t:170 v:t:175 u:alignedsortedbam u:dedupsortedbam u:metricsfile u:qcfile u:vars } {
    # Var: string t:224 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():93:39
    # Var: string t:226 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():93:56
    lassign [ adlb::multicreate [ list string 1 1 104 ] [ list string 1 1 105 ] ] t:224 t:226
    turbine::c::log "allocated t:224=<${t:224}> t:226=<${t:226}>"
    turbine::container_reference ${u:vars} "JAVADIR" ${t:224} string
    turbine::container_reference ${u:vars} "PICARDDIR" ${t:226} string
    turbine::rule [ list ${t:224} ${t:226} ${t:26} ${t:786} ] [ list picard-app-leaf1 ${t:224} ${t:226} ${t:242} ${t:26} ${t:348} ${t:786} ${v:alias:sampleName} ${v:t:170} ${v:t:175} ${u:alignedsortedbam} ${u:dedupsortedbam} ${u:metricsfile} ${u:qcfile} ]
}


proc picard-app-leaf1 { t:224 t:226 t:242 t:26 t:348 t:786 v:alias:sampleName v:t:170 v:t:175 u:alignedsortedbam u:dedupsortedbam u:metricsfile u:qcfile } {
    # Var: $string v:javadir RENAMED [$string:__v:javadir] ./pipelinefunctions/align_dedup.swift:picard():45:212
    # Var: $string v:picarddir RENAMED [$string:__v:picarddir] ./pipelinefunctions/align_dedup.swift:picard():45:212
    # Var: $string v:__filename:outputfile RENAMED [$string:__v:__filename:outputfile] ./pipelinefunctions/align_dedup.swift:picard():45:212
    # Var: $string v:tmpdir RENAMED [$string:__v:tmpdir] ./pipelinefunctions/align_dedup.swift:picard():45:212
    # Var: $file v:inputFile:5 RENAMED [$file:__v:inputFile] ./pipelinefunctions/align_dedup.swift:picard():45:212
    # Var: $file v:outputfile RENAMED [$file:__v:outputfile] ./pipelinefunctions/align_dedup.swift:picard():45:212
    # Var: $file v:metricsfile RENAMED [$file:__v:metricsfile] ./pipelinefunctions/align_dedup.swift:picard():45:212
    set v:javadir [ turbine::retrieve_string ${t:224} CACHED 1 ]
    set v:picarddir [ turbine::retrieve_string ${t:226} CACHED 1 ]
    set v:__filename:outputfile [ turbine::retrieve_string ${t:26} CACHED 1 ]
    set v:tmpdir [ turbine::retrieve_string ${t:786} CACHED 1 ]
    set v:inputFile:5 [ turbine::retrieve_file ${u:alignedsortedbam} CACHED 1 ]
    set tcltmp:init_rc 2
    set v:outputfile [ turbine::create_local_file_ref ${v:__filename:outputfile} ${tcltmp:init_rc} 1 ]
    set tcltmp:init_rc 2
    set v:metricsfile [ turbine::create_local_file_ref ${v:t:175} ${tcltmp:init_rc} 1 ]
    turbine::c::log [ list exec: __v:javadir "-Xmx8g" "-jar" ${v:picarddir} "MarkDuplicates" "INPUT=" ${v:t:170} "OUTPUT=" ${v:__filename:outputfile} "METRICS_FILE=" ${v:t:175} "TMP_DIR=" ${v:tmpdir} "ASSUME_SORTED=true" "MAX_RECORDS_IN_RAM=null" "CREATE_INDEX=true" "VALIDATION_STRINGENCY=SILENT" [ dict create ] ]
    turbine::exec_external ${v:javadir} [ dict create ] "-Xmx8g" "-jar" ${v:picarddir} "MarkDuplicates" "INPUT=" ${v:t:170} "OUTPUT=" ${v:__filename:outputfile} "METRICS_FILE=" ${v:t:175} "TMP_DIR=" ${v:tmpdir} "ASSUME_SORTED=true" "MAX_RECORDS_IN_RAM=null" "CREATE_INDEX=true" "VALIDATION_STRINGENCY=SILENT"
    turbine::store_file ${u:dedupsortedbam} v:outputfile 0
    turbine::store_file ${u:metricsfile} v:metricsfile 0
    turbine::rule [ list ${t:348} ] [ list __entry-chain8 ${t:242} ${t:348} ${v:__filename:outputfile} ${v:alias:sampleName} ${u:qcfile} ]
    turbine::decr_local_file_refcount v:outputfile
    turbine::decr_local_file_refcount v:metricsfile
}


proc __entry-chain8 { t:242 t:348 v:__filename:outputfile v:alias:sampleName u:qcfile } {
    # Var: $string v:samtoolsdir:3 RENAMED [$string:__v:samtoolsdir]
    # Var: $int v:numAlignments:3 RENAMED [$int:__v:numAlignments]
    # Var: $boolean v:t:233 VALUE_OF [boolean:__t:233]
    # Var: $boolean v:t:240 VALUE_OF [boolean:__t:240]
    set v:samtoolsdir:3 [ turbine::retrieve_string ${t:348} CACHED 1 ]
    set v:numAlignments:3 [ alignment::samtools_view ${v:samtoolsdir:3} ${v:__filename:outputfile} ]
    set v:t:233 [ expr { ${v:numAlignments:3} == 0 } ]
    set v:t:240 [ expr { ${v:numAlignments:3} > 0 } ]
    set tcltmp:prio [ turbine::get_priority ]
    turbine::set_priority ${tcltmp:prio}
    adlb::spawn 0 [ list __entry-if6 ${v:__filename:outputfile} ${v:alias:sampleName} ${v:t:233} ${u:qcfile} ]
    turbine::reset_priority
    turbine::rule [ list ${t:242} ] "__entry-async_op-assert-2 ${t:242} ${v:t:240}"
}


proc __entry-if6 { v:__filename:outputfile v:alias:sampleName v:t:233 u:qcfile } {
    if { ${v:t:233} } {
        # Var: string t:235 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():95:56
        # Var: $string v:t:235 VALUE_OF [string:__t:235]
        lassign [ adlb::multicreate [ list string 1 1 106 ] ] t:235
        turbine::c::log "allocated t:235=<${t:235}>"
        set v:t:235 "${v:alias:sampleName}\tALIGNMENT\tFAIL\t picard command did not produce alignments for ${v:__filename:outputfile}\n"
        turbine::store_string ${t:235} ${v:t:235}
        f:echo ${u:qcfile} ${t:235} -100 "HARD" "RANK"
        turbine::read_refcount_decr ${t:235} 1
    }
    turbine::file_read_refcount_decr ${u:qcfile} 1
}


proc __entry-async_op-assert-2 { t:242 v:t:240 } {
    # Var: $string v:t:242:1 VALUE_OF [string:__t:242]
    # Var: $void v:t:239 VALUE_OF [void:__t:239]
    set v:t:242:1 [ turbine::retrieve_string ${t:242} CACHED 1 ]
    turbine::assert_impl ${v:t:240} ${v:t:242:1}
}


proc __entry-explicit-wait1 { t:26 t:348 t:786 v:alias:sampleName u:alignedbam u:dedupsortedbam u:qcfile u:vars } {
    # Var: string t:305 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():110:30
    # Var: string t:306 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():110:37
    # Var: int t:312 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():110:102
    # Var: string t:313 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():110:113
    # Var: string[int] t:315 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():110:133
    lassign [ adlb::multicreate [ list string 1 1 108 ] [ list string 1 1 109 ] [ list integer 1 1 110 ] [ list string 1 1 111 ] [ list container integer string 1 1 112 ] ] t:305 t:306 t:312 t:313 t:315
    turbine::c::log "allocated t:305=<${t:305}> t:306=<${t:306}> t:312=<${t:312}> t:313=<${t:313}> t:315=<${t:315}>"
    turbine::array_kv_build ${t:315} [ ::adlb::dict_create 0 "--markDuplicates" ] 1 integer string
    turbine::container_reference ${u:vars} "NOVOCRAFTDIR" ${t:306} string
    turbine::container_reference ${u:vars} "PBSCORES" ${t:313} string
    f:novosort ${u:dedupsortedbam} ${t:305} ${u:alignedbam} ${t:786} ${t:312} ${t:315} -100 "HARD" "RANK"
    turbine::rule [ list ${t:306} ] "__entry-async_op-strcat-7 ${t:305} ${t:306}"
    turbine::rule [ list ${t:313} ] "__entry-async_op-parse_int-2 ${t:312} ${t:313}"
    turbine::rule [ list ${t:26} ${t:348} [ turbine::get_file_td ${u:dedupsortedbam} ] ] [ list __entry-optmerged-2 ${t:26} ${t:348} ${v:alias:sampleName} ${u:dedupsortedbam} ${u:qcfile} ]
    turbine::read_refcount_decr ${t:786} 1
    turbine::read_refcount_decr ${t:312} 1
    turbine::file_read_refcount_decr ${u:alignedbam} 1
    turbine::read_refcount_decr ${t:315} 1
    turbine::read_refcount_decr ${t:305} 1
}


proc __entry-async_op-strcat-7 { t:305 t:306 } {
    # Var: $string v:t:306 VALUE_OF [string:__t:306]
    # Var: $string v:t:305 VALUE_OF [string:__t:305]
    set v:t:306 [ turbine::retrieve_string ${t:306} CACHED 1 ]
    set v:t:305 "${v:t:306}/novosort"
    turbine::store_string ${t:305} ${v:t:305}
}


proc __entry-async_op-parse_int-2 { t:312 t:313 } {
    # Var: $string v:t:313 VALUE_OF [string:__t:313]
    # Var: $int v:t:312 VALUE_OF [int:__t:312]
    set v:t:313 [ turbine::retrieve_string ${t:313} CACHED 1 ]
    set v:t:312 [ turbine::parse_int_impl ${v:t:313} 10 ]
    turbine::store_integer ${t:312} ${v:t:312}
}


proc __entry-optmerged-2 { t:26 t:348 v:alias:sampleName u:dedupsortedbam u:qcfile } {
    # Var: $string v:t:26:4 VALUE_OF [string:__t:26]
    # Var: $string v:t:329 VALUE_OF [string:__t:329]
    # Var: $string v:samtoolsdir:4 RENAMED [$string:__v:samtoolsdir]
    # Var: $int v:numAlignments:4 RENAMED [$int:__v:numAlignments]
    # Var: $boolean v:t:320 VALUE_OF [boolean:__t:320]
    # Var: $boolean v:t:327 VALUE_OF [boolean:__t:327]
    # Var: $void v:t:326 VALUE_OF [void:__t:326]
    set v:t:26:4 [ turbine::retrieve_string ${t:26} CACHED 1 ]
    set v:t:329 "novosort command did not produce alignments for ${v:t:26:4}sorting and deduplication failed"
    set v:samtoolsdir:4 [ turbine::retrieve_string ${t:348} CACHED 1 ]
    set v:numAlignments:4 [ alignment::samtools_view ${v:samtoolsdir:4} ${v:t:26:4} ]
    set v:t:320 [ expr { ${v:numAlignments:4} == 0 } ]
    set v:t:327 [ expr { ${v:numAlignments:4} > 0 } ]
    turbine::assert_impl ${v:t:327} ${v:t:329}
    set tcltmp:prio [ turbine::get_priority ]
    turbine::set_priority ${tcltmp:prio}
    adlb::spawn 0 [ list __entry-if9 ${v:alias:sampleName} ${v:t:26:4} ${v:t:320} ${u:qcfile} ]
    turbine::reset_priority
    turbine::file_read_refcount_decr ${u:dedupsortedbam} 1
}


proc __entry-if9 { v:alias:sampleName v:t:26:4 v:t:320 u:qcfile } {
    if { ${v:t:320} } {
        # Var: string t:322 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():112:57
        # Var: $string v:t:322 VALUE_OF [string:__t:322]
        lassign [ adlb::multicreate [ list string 1 1 113 ] ] t:322
        turbine::c::log "allocated t:322=<${t:322}>"
        set v:t:322 "${v:alias:sampleName}\tALIGNMENT\tFAIL\tnovosort command did not produce alignments for ${v:t:26:4}\n"
        turbine::store_string ${t:322} ${v:t:322}
        f:echo ${u:qcfile} ${t:322} -100 "HARD" "RANK"
        turbine::read_refcount_decr ${t:322} 1
    }
    turbine::file_read_refcount_decr ${u:qcfile} 1
}


proc __entry-async_op-eq_string-1 { t:249 t:348 t:64 v:alias:read1 v:alias:read2 u:alignedbam u:alignedsam u:read1 u:read2 u:rgheader u:vars } {
    # Var: $string v:t:249 VALUE_OF [string:__t:249]
    # Var: $boolean v:t:248 VALUE_OF [boolean:__t:248]
    set v:t:249 [ turbine::retrieve_string ${t:249} CACHED 1 ]
    set v:t:248 [ string equal ${v:t:249} "BWAMEM" ]
    if { ${v:t:248} } {
        # Var: string t:252 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():100:25
        # Var: string t:254 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():100:55
        # Var: string[int] t:256 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():100:74
        # Var: string t:257 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():100:74
        # Var: int t:259 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():100:97
        # Var: string t:260 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():100:108
        lassign [ adlb::multicreate [ list string 1 1 114 ] [ list string 1 1 115 ] [ list container integer string 1 1 116 ] [ list string 1 1 117 ] [ list integer 1 1 118 ] [ list string 1 1 119 ] ] t:252 t:254 t:256 t:257 t:259 t:260
        turbine::c::log "allocated t:252=<${t:252}> t:254=<${t:254}> t:256=<${t:256}> t:257=<${t:257}> t:259=<${t:259}>"
        turbine::c::log "allocated t:260=<${t:260}>"
        turbine::read_refcount_incr ${u:vars} 1
        turbine::container_reference ${u:vars} "BWADIR" ${t:252} string
        turbine::container_reference ${u:vars} "BWAINDEX" ${t:254} string
        turbine::container_reference ${u:vars} "BWAMEMPARAMS" ${t:257} string
        turbine::container_reference ${u:vars} "PBSCORES" ${t:260} string
        f:bwa_mem ${u:alignedsam} ${t:252} ${u:read1} ${u:read2} ${t:254} ${t:256} ${t:259} ${u:rgheader} -100 "HARD" "RANK"
        turbine::rule [ list [ turbine::get_file_td ${u:alignedsam} ] ] "__entry-chain9 ${t:259} ${t:348} {${u:alignedbam}} {${u:alignedsam}}"
        turbine::rule [ list ${t:257} ] "__entry-arr_copy_in_imm-2 ${t:256} ${t:257}"
        turbine::rule [ list ${t:260} ] "__entry-async_op-parse_int-3 ${t:259} ${t:260}"
        turbine::read_refcount_decr ${t:254} 1
        turbine::read_refcount_decr ${t:252} 1
        turbine::read_refcount_decr ${t:256} 1
    } else {
        # Var: string t:270 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():103:34
        # Var: string t:274 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():103:87
        # Var: int t:279 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():103:138
        # Var: string t:280 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():103:149
        lassign [ adlb::multicreate [ list string 1 1 121 ] [ list string 1 1 122 ] [ list integer 1 1 123 ] [ list string 1 1 124 ] ] t:270 t:274 t:279 t:280
        turbine::c::log "allocated t:270=<${t:270}> t:274=<${t:274}> t:279=<${t:279}> t:280=<${t:280}>"
        turbine::read_refcount_incr ${t:64} 1
        turbine::read_refcount_incr ${u:rgheader} 1
        turbine::container_reference ${u:vars} "NOVOCRAFTDIR" ${t:270} string
        turbine::container_reference ${u:vars} "NOVOALIGNINDEX" ${t:274} string
        turbine::container_reference ${u:vars} "PBSCORES" ${t:280} string
        turbine::rule [ list ${t:280} ] [ list __entry-async_op-parse_int-4 ${t:270} ${t:274} ${t:279} ${t:280} ${t:348} ${t:64} ${v:alias:read1} ${v:alias:read2} ${u:alignedbam} ${u:alignedsam} ${u:rgheader} ]
    }
    turbine::file_read_refcount_decr ${u:alignedsam} 1
    turbine::read_refcount_decr ${t:348} 1
    turbine::file_read_refcount_decr ${u:alignedbam} 1
    turbine::read_refcount_decr ${u:vars} 1
    turbine::read_refcount_decr ${u:rgheader} 1
    turbine::read_refcount_decr ${u:read2} 1
    turbine::read_refcount_decr ${t:64} 1
    turbine::read_refcount_decr ${u:read1} 1
}


proc __entry-chain9 { t:259 t:348 u:alignedbam u:alignedsam } {
    # Var: string[int] t:267 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():101:94
    lassign [ adlb::multicreate [ list container integer string 1 1 120 ] ] t:267
    turbine::c::log "allocated t:267=<${t:267}>"
    turbine::array_kv_build ${t:267} [ ::adlb::dict_create 0 "-u" ] 1 integer string
    f:samtools_view ${u:alignedbam} ${t:348} ${u:alignedsam} ${t:259} ${t:267} -100 "HARD" "RANK"
    turbine::read_refcount_decr ${t:259} 1
    turbine::read_refcount_decr ${t:267} 1
    turbine::file_read_refcount_decr ${u:alignedsam} 1
    turbine::read_refcount_decr ${t:348} 1
    turbine::file_read_refcount_decr ${u:alignedbam} 1
}


proc __entry-arr_copy_in_imm-2 { t:256 t:257 } {
    # Var: $string v:t:257 VALUE_OF [string:__t:257]
    set v:t:257 [ turbine::retrieve_string ${t:257} CACHED 1 ]
    turbine::array_kv_build ${t:256} [ ::adlb::dict_create 0 ${v:t:257} ] 1 integer string
}


proc __entry-async_op-parse_int-3 { t:259 t:260 } {
    # Var: $string v:t:260 VALUE_OF [string:__t:260]
    # Var: $int v:t:259 VALUE_OF [int:__t:259]
    set v:t:260 [ turbine::retrieve_string ${t:260} CACHED 1 ]
    set v:t:259 [ turbine::parse_int_impl ${v:t:260} 10 ]
    turbine::store_integer ${t:259} ${v:t:259}
}


proc __entry-async_op-parse_int-4 { t:270 t:274 t:279 t:280 t:348 t:64 v:alias:read1 v:alias:read2 u:alignedbam u:alignedsam u:rgheader } {
    # Var: $string v:t:280 VALUE_OF [string:__t:280]
    # Var: $int v:t:279 VALUE_OF [int:__t:279]
    set v:t:280 [ turbine::retrieve_string ${t:280} CACHED 1 ]
    set v:t:279 [ turbine::parse_int_impl ${v:t:280} 10 ]
    turbine::store_integer ${t:279} ${v:t:279}
    turbine::rule [ list ${t:270} ${t:274} ${t:279} ${t:64} ${u:rgheader} ] [ list __entry-async_op-strcat-8 ${t:270} ${t:274} ${t:279} ${t:348} ${t:64} ${v:alias:read1} ${v:alias:read2} ${u:alignedbam} ${u:alignedsam} ${u:rgheader} ]
}


proc __entry-async_op-strcat-8 { t:270 t:274 t:279 t:348 t:64 v:alias:read1 v:alias:read2 u:alignedbam u:alignedsam u:rgheader } {
    # Var: $string v:t:270 VALUE_OF [string:__t:270]
    # Var: $string v:t:269 VALUE_OF [string:__t:269]
    # Var: $int v:PBSCORES RENAMED [$int:__v:PBSCORES] ./pipelinefunctions/align_dedup.swift:novoalign():9:84
    # Var: $string v:INDEX RENAMED [$string:__v:INDEX] ./pipelinefunctions/align_dedup.swift:novoalign():9:84
    # Var: $string v:rgheader RENAMED [$string:__v:rgheader] ./pipelinefunctions/align_dedup.swift:novoalign():9:84
    # Var: $string v:__filename:output:1 RENAMED [$string:__v:__filename:output] ./pipelinefunctions/align_dedup.swift:novoalign():9:84
    # Var: $file v:output:1 RENAMED [$file:__v:output] ./pipelinefunctions/align_dedup.swift:novoalign():9:84
    set v:t:270 [ turbine::retrieve_string ${t:270} CACHED 1 ]
    set v:t:269 "${v:t:270}/novoalign"
    set v:PBSCORES [ turbine::retrieve_integer ${t:279} ]
    set v:INDEX [ turbine::retrieve_string ${t:274} CACHED 1 ]
    set v:rgheader [ turbine::retrieve_string ${u:rgheader} CACHED 1 ]
    set v:__filename:output:1 [ turbine::retrieve_string ${t:64} CACHED 1 ]
    set tcltmp:init_rc 2
    set v:output:1 [ turbine::create_local_file_ref ${v:__filename:output:1} ${tcltmp:init_rc} 1 ]
    turbine::c::log [ list exec: __v:t:269 "-c" ${v:PBSCORES} "-d" ${v:INDEX} "-f" ${v:alias:read1} ${v:alias:read2} "-o" "SAM" ${v:rgheader} [ dict create "stdout" ${v:__filename:output:1} ] ]
    turbine::exec_external ${v:t:269} [ dict create "stdout" ${v:__filename:output:1} ] "-c" ${v:PBSCORES} "-d" ${v:INDEX} "-f" ${v:alias:read1} ${v:alias:read2} "-o" "SAM" ${v:rgheader}
    turbine::store_file ${u:alignedsam} v:output:1 0
    turbine::rule [ list ] "__entry-chain10 ${t:279} ${t:348} {${u:alignedbam}} {${u:alignedsam}}"
    turbine::decr_local_file_refcount v:output:1
}


proc __entry-chain10 { t:279 t:348 u:alignedbam u:alignedsam } {
    # Var: string[int] t:287 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():104:95
    lassign [ adlb::multicreate [ list container integer string 1 1 125 ] ] t:287
    turbine::c::log "allocated t:287=<${t:287}>"
    turbine::array_kv_build ${t:287} [ ::adlb::dict_create 0 "-u" ] 1 integer string
    f:samtools_view ${u:alignedbam} ${t:348} ${u:alignedsam} ${t:279} ${t:287} -100 "HARD" "RANK"
    turbine::read_refcount_decr ${t:287} 1
    turbine::read_refcount_decr ${t:279} 1
    turbine::file_read_refcount_decr ${u:alignedsam} 1
    turbine::read_refcount_decr ${t:348} 1
    turbine::file_read_refcount_decr ${u:alignedbam} 1
}


proc __entry-optmerged-3 { t:159 t:348 v:alias:sampleName u:qcfile } {
    # Var: $string v:t:159:3 VALUE_OF [string:__t:159]
    # Var: $string v:t:301 VALUE_OF [string:__t:301]
    # Var: $string v:samtoolsdir:5 RENAMED [$string:__v:samtoolsdir]
    # Var: $int v:numAlignments:5 RENAMED [$int:__v:numAlignments]
    # Var: $boolean v:t:292 VALUE_OF [boolean:__t:292]
    # Var: $boolean v:t:299 VALUE_OF [boolean:__t:299]
    # Var: $void v:t:298 VALUE_OF [void:__t:298]
    set v:t:159:3 [ turbine::retrieve_string ${t:159} CACHED 1 ]
    set v:t:301 "bwa mem command did not produce alignments for ${v:t:159:3} alignment failed"
    set v:samtoolsdir:5 [ turbine::retrieve_string ${t:348} CACHED 1 ]
    set v:numAlignments:5 [ alignment::samtools_view ${v:samtoolsdir:5} ${v:t:159:3} ]
    set v:t:292 [ expr { ${v:numAlignments:5} == 0 } ]
    set v:t:299 [ expr { ${v:numAlignments:5} > 0 } ]
    turbine::assert_impl ${v:t:299} ${v:t:301}
    set tcltmp:prio [ turbine::get_priority ]
    turbine::set_priority ${tcltmp:prio}
    adlb::spawn 0 [ list __entry-if8 ${v:alias:sampleName} ${v:t:159:3} ${v:t:292} ${u:qcfile} ]
    turbine::reset_priority
}


proc __entry-if8 { v:alias:sampleName v:t:159:3 v:t:292 u:qcfile } {
    if { ${v:t:292} } {
        # Var: string t:294 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():107:49
        # Var: $string v:t:294 VALUE_OF [string:__t:294]
        lassign [ adlb::multicreate [ list string 1 1 126 ] ] t:294
        turbine::c::log "allocated t:294=<${t:294}>"
        set v:t:294 "${v:alias:sampleName}\tALIGNMENT\tFAIL\tbwa mem or novoalign command did not produce alignments for ${v:t:159:3}\n"
        turbine::store_string ${t:294} ${v:t:294}
        f:echo ${u:qcfile} ${t:294} -100 "HARD" "RANK"
        turbine::read_refcount_decr ${t:294} 1
    }
    turbine::file_read_refcount_decr ${u:qcfile} 1
}


proc __entry-explicit-wait3 { u:RealignDir u:VarcallDir t:31 t:348 t:42 t:730 t:786 v:alias:sampleName u:chr_bamList u:chr_bamListfile u:chr_vcfListfile u:chromosomes_processing_done u:mergedbam u:outbam u:qcfile u:vars } {
    # Var: string t:691 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():211:44
    # Var: string t:693 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():212:44
    # Var: $string v:t:691 VALUE_OF [string:__t:691]
    # Var: $string v:t:693 VALUE_OF [string:__t:693]
    lassign [ adlb::multicreate [ list string 1 1 127 ] [ list string 1 1 128 ] ] t:691 t:693
    turbine::c::log "allocated t:691=<${t:691}> t:693=<${t:693}>"
    set v:t:691 "${v:alias:sampleName}.*.recalibrated.bam"
    turbine::store_string ${t:691} ${v:t:691}
    f:find_files ${u:chr_bamListfile} ${u:RealignDir} ${t:691} -100 "HARD" "RANK"
    set v:t:693 "${v:alias:sampleName}.*.raw.g.vcf"
    turbine::store_string ${t:693} ${v:t:693}
    f:find_files ${u:chr_vcfListfile} ${u:VarcallDir} ${t:693} -100 "HARD" "RANK"
    turbine::rule [ list [ turbine::get_file_td ${u:chr_bamListfile} ] ] [ list __entry-call_foreign-read-1 ${t:31} ${t:348} ${t:42} ${t:730} ${t:786} ${v:alias:sampleName} ${u:chr_bamList} ${u:chr_bamListfile} ${u:mergedbam} ${u:outbam} ${u:qcfile} ${u:vars} ]
    turbine::read_refcount_decr ${u:chromosomes_processing_done} 1
    turbine::read_refcount_decr ${t:693} 1
    turbine::file_read_refcount_decr ${u:chr_vcfListfile} 1
    turbine::read_refcount_decr ${t:691} 1
    turbine::read_refcount_decr ${u:VarcallDir} 1
    turbine::read_refcount_decr ${u:RealignDir} 1
}


proc __entry-call_foreign-read-1 { t:31 t:348 t:42 t:730 t:786 v:alias:sampleName u:chr_bamList u:chr_bamListfile u:mergedbam u:outbam u:qcfile u:vars } {
    # Var: $file v:chr_bamListfile VALUE_OF [file:chr_bamListfile]
    # Var: $string v:t:702 VALUE_OF [string:__t:702]
    # Var: $int v:n:2 RENAMED [$int:__v:n]
    # Var: $string v:t:701 VALUE_OF [string:__t:701]
    # Var: $string v:o:2 RENAMED [$string:__v:o]
    # Var: $string$[int] v:chr_bamList VALUE_OF [string[int]:chr_bamList]
    # Var: string t:708 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():218:27
    # Var: string t:715 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():218:105
    lassign [ adlb::multicreate [ list string 1 1 129 ] [ list string 1 1 130 ] ] t:708 t:715
    turbine::c::log "allocated t:708=<${t:708}> t:715=<${t:715}>"
    set v:chr_bamListfile [ turbine::retrieve_file ${u:chr_bamListfile} CACHED 1 ]
    set v:t:702 [ turbine::file_read_local ${v:chr_bamListfile} ]
    set v:n:2 [ string length ${v:t:702} ]
    set v:t:701 [ turbine::replace_all_impl ${v:t:702} "\n" " " 0 ${v:n:2} ]
    set v:o:2 [ string trim ${v:t:701} ]
    set v:chr_bamList [ turbine::split_impl ${v:o:2} " " ]
    turbine::build_rec ${u:chr_bamList} ${v:chr_bamList} [ list container integer string ] 0 1
    turbine::container_reference ${u:vars} "NOVOCRAFTDIR" ${t:708} string
    turbine::container_reference ${u:vars} "PBSCORES" ${t:715} string
    turbine::rule [ list ${t:31} ${t:708} ${t:715} ${t:786} ] [ list __entry-async_op-parse_int-5 ${t:31} ${t:348} ${t:42} ${t:708} ${t:715} ${t:730} ${t:786} ${v:alias:sampleName} ${u:chr_bamList} ${u:mergedbam} ${u:outbam} ${u:qcfile} ]
}


proc __entry-async_op-parse_int-5 { t:31 t:348 t:42 t:708 t:715 t:730 t:786 v:alias:sampleName u:chr_bamList u:mergedbam u:outbam u:qcfile } {
    # Var: $string v:t:715 VALUE_OF [string:__t:715]
    # Var: $int v:t:714 VALUE_OF [int:__t:714]
    # Var: $string v:t:708 VALUE_OF [string:__t:708]
    # Var: $string v:t:707 VALUE_OF [string:__t:707]
    # Var: $string v:tmpdir:1 RENAMED [$string:__v:tmpdir] ./pipelinefunctions/align_dedup.swift:novosort():40:72
    # Var: $string$[int] v:inputFile:17 RENAMED [$string$[int]:__v:inputFile] ./pipelinefunctions/align_dedup.swift:novosort():40:72
    # Var: $string v:__filename:output:2 RENAMED [$string:__v:__filename:output] ./pipelinefunctions/align_dedup.swift:novosort():40:72
    # Var: $file v:output:2 RENAMED [$file:__v:output] ./pipelinefunctions/align_dedup.swift:novosort():40:72
    set v:t:715 [ turbine::retrieve_string ${t:715} CACHED 1 ]
    set v:t:714 [ turbine::parse_int_impl ${v:t:715} 10 ]
    set v:t:708 [ turbine::retrieve_string ${t:708} CACHED 1 ]
    set v:t:707 "${v:t:708}/novosort"
    set v:tmpdir:1 [ turbine::retrieve_string ${t:786} CACHED 1 ]
    set v:inputFile:17 [ turbine::unpack_args ${u:chr_bamList} 1 string ]
    set v:__filename:output:2 [ turbine::retrieve_string ${t:31} CACHED 1 ]
    set tcltmp:init_rc 2
    set v:output:2 [ turbine::create_local_file_ref ${v:__filename:output:2} ${tcltmp:init_rc} 1 ]
    turbine::c::log [ list exec: __v:t:707 "--index" "--tmpdir" ${v:tmpdir:1} "--threads" ${v:t:714} {*}${v:inputFile:17} "-o" ${v:__filename:output:2} [ dict create ] ]
    turbine::exec_external ${v:t:707} [ dict create ] "--index" "--tmpdir" ${v:tmpdir:1} "--threads" ${v:t:714} {*}${v:inputFile:17} "-o" ${v:__filename:output:2}
    turbine::store_file ${u:outbam} v:output:2 0
    turbine::rule [ list ] [ list __entry-chain17 ${t:348} ${t:42} ${t:730} ${v:alias:sampleName} ${u:mergedbam} ${u:outbam} ${u:qcfile} ]
    turbine::decr_local_file_refcount v:output:2
    turbine::read_refcount_decr ${u:chr_bamList} 1
}


proc __entry-chain17 { t:348 t:42 t:730 v:alias:sampleName u:mergedbam u:outbam u:qcfile } {
    f:cp ${u:mergedbam} ${u:outbam} -100 "HARD" "RANK"
    turbine::rule [ list ${t:348} ${t:42} [ turbine::get_file_td ${u:mergedbam} ] ] [ list __entry-chain18 ${t:348} ${t:42} ${t:730} ${v:alias:sampleName} ${u:mergedbam} ${u:qcfile} ]
    turbine::file_read_refcount_decr ${u:outbam} 1
}


proc __entry-chain18 { t:348 t:42 t:730 v:alias:sampleName u:mergedbam u:qcfile } {
    # Var: $string v:samtoolsdir:10 RENAMED [$string:__v:samtoolsdir]
    # Var: $string v:inputFile:16 RENAMED [$string:__v:inputFile]
    # Var: $int v:numAlignments:9 RENAMED [$int:__v:numAlignments]
    # Var: $boolean v:t:721 VALUE_OF [boolean:__t:721]
    # Var: $boolean v:t:728 VALUE_OF [boolean:__t:728]
    set v:samtoolsdir:10 [ turbine::retrieve_string ${t:348} CACHED 1 ]
    set v:inputFile:16 [ turbine::retrieve_string ${t:42} CACHED 1 ]
    set v:numAlignments:9 [ alignment::samtools_view ${v:samtoolsdir:10} ${v:inputFile:16} ]
    set v:t:721 [ expr { ${v:numAlignments:9} == 0 } ]
    set v:t:728 [ expr { ${v:numAlignments:9} > 0 } ]
    set tcltmp:prio [ turbine::get_priority ]
    turbine::set_priority ${tcltmp:prio}
    adlb::spawn 0 [ list __entry-if17 ${v:alias:sampleName} ${v:inputFile:16} ${v:t:721} ${u:qcfile} ]
    turbine::reset_priority
    turbine::rule [ list ${t:730} ] "__entry-async_op-assert-3 ${t:730} ${v:t:728}"
    turbine::file_read_refcount_decr ${u:mergedbam} 1
}


proc __entry-if17 { v:alias:sampleName v:inputFile:16 v:t:721 u:qcfile } {
    if { ${v:t:721} } {
        # Var: string t:723 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():221:49
        # Var: $string v:t:723 VALUE_OF [string:__t:723]
        lassign [ adlb::multicreate [ list string 1 1 131 ] ] t:723
        turbine::c::log "allocated t:723=<${t:723}>"
        set v:t:723 "${v:alias:sampleName}\tMERGE\tFAIL\tnovosort command did not produce alignments for ${v:inputFile:16}\n"
        turbine::store_string ${t:723} ${v:t:723}
        f:echo ${u:qcfile} ${t:723} -100 "HARD" "RANK"
        turbine::read_refcount_decr ${t:723} 1
    }
    turbine::file_read_refcount_decr ${u:qcfile} 1
}


proc __entry-async_op-assert-3 { t:730 v:t:728 } {
    # Var: $string v:t:730:1 VALUE_OF [string:__t:730]
    # Var: $void v:t:727 VALUE_OF [void:__t:727]
    set v:t:730:1 [ turbine::retrieve_string ${t:730} CACHED 1 ]
    turbine::assert_impl ${v:t:728} ${v:t:730:1}
}


proc __entry-async_op-sprintf { t:11 t:13 t:15 v:alias:sampleName u:rgheader } {
    # Var: $string v:t:11 VALUE_OF [string:__t:11]
    # Var: $string v:t:13 VALUE_OF [string:__t:13]
    # Var: $string v:t:15 VALUE_OF [string:__t:15]
    # Var: $string v:rgheader:1 VALUE_OF [string:rgheader]
    set v:t:11 [ turbine::retrieve_string ${t:11} CACHED 1 ]
    set v:t:13 [ turbine::retrieve_string ${t:13} CACHED 1 ]
    set v:t:15 [ turbine::retrieve_string ${t:15} CACHED 1 ]
    set v:rgheader:1 [ eval format [ list "@RG\tID:%s\tLB:%s\tPL:%s\tPU:%s\tSM:%s\tCN:%s" ${v:alias:sampleName} ${v:t:11} ${v:t:13} ${v:alias:sampleName} ${v:alias:sampleName} ${v:t:15} ] ]
    turbine::store_string ${u:rgheader} ${v:rgheader:1}
}


proc __entry-copy_in_filename { t:35 u:qcfile } {
    # Var: $string v:t:35:1 VALUE_OF [string:__t:35]
    set v:t:35:1 [ turbine::retrieve_string ${t:35} CACHED 1 ]
    turbine::set_filename_val ${u:qcfile} ${v:t:35:1}
}


proc __entry-async_op-dircat-1 { t:42 t:730 t:778 v:alias:sampleName u:mergedbam u:mergedvariant } {
    # Var: $string v:t:778:3 VALUE_OF [string:__t:778]
    # Var: $string v:t:43 VALUE_OF [string:__t:43]
    # Var: $string v:t:42 VALUE_OF [string:__t:42]
    # Var: $string v:t:730 VALUE_OF [string:__t:730]
    # Var: $string v:t:50 VALUE_OF [string:__t:50]
    set v:t:778:3 [ turbine::retrieve_string ${t:778} CACHED 1 ]
    set v:t:43 "${v:t:778:3}/${v:alias:sampleName}"
    set v:t:42 "${v:t:43}.recalibrated.bam"
    turbine::store_string ${t:42} ${v:t:42}
    set v:t:730 "novosort command did not produce alignments for ${v:t:42}"
    turbine::store_string ${t:730} ${v:t:730}
    turbine::set_filename_val ${u:mergedbam} ${v:t:42}
    set v:t:50 "${v:t:43}.GATKCombineGVCF.raw.vcf"
    turbine::set_filename_val ${u:mergedvariant} ${v:t:50}
}


proc __entry-call_foreign-trace { t:340 } {
    # Var: $string v:t:340:1 VALUE_OF [string:__t:340]
    # Var: $void v:t:338 VALUE_OF [void:__t:338]
    set v:t:340:1 [ turbine::retrieve_string ${t:340} CACHED 1 ]
    turbine::trace_impl "########   QC rule1: duplication cutoff <= " ${v:t:340:1} "          ###############"
}


proc __entry-call_foreign-trace-1 { t:345 } {
    # Var: $string v:t:345 VALUE_OF [string:__t:345]
    # Var: $void v:t:343 VALUE_OF [void:__t:343]
    set v:t:345 [ turbine::retrieve_string ${t:345} CACHED 1 ]
    turbine::trace_impl "########   QC rule2: mapped_reads cutoff >= " ${v:t:345} "           ###############"
}


proc __entry-call_foreign-split { a:t:351 t:350 } {
    # Var: $string v:alias:t:351 VALUE_OF [string:__alias:t:351]
    # Var: $string$[int] v:t:350 VALUE_OF [string[int]:__t:350]
    set v:alias:t:351 [ turbine::retrieve_string ${a:t:351} CACHED 1 ]
    set v:t:350 [ turbine::split_impl ${v:alias:t:351} " " ]
    turbine::build_rec ${t:350} ${v:t:350} [ list container integer string ] 0 1
}


proc __entry-call_foreign-split-1 { a:t:354 t:353 } {
    # Var: $string v:alias:t:354 VALUE_OF [string:__alias:t:354]
    # Var: $string$[int] v:t:353 VALUE_OF [string[int]:__t:353]
    set v:alias:t:354 [ turbine::retrieve_string ${a:t:354} CACHED 1 ]
    set v:t:353 [ turbine::split_impl ${v:alias:t:354} " " ]
    turbine::build_rec ${t:353} ${v:t:353} [ list container integer string ] 0 1
}


proc __entry-call_foreign-split-2 { a:t:357 t:356 } {
    # Var: $string v:alias:t:357 VALUE_OF [string:__alias:t:357]
    # Var: $string$[int] v:t:356 VALUE_OF [string[int]:__t:356]
    set v:alias:t:357 [ turbine::retrieve_string ${a:t:357} CACHED 1 ]
    set v:t:356 [ turbine::split_impl ${v:alias:t:357} " " ]
    turbine::build_rec ${t:356} ${v:t:356} [ list container integer string ] 0 1
}


proc __entry-async_op-parse_float { a:tot_dups a:tot_reads t:340 t:345 t:363 t:368 v:alias:sampleName u:perc_mapped u:qcfile } {
    # Var: $string v:alias:tot_reads VALUE_OF [string:__alias:tot_reads]
    # Var: $float v:t:362 VALUE_OF [float:__t:362]
    set v:alias:tot_reads [ turbine::retrieve_string ${a:tot_reads} CACHED 1 ]
    set v:t:362 [ turbine::string2float_impl ${v:alias:tot_reads} ]
    turbine::rule [ list ${t:363} ] "__entry-async_op-div_float ${t:363} ${v:t:362} ${u:perc_mapped}"
    turbine::rule [ list ${a:tot_dups} ${t:368} ] [ list __entry-async_op-parse_float-1 ${a:tot_dups} ${t:340} ${t:345} ${t:368} ${v:alias:sampleName} ${v:t:362} ${u:perc_mapped} ${u:qcfile} ]
}


proc __entry-async_op-div_float { t:363 v:t:362 u:perc_mapped } {
    # Var: $float v:t:363:1 VALUE_OF [float:__t:363]
    # Var: $float v:perc_mapped VALUE_OF [float:perc_mapped]
    set v:t:363:1 [ turbine::retrieve_float ${t:363} CACHED 1 ]
    set v:perc_mapped [ expr { ${v:t:363:1} / ${v:t:362} } ]
    turbine::store_float ${u:perc_mapped} ${v:perc_mapped}
}


proc __entry-async_op-parse_float-1 { a:tot_dups t:340 t:345 t:368 v:alias:sampleName v:t:362 u:perc_mapped u:qcfile } {
    # Var: $string v:alias:tot_dups VALUE_OF [string:__alias:tot_dups]
    # Var: $float v:t:360 VALUE_OF [float:__t:360]
    # Var: $float v:t:359 VALUE_OF [float:__t:359]
    # Var: $float v:perc_dup VALUE_OF [float:perc_dup]
    # Var: $float v:t:368:1 VALUE_OF [float:__t:368]
    # Var: $boolean v:t:367 VALUE_OF [boolean:__t:367]
    set v:alias:tot_dups [ turbine::retrieve_string ${a:tot_dups} CACHED 1 ]
    set v:t:360 [ turbine::string2float_impl ${v:alias:tot_dups} ]
    set v:t:359 [ expr { ${v:t:360} * 100.0 } ]
    set v:perc_dup [ expr { ${v:t:359} / ${v:t:362} } ]
    set v:t:368:1 [ turbine::retrieve_float ${t:368} CACHED 1 ]
    set v:t:367 [ expr { ${v:perc_dup} < ${v:t:368:1} } ]
    if { ${v:t:367} } {
        # Var: $string v:t:376 VALUE_OF [string:__t:376]
        # Var: $string v:t:375 VALUE_OF [string:__t:375]
        # Var: $string v:t:374 VALUE_OF [string:__t:374]
        # Var: $string v:t:373 VALUE_OF [string:__t:373]
        turbine::file_read_refcount_incr ${u:qcfile} 1
        turbine::read_refcount_incr ${u:perc_mapped} 1
        turbine::read_refcount_incr ${t:345} 1
        turbine::read_refcount_incr ${t:340} 2
        set v:t:376 "#####  ${v:alias:sampleName}"
        set v:t:375 "${v:t:376} passed first filter percent_duplicates with value"
        set v:t:374 "${v:t:375}${v:perc_dup}"
        set v:t:373 "${v:t:374}, maximum cutoff is "
        turbine::rule [ list ${t:345} ${u:perc_mapped} ] [ list __entry-async_op-parse_float-2 ${t:340} ${t:345} ${v:alias:sampleName} ${v:perc_dup} ${v:t:376} ${u:perc_mapped} ${u:qcfile} ]
        turbine::rule [ list ${t:340} ] [ list __entry-async_op-strcat-11 ${t:340} ${v:t:373} ]
    } else {
        # Var: $string v:t:445 VALUE_OF [string:__t:445]
        # Var: $string v:t:444 VALUE_OF [string:__t:444]
        # Var: $string v:t:443 VALUE_OF [string:__t:443]
        # Var: $string v:t:442 VALUE_OF [string:__t:442]
        set v:t:445 "#####  ${v:alias:sampleName}"
        set v:t:444 "${v:t:445} DID NOT pass first filter percent_duplicates with value"
        set v:t:443 "${v:t:444}${v:perc_dup}"
        set v:t:442 "${v:t:443}, maximum cutoff is "
        turbine::rule [ list ${t:340} ] [ list __entry-async_op-strcat-12 ${t:340} ${v:t:442} ]
    }
    turbine::read_refcount_decr ${t:340} 1
    turbine::read_refcount_decr ${t:345} 1
    turbine::read_refcount_decr ${u:perc_mapped} 1
    turbine::file_read_refcount_decr ${u:qcfile} 1
}


proc __entry-async_op-parse_float-2 { t:340 t:345 v:alias:sampleName v:perc_dup v:t:376 u:perc_mapped u:qcfile } {
    # Var: $string v:t:345:1 VALUE_OF [string:__t:345]
    # Var: $float v:t:383 VALUE_OF [float:__t:383]
    # Var: $float v:perc_mapped:1 VALUE_OF [float:perc_mapped]
    # Var: $boolean v:t:382 VALUE_OF [boolean:__t:382]
    set v:t:345:1 [ turbine::retrieve_string ${t:345} CACHED 1 ]
    set v:t:383 [ turbine::string2float_impl ${v:t:345:1} ]
    set v:perc_mapped:1 [ turbine::retrieve_float ${u:perc_mapped} CACHED 1 ]
    set v:t:382 [ expr { ${v:perc_mapped:1} > ${v:t:383} } ]
    if { ${v:t:382} } {
        # Var: string t:397 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():138:205
        # Var: $string v:t:390 VALUE_OF [string:__t:390]
        # Var: $string v:t:404 VALUE_OF [string:__t:404]
        # Var: $string v:t:389 VALUE_OF [string:__t:389]
        # Var: $string v:t:388 VALUE_OF [string:__t:388]
        # Var: $string v:t:387 VALUE_OF [string:__t:387]
        # Var: $void v:t:386 VALUE_OF [void:__t:386]
        # Var: $string v:t:403 VALUE_OF [string:__t:403]
        # Var: $string v:t:402 VALUE_OF [string:__t:402]
        lassign [ adlb::multicreate [ list string 1 1 132 ] ] t:397
        turbine::c::log "allocated t:397=<${t:397}>"
        set v:t:390 "${v:t:376} passed second filter map_cutoff with value"
        set v:t:404 "${v:alias:sampleName}\tQCTEST\tPASS\n\trule1 ok: percent_duplication="
        f:echo ${u:qcfile} ${t:397} -100 "HARD" "RANK"
        set v:t:389 "${v:t:390}${v:perc_mapped:1}"
        set v:t:388 "${v:t:389}, minimum cutoff is "
        set v:t:387 "${v:t:388}${v:t:345:1}"
        turbine::trace_impl ${v:t:387}
        set v:t:403 "${v:t:404}${v:perc_dup}"
        set v:t:402 "${v:t:403}<? duplication_cutoff="
        turbine::rule [ list ${t:340} ] [ list __entry-async_op-strcat-9 ${t:340} ${t:397} ${v:perc_mapped:1} ${v:t:345:1} ${v:t:402} ]
        turbine::read_refcount_decr ${t:397} 1
    } else {
        # Var: string t:424 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():141:209
        # Var: $string v:t:417 VALUE_OF [string:__t:417]
        # Var: $string v:t:431 VALUE_OF [string:__t:431]
        # Var: $string v:t:416 VALUE_OF [string:__t:416]
        # Var: $string v:t:415 VALUE_OF [string:__t:415]
        # Var: $string v:t:414 VALUE_OF [string:__t:414]
        # Var: $void v:t:413 VALUE_OF [void:__t:413]
        # Var: $string v:t:430 VALUE_OF [string:__t:430]
        # Var: $string v:t:429 VALUE_OF [string:__t:429]
        lassign [ adlb::multicreate [ list string 1 1 133 ] ] t:424
        turbine::c::log "allocated t:424=<${t:424}>"
        set v:t:417 "${v:t:376} DID NOT pass second filter map_cutoff with value"
        set v:t:431 "${v:alias:sampleName}\tQCTEST\tFAIL\n\trule1 ok: percent_duplication="
        f:echo ${u:qcfile} ${t:424} -100 "HARD" "RANK"
        set v:t:416 "${v:t:417}${v:perc_mapped:1}"
        set v:t:415 "${v:t:416}, minimum cutoff is "
        set v:t:414 "${v:t:415}${v:t:345:1}"
        turbine::trace_impl ${v:t:414}
        set v:t:430 "${v:t:431}${v:perc_dup}"
        set v:t:429 "${v:t:430}<? duplication_cutoff="
        turbine::rule [ list ${t:340} ] [ list __entry-async_op-strcat-10 ${t:340} ${t:424} ${v:perc_mapped:1} ${v:t:345:1} ${v:t:429} ]
        turbine::read_refcount_decr ${t:424} 1
    }
    turbine::read_refcount_decr ${t:340} 1
    turbine::file_read_refcount_decr ${u:qcfile} 1
}


proc __entry-async_op-strcat-9 { t:340 t:397 v:perc_mapped:1 v:t:345:1 v:t:402 } {
    # Var: $string v:t:340:3 VALUE_OF [string:__t:340]
    # Var: $string v:t:401 VALUE_OF [string:__t:401]
    # Var: $string v:t:400 VALUE_OF [string:__t:400]
    # Var: $string v:t:399 VALUE_OF [string:__t:399]
    # Var: $string v:t:398 VALUE_OF [string:__t:398]
    # Var: $string v:t:397 VALUE_OF [string:__t:397]
    set v:t:340:3 [ turbine::retrieve_string ${t:340} CACHED 1 ]
    set v:t:401 "${v:t:402}${v:t:340:3}"
    set v:t:400 "${v:t:401}\n\trule2 ok: percent_mapped="
    set v:t:399 "${v:t:400}${v:perc_mapped:1}"
    set v:t:398 "${v:t:399}>? mapping_cutoff="
    set v:t:397 "${v:t:398}${v:t:345:1}"
    turbine::store_string ${t:397} ${v:t:397}
}


proc __entry-async_op-strcat-10 { t:340 t:424 v:perc_mapped:1 v:t:345:1 v:t:429 } {
    # Var: $string v:t:340:4 VALUE_OF [string:__t:340]
    # Var: $string v:t:428 VALUE_OF [string:__t:428]
    # Var: $string v:t:427 VALUE_OF [string:__t:427]
    # Var: $string v:t:426 VALUE_OF [string:__t:426]
    # Var: $string v:t:425 VALUE_OF [string:__t:425]
    # Var: $string v:t:424 VALUE_OF [string:__t:424]
    set v:t:340:4 [ turbine::retrieve_string ${t:340} CACHED 1 ]
    set v:t:428 "${v:t:429}${v:t:340:4}"
    set v:t:427 "${v:t:428}\n\trule2 not ok: percent_mapped="
    set v:t:426 "${v:t:427}${v:perc_mapped:1}"
    set v:t:425 "${v:t:426}>? mapping_cutoff="
    set v:t:424 "${v:t:425}${v:t:345:1}"
    turbine::store_string ${t:424} ${v:t:424}
}


proc __entry-async_op-strcat-11 { t:340 v:t:373 } {
    # Var: $string v:t:340:2 VALUE_OF [string:__t:340]
    # Var: $string v:t:372 VALUE_OF [string:__t:372]
    # Var: $void v:t:371 VALUE_OF [void:__t:371]
    set v:t:340:2 [ turbine::retrieve_string ${t:340} CACHED 1 ]
    set v:t:372 "${v:t:373}${v:t:340:2}"
    turbine::trace_impl ${v:t:372}
}


proc __entry-async_op-strcat-12 { t:340 v:t:442 } {
    # Var: $string v:t:340:5 VALUE_OF [string:__t:340]
    # Var: $string v:t:441 VALUE_OF [string:__t:441]
    # Var: $void v:t:440 VALUE_OF [void:__t:440]
    set v:t:340:5 [ turbine::retrieve_string ${t:340} CACHED 1 ]
    set v:t:441 "${v:t:442}${v:t:340:5}"
    turbine::trace_impl ${v:t:441}
}


proc __entry-async_op-parse_float-3 { a:tot_mapped t:363 } {
    # Var: $string v:alias:tot_mapped VALUE_OF [string:__alias:tot_mapped]
    # Var: $float v:t:364 VALUE_OF [float:__t:364]
    # Var: $float v:t:363 VALUE_OF [float:__t:363]
    set v:alias:tot_mapped [ turbine::retrieve_string ${a:tot_mapped} CACHED 1 ]
    set v:t:364 [ turbine::string2float_impl ${v:alias:tot_mapped} ]
    set v:t:363 [ expr { ${v:t:364} * 100.0 } ]
    turbine::store_float ${t:363} ${v:t:363}
}


proc __entry-call_foreign-read-2 { t:33 t:741 t:778 v:sampleLines:1 u:chr_vcfList u:mergedvariant u:rawvariant u:samples_processing_done u:vars } {
    # Var: $file v:t:741 VALUE_OF [file:__t:741]
    # Var: $string v:t:740 VALUE_OF [string:__t:740]
    # Var: $int v:n:3 RENAMED [$int:__v:n]
    # Var: $string v:t:739 VALUE_OF [string:__t:739]
    # Var: $string v:o:3 RENAMED [$string:__v:o]
    # Var: $string$[int] v:chr_vcfList VALUE_OF [string[int]:chr_vcfList]
    # Var: string t:747 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():226:28
    # Var: string t:751 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():226:52
    # Var: string t:755 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():226:93
    # Var: string t:757 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():226:114
    # Var: string t:759 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():226:153
    # Var: string t:762 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():226:154
    # Var: $string$[int] v:variants RENAMED [$string$[int]:__v:variants] ./pipelinefunctions/merge_vcf.swift:CombineGVCFs():3:105
    lassign [ adlb::multicreate [ list string 1 1 134 ] [ list string 1 1 135 ] [ list string 1 1 136 ] [ list string 1 1 137 ] [ list string 1 1 138 ] [ list string 1 1 139 ] ] t:747 t:751 t:755 t:757 t:759 t:762
    turbine::c::log "allocated t:747=<${t:747}> t:751=<${t:751}> t:755=<${t:755}> t:757=<${t:757}> t:759=<${t:759}>"
    turbine::c::log "allocated t:762=<${t:762}>"
    set v:t:741 [ turbine::retrieve_file ${t:741} CACHED 1 ]
    set v:t:740 [ turbine::file_read_local ${v:t:741} ]
    set v:n:3 [ string length ${v:t:740} ]
    set v:t:739 [ turbine::replace_all_impl ${v:t:740} "\n" " " 0 ${v:n:3} ]
    set v:o:3 [ string trim ${v:t:739} ]
    set v:chr_vcfList [ turbine::split_impl ${v:o:3} " " ]
    turbine::build_rec ${u:chr_vcfList} ${v:chr_vcfList} [ list container integer string ] 0 1
    turbine::container_reference ${u:vars} "JAVADIR" ${t:747} string
    turbine::container_reference ${u:vars} "GATKDIR" ${t:751} string
    turbine::container_reference ${u:vars} "REFGENOMEDIR" ${t:755} string
    turbine::container_reference ${u:vars} "REFGENOME" ${t:757} string
    turbine::container_reference ${u:vars} "DBSNP" ${t:762} string
    set v:variants [ turbine::unpack_args ${u:chr_vcfList} 1 string ]
    turbine::rule [ list ${t:755} ${t:762} ] "__entry-optmerged-4 ${t:33} ${t:747} ${t:751} ${t:755} ${t:757} ${t:759} ${t:762} ${t:778} {${v:sampleLines:1}} {${v:variants}} {${u:mergedvariant}} {${u:rawvariant}} ${u:samples_processing_done}"
    turbine::read_refcount_decr ${u:chr_vcfList} 1
}


proc __entry-optmerged-4 { t:33 t:747 t:751 t:755 t:757 t:759 t:762 t:778 v:sampleLines:1 v:variants u:mergedvariant u:rawvariant u:samples_processing_done } {
    # Var: $string v:t:755 VALUE_OF [string:__t:755]
    # Var: $string v:t:762 VALUE_OF [string:__t:762]
    # Var: $string v:t:759 VALUE_OF [string:__t:759]
    set v:t:755 [ turbine::retrieve_string ${t:755} CACHED 1 ]
    set v:t:762 [ turbine::retrieve_string ${t:762} CACHED 1 ]
    set v:t:759 "${v:t:755}/${v:t:762}"
    turbine::store_string ${t:759} ${v:t:759}
    turbine::rule [ list ${t:33} ${t:747} ${t:751} ${t:757} ${t:759} ] [ list __entry-async_op-dircat-2 ${t:33} ${t:747} ${t:751} ${t:757} ${t:759} ${t:778} ${v:sampleLines:1} ${v:t:755} ${v:variants} ${u:mergedvariant} ${u:rawvariant} ${u:samples_processing_done} ]
}


proc __entry-async_op-dircat-2 { t:33 t:747 t:751 t:757 t:759 t:778 v:sampleLines:1 v:t:755 v:variants u:mergedvariant u:rawvariant u:samples_processing_done } {
    # Var: $string v:t:757 VALUE_OF [string:__t:757]
    # Var: $string v:t:754 VALUE_OF [string:__t:754]
    # Var: $string v:t:751 VALUE_OF [string:__t:751]
    # Var: $string v:t:750 VALUE_OF [string:__t:750]
    # Var: $string v:t:749 VALUE_OF [string:__t:749]
    # Var: $string v:javadir:6 RENAMED [$string:__v:javadir] ./pipelinefunctions/merge_vcf.swift:CombineGVCFs():3:105
    # Var: $string v:dbsnp:2 RENAMED [$string:__v:dbsnp] ./pipelinefunctions/merge_vcf.swift:CombineGVCFs():3:105
    # Var: $string v:__filename:outputfile:6 RENAMED [$string:__v:__filename:outputfile] ./pipelinefunctions/merge_vcf.swift:CombineGVCFs():3:105
    # Var: $file v:outputfile:6 RENAMED [$file:__v:outputfile] ./pipelinefunctions/merge_vcf.swift:CombineGVCFs():3:105
    set v:t:757 [ turbine::retrieve_string ${t:757} CACHED 1 ]
    set v:t:754 "${v:t:755}/${v:t:757}"
    set v:t:751 [ turbine::retrieve_string ${t:751} CACHED 1 ]
    set v:t:750 "${v:t:751}/GenomeAnalysisTK.jar"
    set v:t:749 "${v:t:750}"
    set v:javadir:6 [ turbine::retrieve_string ${t:747} CACHED 1 ]
    set v:dbsnp:2 [ turbine::retrieve_string ${t:759} CACHED 1 ]
    set v:__filename:outputfile:6 [ turbine::retrieve_string ${t:33} CACHED 1 ]
    set tcltmp:init_rc 2
    set v:outputfile:6 [ turbine::create_local_file_ref ${v:__filename:outputfile:6} ${tcltmp:init_rc} 1 ]
    turbine::c::log [ list exec: __v:javadir:6 "-Xmx8g" "-jar" ${v:t:749} "-T" "CombineGVCFs" "-R" ${v:t:754} "--dbsnp" ${v:dbsnp:2} {*}${v:variants} "-o" ${v:__filename:outputfile:6} [ dict create ] ]
    turbine::exec_external ${v:javadir:6} [ dict create ] "-Xmx8g" "-jar" ${v:t:749} "-T" "CombineGVCFs" "-R" ${v:t:754} "--dbsnp" ${v:dbsnp:2} {*}${v:variants} "-o" ${v:__filename:outputfile:6}
    turbine::store_file ${u:rawvariant} v:outputfile:6 0
    turbine::rule [ list ] "__entry-chain20 ${t:778} {${v:sampleLines:1}} {${u:mergedvariant}} {${u:rawvariant}} ${u:samples_processing_done}"
    turbine::decr_local_file_refcount v:outputfile:6
}


proc __entry-chain20 { t:778 v:sampleLines:1 u:mergedvariant u:rawvariant u:samples_processing_done } {
    f:cp ${u:mergedvariant} ${u:rawvariant} -100 "HARD" "RANK"
    turbine::rule [ list [ turbine::get_file_td ${u:mergedvariant} ] ] "__entry-chain21 ${t:778} {${v:sampleLines:1}} {${u:mergedvariant}} ${u:samples_processing_done}"
    turbine::file_read_refcount_decr ${u:rawvariant} 1
}


proc __entry-chain21 { t:778 v:sampleLines:1 u:mergedvariant u:samples_processing_done } {
    # Var: *rw(file)[int] t:767 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():228:32
    # Var: string t:768 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():228:37
    # Var: $int v:t:765 VALUE_OF [int:__t:765]
    lassign [ adlb::multicreate [ list container integer file_ref 1 1 140 ] [ list string 1 1 141 ] ] t:767 t:768
    turbine::c::log "allocated t:767=<${t:767}> t:768=<${t:768}>"
    set v:t:765 [ dict size ${v:sampleLines:1} ]
    turbine::glob [ list ${t:767} ] [ list ${t:768} ]
    turbine::rule [ list ${t:778} ] "__entry-async_op-strcat-13 ${t:768} ${t:778}"
    turbine::rule [ list ${t:767} ] "__entry-call_foreign-size ${t:767} ${v:t:765} ${u:samples_processing_done}"
    turbine::file_read_refcount_decr ${u:mergedvariant} 1
}


proc __entry-async_op-strcat-13 { t:768 t:778 } {
    # Var: $string v:t:778:4 VALUE_OF [string:__t:778]
    # Var: $string v:t:768 VALUE_OF [string:__t:768]
    set v:t:778:4 [ turbine::retrieve_string ${t:778} CACHED 1 ]
    set v:t:768 "${v:t:778:4}/*.GATKCombineGVCF.raw.vcf"
    turbine::store_string ${t:768} ${v:t:768}
}


proc __entry-call_foreign-size { t:767 v:t:765 u:samples_processing_done } {
    # Var: file$[int] v:t:767 VALUE_OF [*rw(file)[int]:__t:767]
    # Var: $int v:t:766 VALUE_OF [int:__t:766]
    # Var: $boolean v:t:764 VALUE_OF [boolean:__t:764]
    set v:t:767 [ adlb::enumerate ${t:767} dict all 0 0 ]
    set v:t:766 [ dict size ${v:t:767} ]
    set v:t:764 [ expr { ${v:t:765} == ${v:t:766} } ]
    if { ${v:t:764} } {
        turbine::store_integer ${u:samples_processing_done} 1
    }
    turbine::read_refcount_decr ${t:767} 1
}


proc __entry-optmerged-5 { u:RealignDir u:VarcallDir t:26 t:31 t:33 t:348 t:70 t:779 v:alias:sampleName u:chromosomes_processing_done u:dedupsortedbam u:flagstats u:indices u:outbam u:qcfile u:rawvariant u:stat u:vars } {
    # Var: $string v:t:779:2 VALUE_OF [string:__t:779]
    # Var: $string v:t:17 VALUE_OF [string:__t:17]
    # Var: $string v:t:26 VALUE_OF [string:__t:26]
    # Var: $string v:t:58 VALUE_OF [string:__t:58]
    # Var: $string v:VarcallDir VALUE_OF [string:VarcallDir]
    # Var: $string v:t:33 VALUE_OF [string:__t:33]
    # Var: $string v:RealignDir VALUE_OF [string:RealignDir]
    # Var: $string v:t:31 VALUE_OF [string:__t:31]
    set v:t:779:2 [ turbine::retrieve_string ${t:779} CACHED 1 ]
    set v:t:17 "${v:t:779:2}/${v:alias:sampleName}"
    set v:t:26 "${v:t:779:2}/align/${v:alias:sampleName}.wdups.sorted.bam"
    turbine::store_string ${t:26} ${v:t:26}
    set v:t:58 "${v:t:779:2}/align/${v:alias:sampleName}.wdups.sorted.bam.flagstats"
    set v:VarcallDir "${v:t:17}/variant/"
    turbine::store_string ${u:VarcallDir} ${v:VarcallDir}
    set v:t:33 "${v:VarcallDir}${v:alias:sampleName}.GATKCombineGVCF.raw.vcf"
    turbine::store_string ${t:33} ${v:t:33}
    turbine::set_filename_val ${u:rawvariant} ${v:t:33}
    set v:RealignDir "${v:t:17}/realign/"
    turbine::store_string ${u:RealignDir} ${v:RealignDir}
    set v:t:31 "${v:RealignDir}${v:alias:sampleName}.recalibrated.bam"
    turbine::store_string ${t:31} ${v:t:31}
    turbine::set_filename_val ${u:outbam} ${v:t:31}
    turbine::set_filename_val ${u:dedupsortedbam} ${v:t:26}
    turbine::set_filename_val ${u:flagstats} ${v:t:58}
    set tcltmp:prio [ turbine::get_priority ]
    turbine::set_priority ${tcltmp:prio}
    adlb::spawn 0 [ list mkdir-app-leaf1 ${v:VarcallDir} ]
    turbine::reset_priority
    turbine::rule [ list [ turbine::get_file_td ${u:dedupsortedbam} ] ] [ list __entry-optmerged-6 ${t:348} ${t:70} ${v:RealignDir} ${v:VarcallDir} ${v:alias:sampleName} ${v:t:26} ${v:t:58} ${u:chromosomes_processing_done} ${u:dedupsortedbam} ${u:flagstats} ${u:indices} ${u:qcfile} ${u:stat} ${u:vars} ]
}


proc mkdir-app-leaf1 { v:VarcallDir } {
    # Var: $void v:v RENAMED [$void:__v:v] /usr/local/src/swift-t-1.1/turbine/export/unix.swift:mkdir():65:15
    turbine::c::log [ list exec: "mkdir" "-p" ${v:VarcallDir} [ dict create ] ]
    turbine::exec_external "mkdir" [ dict create ] "-p" ${v:VarcallDir}
}


proc __entry-optmerged-6 { t:348 t:70 v:RealignDir v:VarcallDir v:alias:sampleName v:t:26 v:t:58 u:chromosomes_processing_done u:dedupsortedbam u:flagstats u:indices u:qcfile u:stat u:vars } {
    # Var: $string v:t:460 VALUE_OF [string:__t:460]
    # Var: $string v:t:497 VALUE_OF [string:__t:497]
    # Var: string t:505 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():177:85
    # Var: string t:529 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():183:35
    # Var: string t:531 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():183:56
    # Var: string t:565 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():192:39
    # Var: string t:569 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():192:63
    # Var: string t:575 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():192:125
    # Var: string t:625 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():197:223
    # Var: $string v:t:661 VALUE_OF [string:__t:661]
    # Var: $string v:t:459 VALUE_OF [string:__t:459]
    # Var: $string v:t:660 VALUE_OF [string:__t:660]
    lassign [ adlb::multicreate [ list string 1 1 142 ] [ list string 1 1 143 ] [ list string 1 1 144 ] [ list string 1 1 145 ] [ list string 1 1 146 ] [ list string 1 1 147 ] [ list string 1 1 148 ] ] t:505 t:529 t:531 t:565 t:569 t:575 t:625
    turbine::c::log "allocated t:505=<${t:505}> t:529=<${t:529}> t:531=<${t:531}> t:565=<${t:565}> t:569=<${t:569}>"
    turbine::c::log "allocated t:575=<${t:575}> t:625=<${t:625}>"
    set v:t:460 "####   Realign-Vcall script for SAMPLE ${v:alias:sampleName}"
    set v:t:497 "#######   REALIGN-RECALIBRATION BLOCK STARTS HERE   ${v:alias:sampleName}"
    turbine::container_reference ${u:vars} "PBSCORES" ${t:505} string
    turbine::container_reference ${u:vars} "REFGENOMEDIR" ${t:529} string
    turbine::container_reference ${u:vars} "INDELDIR" ${t:531} string
    turbine::container_reference ${u:vars} "JAVADIR" ${t:565} string
    turbine::container_reference ${u:vars} "GATKDIR" ${t:569} string
    turbine::container_reference ${u:vars} "REFGENOME" ${t:575} string
    turbine::container_reference ${u:vars} "DBSNP" ${t:625} string
    set v:t:661 "#############    GATK VARIANT CALLING   FOR SAMPLE ${v:alias:sampleName}"
    set v:t:459 "${v:t:460} chr="
    set v:t:660 "${v:t:661} : "
    turbine::rule [ list ${u:indices} ] [ list __entry-explicit-wait2 ${t:348} ${t:505} ${t:529} ${t:531} ${t:565} ${t:569} ${t:575} ${t:625} ${t:70} ${v:RealignDir} ${v:VarcallDir} ${v:alias:sampleName} ${v:t:459} ${v:t:497} ${v:t:660} ${u:chromosomes_processing_done} ${u:dedupsortedbam} ${u:indices} ${u:qcfile} ]
    turbine::rule [ list ${t:348} ] [ list samtools_flagstat-app-leaf1 ${t:348} ${v:t:26} ${v:t:58} ${u:dedupsortedbam} ${u:flagstats} ${u:stat} ]
}


proc __entry-explicit-wait2 { t:348 t:505 t:529 t:531 t:565 t:569 t:575 t:625 t:70 v:RealignDir v:VarcallDir v:alias:sampleName v:t:459 v:t:497 v:t:660 u:chromosomes_processing_done u:dedupsortedbam u:indices u:qcfile } {
    # Var: int t:504 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():177:74
    # Var: string t:572 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():192:124
    # Var: string t:622 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():197:222
    # Var: string t:527 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():183:28
    # Var: string t:567 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():192:56
    lassign [ adlb::multicreate [ list integer 1 1 149 ] [ list string 1 1 150 ] [ list string 1 1 151 ] [ list string 1 1 152 ] [ list string 1 1 153 ] ] t:504 t:572 t:622 t:527 t:567
    turbine::c::log "allocated t:504=<${t:504}> t:572=<${t:572}> t:622=<${t:622}> t:527=<${t:527}> t:567=<${t:567}>"
    set tcltmp:container_sz [ adlb::enumerate ${u:indices} count all 0 ]
    set tcltmp:iters ${tcltmp:container_sz}
    turbine::read_refcount_incr ${t:572} [ expr { ${tcltmp:iters} - 1 } ]
    turbine::read_refcount_incr ${u:indices} [ expr { ${tcltmp:iters} - 1 } ]
    turbine::read_refcount_incr ${t:70} [ expr { ${tcltmp:iters} - 1 } ]
    turbine::read_refcount_incr ${t:565} [ expr { ${tcltmp:iters} - 1 } ]
    turbine::file_read_refcount_incr ${u:dedupsortedbam} [ expr { ${tcltmp:iters} - 1 } ]
    turbine::file_read_refcount_incr ${u:qcfile} [ expr { 3 * ${tcltmp:iters} - 1 } ]
    turbine::read_refcount_incr ${t:504} [ expr { ${tcltmp:iters} - 1 } ]
    turbine::read_refcount_incr ${t:567} [ expr { ${tcltmp:iters} - 1 } ]
    turbine::read_refcount_incr ${t:622} [ expr { ${tcltmp:iters} - 1 } ]
    turbine::read_refcount_incr ${t:348} [ expr { 3 * ${tcltmp:iters} - 1 } ]
    turbine::read_refcount_incr ${t:527} [ expr { ${tcltmp:iters} - 1 } ]
    __entry-foreach2:outer ${t:348} ${t:504} ${t:527} ${t:565} ${t:567} ${t:572} ${t:622} ${t:70} ${v:RealignDir} ${v:VarcallDir} ${v:alias:sampleName} ${v:t:459} ${v:t:497} ${v:t:660} ${u:chromosomes_processing_done} ${u:dedupsortedbam} ${u:indices} ${u:qcfile} 0 [ expr { ${tcltmp:container_sz} - 1 } ] 1
    turbine::rule [ list ${t:505} ] "__entry-async_op-parse_int-6 ${t:504} ${t:505}"
    turbine::rule [ list ${t:569} ] "__entry-async_op-dircat-3 ${t:567} ${t:569}"
    turbine::rule [ list ${t:529} ] "__entry-optmerged-9 ${t:527} ${t:529} ${t:531} ${t:572} ${t:575} ${t:622} ${t:625}"
}


proc __entry-foreach2:outer { t:348 t:504 t:527 t:565 t:567 t:572 t:622 t:70 v:RealignDir v:VarcallDir v:alias:sampleName v:t:459 v:t:497 v:t:660 u:chromosomes_processing_done u:dedupsortedbam u:indices u:qcfile tcltmp:lo tcltmp:hi tcltmp:inc } {
    if { [ expr { ${tcltmp:lo} > ${tcltmp:hi} } ] } {
        return
    }
    while {1} {
        set tcltmp:itersleft [ expr { max(0,(${tcltmp:hi} - ${tcltmp:lo}) / ${tcltmp:inc} + 1) } ]
        if { [ expr { ${tcltmp:itersleft} <= 64 } ] } {
            __entry-foreach2:inner ${t:348} ${t:504} ${t:527} ${t:565} ${t:567} ${t:572} ${t:622} ${t:70} ${v:RealignDir} ${v:VarcallDir} ${v:alias:sampleName} ${v:t:459} ${v:t:497} ${v:t:660} ${u:chromosomes_processing_done} ${u:dedupsortedbam} ${u:indices} ${u:qcfile} ${tcltmp:lo} ${tcltmp:hi} ${tcltmp:inc}
            return
        } else {
            set tcltmp:skip [ expr { ${tcltmp:inc} * max(64,((${tcltmp:itersleft} - 1) / 16) + 1) } ]
            for { set tcltmp:splitstart [ expr { ${tcltmp:lo} + ${tcltmp:skip} } ] } { ${tcltmp:splitstart} <= ${tcltmp:hi} } { incr tcltmp:splitstart ${tcltmp:skip} } {
                set tcltmp:splitend [ expr { min(${tcltmp:hi},${tcltmp:splitstart} + ${tcltmp:skip} - 1) } ]
                set tcltmp:prio [ turbine::get_priority ]
                turbine::set_priority ${tcltmp:prio}
                adlb::spawn 0 [ list __entry-foreach2:outer ${t:348} ${t:504} ${t:527} ${t:565} ${t:567} ${t:572} ${t:622} ${t:70} ${v:RealignDir} ${v:VarcallDir} ${v:alias:sampleName} ${v:t:459} ${v:t:497} ${v:t:660} ${u:chromosomes_processing_done} ${u:dedupsortedbam} ${u:indices} ${u:qcfile} ${tcltmp:splitstart} ${tcltmp:splitend} ${tcltmp:inc} ]
                turbine::reset_priority
            }
            set tcltmp:hi [ expr { ${tcltmp:lo} + ${tcltmp:skip} - 1 } ]
        }
    }
}


proc __entry-foreach2:inner { t:348 t:504 t:527 t:565 t:567 t:572 t:622 t:70 v:RealignDir v:VarcallDir v:alias:sampleName v:t:459 v:t:497 v:t:660 u:chromosomes_processing_done u:dedupsortedbam u:indices u:qcfile tcltmp:lo tcltmp:hi tcltmp:inc } {
    set tcltmp:splitlen [ expr { ${tcltmp:hi} - ${tcltmp:lo} + 1 } ]
    set tcltmp:contents [ adlb::enumerate ${u:indices} members ${tcltmp:splitlen} ${tcltmp:lo} ]
    foreach v:chr ${tcltmp:contents} {
        # Var: string c:s_sknownSite OPT_TEMPORARY
        global c:s_sknownSite
        # Var: string c:s_sknown_g OPT_TEMPORARY
        global c:s_sknown_g
        # Var: file u:chrdedupsortedbam VCcallingPipeline.swift:__entry():164:68
        # Var: file u:realignedbam VCcallingPipeline.swift:__entry():165:63
        # Var: file u:recalibratedbam VCcallingPipeline.swift:__entry():166:66
        # Var: file u:intervals VCcallingPipeline.swift:__entry():167:61
        # Var: file u:recalreport VCcallingPipeline.swift:__entry():168:63
        # Var: file u:gvcfvariant VCcallingPipeline.swift:__entry():169:62
        # Var: file u:recalfiles VCcallingPipeline.swift:__entry():171:65
        # Var: file u:realfiles VCcallingPipeline.swift:__entry():172:64
        # Var: int u:ploidy VCcallingPipeline.swift:__entry():175:3
        # Var: string[int] t:507 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():177:105
        # Var: string t:534 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():183:80
        # Var: string[int] u:recalparmsindels VCcallingPipeline.swift:__entry():184:3
        # Var: file t:540 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():184:59
        # Var: string[int] u:realparms VCcallingPipeline.swift:__entry():187:3
        # Var: file t:559 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():187:52
        # Var: $string v:t:458 VALUE_OF [string:__t:458]
        # Var: $string v:t:457 VALUE_OF [string:__t:457]
        # Var: $void v:t:456 VALUE_OF [void:__t:456]
        # Var: $string v:t:496 VALUE_OF [string:__t:496]
        # Var: $string v:t:495 VALUE_OF [string:__t:495]
        # Var: $void v:t:494 VALUE_OF [void:__t:494]
        # Var: $boolean v:t:500 VALUE_OF [boolean:__t:500]
        # Var: $string v:t:508 VALUE_OF [string:__t:508]
        # Var: $string v:t:534 VALUE_OF [string:__t:534]
        # Var: $string v:t:659 VALUE_OF [string:__t:659]
        # Var: $string v:t:658 VALUE_OF [string:__t:658]
        # Var: $void v:t:657 VALUE_OF [void:__t:657]
        # Var: $string v:t:479 VALUE_OF [string:__t:479]
        # Var: $string v:t:464 VALUE_OF [string:__t:464]
        # Var: $string v:t:467 VALUE_OF [string:__t:467]
        # Var: $string v:t:470 VALUE_OF [string:__t:470]
        # Var: $string v:t:473 VALUE_OF [string:__t:473]
        # Var: $string v:t:476 VALUE_OF [string:__t:476]
        # Var: $string v:t:521 VALUE_OF [string:__t:521]
        # Var: $string v:t:604 VALUE_OF [string:__t:604]
        # Var: $string v:t:654 VALUE_OF [string:__t:654]
        lassign [ adlb::multicreate [ list integer 1 1 162 ] [ list container integer string 1 1 163 ] [ list string 1 1 164 ] [ list container integer string 1 1 165 ] [ list container integer string 1 1 167 ] ] u:ploidy t:507 t:534 u:recalparmsindels u:realparms
        turbine::c::log "allocated u:ploidy=<${u:ploidy}> t:507=<${t:507}> t:534=<${t:534}> u:recalparmsindels=<${u:recalparmsindels}> u:realparms=<${u:realparms}>"
        lassign [ turbine::make_file_tds [ adlb::multicreate [ list file 2 1 154 ] [ list file 1 1 155 ] [ list file 1 1 156 ] [ list file 1 1 157 ] [ list file 1 1 158 ] [ list file 0 1 159 ] [ list file 1 1 160 ] [ list file 1 1 161 ] [ list file 1 1 166 ] [ list file 1 1 168 ] ] [ list 1 1 1 1 1 1 1 1 0 0 ] ] u:chrdedupsortedbam u:realignedbam u:recalibratedbam u:intervals u:recalreport u:gvcfvariant u:recalfiles u:realfiles t:540 t:559
        set v:t:458 "${v:t:459}${v:chr}"
        set v:t:457 "${v:t:458}                             #######"
        turbine::trace_impl ${v:t:457}
        set v:t:496 "${v:t:497}${v:chr}"
        set v:t:495 "${v:t:496}        ######"
        turbine::trace_impl ${v:t:495}
        set v:t:500 [ string equal ${v:chr} "M" ]
        set v:t:508 "${v:chr}"
        turbine::array_kv_build ${t:507} [ ::adlb::dict_create 0 ${v:t:508} ] 1 integer string
        f:samtools_view ${u:chrdedupsortedbam} ${t:348} ${u:dedupsortedbam} ${t:504} ${t:507} -100 "HARD" "RANK"
        set v:t:534 "*${v:chr}.vcf"
        turbine::store_string ${t:534} ${v:t:534}
        f:find_files ${u:recalfiles} ${t:527} ${t:534} -100 "HARD" "RANK"
        f:sed ${t:540} ${u:recalfiles} ${c:s_sknownSite} -100 "HARD" "RANK"
        f:find_files ${u:realfiles} ${t:527} ${t:534} -100 "HARD" "RANK"
        f:sed ${t:559} ${u:recalfiles} ${c:s_sknown_g} -100 "HARD" "RANK"
        set v:t:659 "${v:t:660}${v:chr}"
        set v:t:658 "${v:t:659}   ###########"
        turbine::trace_impl ${v:t:658}
        if { ${v:t:500} } {
            turbine::store_integer ${u:ploidy} 1
        } else {
            turbine::store_integer ${u:ploidy} 2
        }
        set v:t:479 "${v:VarcallDir}${v:alias:sampleName}.${v:chr}.raw.g.vcf"
        turbine::set_filename_val ${u:gvcfvariant} ${v:t:479}
        set v:t:464 "${v:RealignDir}${v:alias:sampleName}.${v:chr}.wdups.sorted.bam"
        set v:t:467 "${v:RealignDir}${v:alias:sampleName}.${v:chr}.realigned.bam"
        set v:t:470 "${v:RealignDir}${v:alias:sampleName}.${v:chr}.recalibrated.bam"
        set v:t:473 "${v:RealignDir}${v:alias:sampleName}.${v:chr}.realignTargetCreator.intervals"
        set v:t:476 "${v:RealignDir}${v:alias:sampleName}.${v:chr}.recal_report.grp"
        set v:t:521 "samtools command did not produce alignments for ${v:t:464}splitting by chromosome failed"
        turbine::set_filename_val ${u:chrdedupsortedbam} ${v:t:464}
        turbine::set_filename_val ${u:realignedbam} ${v:t:467}
        set v:t:604 "GATK IndelRealigner command did not produce alignments for ${v:t:467}"
        set v:t:654 "GATK BQSR Recalibrator command did not produce alignments for ${v:t:470}"
        turbine::set_filename_val ${u:recalibratedbam} ${v:t:470}
        turbine::set_filename_val ${u:intervals} ${v:t:473}
        turbine::set_filename_val ${u:recalreport} ${v:t:476}
        turbine::rule [ list [ turbine::get_file_td ${t:540} ] ] "__entry-call_foreign-read-3 {${t:540}} ${u:recalparmsindels}"
        turbine::rule [ list [ turbine::get_file_td ${t:559} ] ] [ list __entry-call_foreign-read-4 ${t:348} ${t:504} ${t:559} ${t:565} ${t:567} ${t:572} ${t:622} ${v:VarcallDir} ${v:alias:sampleName} ${v:chr} ${v:t:464} ${v:t:467} ${v:t:470} ${v:t:473} ${v:t:476} ${v:t:479} ${v:t:604} ${v:t:654} ${u:chrdedupsortedbam} ${u:chromosomes_processing_done} ${u:gvcfvariant} ${u:indices} ${u:intervals} ${u:ploidy} ${u:qcfile} ${u:realignedbam} ${u:realparms} ${u:recalibratedbam} ${u:recalparmsindels} ${u:recalreport} ]
        turbine::rule [ list ${t:70} ] [ list __entry-optmerged-7 ${t:70} ${v:chr} ${u:realfiles} ${u:recalfiles} ]
        turbine::rule [ list ${t:348} [ turbine::get_file_td ${u:chrdedupsortedbam} ] ] [ list __entry-optmerged-8 ${t:348} ${v:alias:sampleName} ${v:t:464} ${v:t:521} ${u:chrdedupsortedbam} ${u:qcfile} ]
        turbine::read_refcount_decr ${t:534} 1
        turbine::file_read_refcount_decr ${u:realfiles} 1
        turbine::file_read_refcount_decr ${u:recalfiles} 1
        turbine::read_refcount_decr ${t:507} 1
    }
    set tcltmp:iters [ expr { max(0,(${tcltmp:hi} - ${tcltmp:lo}) / ${tcltmp:inc} + 1) } ]
    turbine::file_read_refcount_decr ${u:dedupsortedbam} [ expr { ${tcltmp:iters} } ]
    turbine::read_refcount_decr ${t:527} [ expr { ${tcltmp:iters} } ]
}


proc __entry-call_foreign-read-3 { t:540 u:recalparmsindels } {
    # Var: $file v:t:540 VALUE_OF [file:__t:540]
    # Var: $string v:t:539 VALUE_OF [string:__t:539]
    # Var: $int v:n RENAMED [$int:__v:n]
    # Var: $string v:t:538 VALUE_OF [string:__t:538]
    # Var: $string v:o RENAMED [$string:__v:o]
    # Var: $string$[int] v:recalparmsindels VALUE_OF [string[int]:recalparmsindels]
    set v:t:540 [ turbine::retrieve_file ${t:540} CACHED 1 ]
    set v:t:539 [ turbine::file_read_local ${v:t:540} ]
    set v:n [ string length ${v:t:539} ]
    set v:t:538 [ turbine::replace_all_impl ${v:t:539} "\n" " " 0 ${v:n} ]
    set v:o [ string trim ${v:t:538} ]
    set v:recalparmsindels [ turbine::split_impl ${v:o} " " ]
    turbine::build_rec ${u:recalparmsindels} ${v:recalparmsindels} [ list container integer string ] 0 1
}


proc __entry-call_foreign-read-4 { t:348 t:504 t:559 t:565 t:567 t:572 t:622 v:VarcallDir v:alias:sampleName v:chr v:t:464 v:t:467 v:t:470 v:t:473 v:t:476 v:t:479 v:t:604 v:t:654 u:chrdedupsortedbam u:chromosomes_processing_done u:gvcfvariant u:indices u:intervals u:ploidy u:qcfile u:realignedbam u:realparms u:recalibratedbam u:recalparmsindels u:recalreport } {
    # Var: $file v:t:559 VALUE_OF [file:__t:559]
    # Var: $string v:t:558 VALUE_OF [string:__t:558]
    # Var: $int v:n:1 RENAMED [$int:__v:n]
    # Var: $string v:t:557 VALUE_OF [string:__t:557]
    # Var: $string v:o:1 RENAMED [$string:__v:o]
    # Var: $string$[int] v:realparms VALUE_OF [string[int]:realparms]
    set v:t:559 [ turbine::retrieve_file ${t:559} CACHED 1 ]
    set v:t:558 [ turbine::file_read_local ${v:t:559} ]
    set v:n:1 [ string length ${v:t:558} ]
    set v:t:557 [ turbine::replace_all_impl ${v:t:558} "\n" " " 0 ${v:n:1} ]
    set v:o:1 [ string trim ${v:t:557} ]
    set v:realparms [ turbine::split_impl ${v:o:1} " " ]
    turbine::build_rec ${u:realparms} ${v:realparms} [ list container integer string ] 0 1
    turbine::rule [ list ${t:504} ${t:565} ${t:567} ${t:572} [ turbine::get_file_td ${u:chrdedupsortedbam} ] ] [ list RealignerTargetCreator-app-leaf1 ${t:348} ${t:504} ${t:565} ${t:567} ${t:572} ${t:622} ${v:VarcallDir} ${v:alias:sampleName} ${v:chr} ${v:t:464} ${v:t:467} ${v:t:470} ${v:t:473} ${v:t:476} ${v:t:479} ${v:t:604} ${v:t:654} ${u:chrdedupsortedbam} ${u:chromosomes_processing_done} ${u:gvcfvariant} ${u:indices} ${u:intervals} ${u:ploidy} ${u:qcfile} ${u:realignedbam} ${u:realparms} ${u:recalibratedbam} ${u:recalparmsindels} ${u:recalreport} ]
}


proc RealignerTargetCreator-app-leaf1 { t:348 t:504 t:565 t:567 t:572 t:622 v:VarcallDir v:alias:sampleName v:chr v:t:464 v:t:467 v:t:470 v:t:473 v:t:476 v:t:479 v:t:604 v:t:654 u:chrdedupsortedbam u:chromosomes_processing_done u:gvcfvariant u:indices u:intervals u:ploidy u:qcfile u:realignedbam u:realparms u:recalibratedbam u:recalparmsindels u:recalreport } {
    # Var: $string v:javadir:1 RENAMED [$string:__v:javadir] ./pipelinefunctions/realign_varcall_by_chr.swift:RealignerTargetCreator():8:121
    # Var: $string v:gatkdir RENAMED [$string:__v:gatkdir] ./pipelinefunctions/realign_varcall_by_chr.swift:RealignerTargetCreator():8:121
    # Var: $string v:reference RENAMED [$string:__v:reference] ./pipelinefunctions/realign_varcall_by_chr.swift:RealignerTargetCreator():8:121
    # Var: $string$[int] v:known RENAMED [$string$[int]:__v:known] ./pipelinefunctions/realign_varcall_by_chr.swift:RealignerTargetCreator():8:121
    # Var: $int v:thr RENAMED [$int:__v:thr] ./pipelinefunctions/realign_varcall_by_chr.swift:RealignerTargetCreator():8:121
    # Var: $file v:inputFile:11 RENAMED [$file:__v:inputFile] ./pipelinefunctions/realign_varcall_by_chr.swift:RealignerTargetCreator():8:121
    # Var: $file v:outputfile:1 RENAMED [$file:__v:outputfile] ./pipelinefunctions/realign_varcall_by_chr.swift:RealignerTargetCreator():8:121
    set v:javadir:1 [ turbine::retrieve_string ${t:565} CACHED 1 ]
    set v:gatkdir [ turbine::retrieve_string ${t:567} CACHED 1 ]
    set v:reference [ turbine::retrieve_string ${t:572} CACHED 1 ]
    set v:known [ turbine::unpack_args ${u:realparms} 1 string ]
    set v:thr [ turbine::retrieve_integer ${t:504} CACHED 1 ]
    set v:inputFile:11 [ turbine::retrieve_file ${u:chrdedupsortedbam} ]
    set tcltmp:init_rc 2
    set v:outputfile:1 [ turbine::create_local_file_ref ${v:t:473} ${tcltmp:init_rc} 1 ]
    turbine::c::log [ list exec: __v:javadir:1 "-Xmx8g" "-jar" ${v:gatkdir} "-T" "RealignerTargetCreator" "-R" ${v:reference} "-I" ${v:t:464} {*}${v:known} "-nt" ${v:thr} "-o" ${v:t:473} [ dict create ] ]
    turbine::exec_external ${v:javadir:1} [ dict create ] "-Xmx8g" "-jar" ${v:gatkdir} "-T" "RealignerTargetCreator" "-R" ${v:reference} "-I" ${v:t:464} {*}${v:known} "-nt" ${v:thr} "-o" ${v:t:473}
    turbine::store_file ${u:intervals} v:outputfile:1 0
    set tcltmp:prio [ turbine::get_priority ]
    turbine::set_priority ${tcltmp:prio}
    adlb::spawn 0 [ list IndelRealigner-app-leaf1 ${t:348} ${t:622} ${v:VarcallDir} ${v:alias:sampleName} ${v:chr} ${v:gatkdir} ${v:javadir:1} ${v:known} ${v:reference} ${v:t:464} ${v:t:467} ${v:t:470} ${v:t:473} ${v:t:476} ${v:t:479} ${v:t:604} ${v:t:654} ${v:thr} ${u:chrdedupsortedbam} ${u:chromosomes_processing_done} ${u:gvcfvariant} ${u:indices} ${u:intervals} ${u:ploidy} ${u:qcfile} ${u:realignedbam} ${u:recalibratedbam} ${u:recalparmsindels} ${u:recalreport} ]
    turbine::reset_priority
    turbine::decr_local_file_refcount v:outputfile:1
    turbine::read_refcount_decr ${u:realparms} 1
}


proc IndelRealigner-app-leaf1 { t:348 t:622 v:VarcallDir v:alias:sampleName v:chr v:gatkdir v:javadir:1 v:known v:reference v:t:464 v:t:467 v:t:470 v:t:473 v:t:476 v:t:479 v:t:604 v:t:654 v:thr u:chrdedupsortedbam u:chromosomes_processing_done u:gvcfvariant u:indices u:intervals u:ploidy u:qcfile u:realignedbam u:recalibratedbam u:recalparmsindels u:recalreport } {
    # Var: $file v:inputFile:12 RENAMED [$file:__v:inputFile] ./pipelinefunctions/realign_varcall_by_chr.swift:IndelRealigner():13:133
    # Var: $file v:intervals RENAMED [$file:__v:intervals] ./pipelinefunctions/realign_varcall_by_chr.swift:IndelRealigner():13:133
    # Var: $file v:outputfile:2 RENAMED [$file:__v:outputfile] ./pipelinefunctions/realign_varcall_by_chr.swift:IndelRealigner():13:133
    set v:inputFile:12 [ turbine::retrieve_file ${u:chrdedupsortedbam} CACHED 1 ]
    set v:intervals [ turbine::retrieve_file ${u:intervals} CACHED 1 ]
    set tcltmp:init_rc 2
    set v:outputfile:2 [ turbine::create_local_file_ref ${v:t:467} ${tcltmp:init_rc} 1 ]
    turbine::c::log [ list exec: __v:javadir:1 "-Xmx8g" "-jar" ${v:gatkdir} "-T" "IndelRealigner" "-R" ${v:reference} "-I" ${v:t:464} {*}${v:known} "--targetIntervals" ${v:t:473} "-o" ${v:t:467} [ dict create ] ]
    turbine::exec_external ${v:javadir:1} [ dict create ] "-Xmx8g" "-jar" ${v:gatkdir} "-T" "IndelRealigner" "-R" ${v:reference} "-I" ${v:t:464} {*}${v:known} "--targetIntervals" ${v:t:473} "-o" ${v:t:467}
    turbine::store_file ${u:realignedbam} v:outputfile:2 0
    turbine::rule [ list ${t:348} ] [ list __entry-chain13 ${t:348} ${v:alias:sampleName} ${v:t:467} ${v:t:604} ${u:qcfile} ]
    turbine::rule [ list ${t:622} ${u:recalparmsindels} ] [ list BaseRecalibrator-app-leaf1 ${t:348} ${t:622} ${v:VarcallDir} ${v:alias:sampleName} ${v:chr} ${v:gatkdir} ${v:javadir:1} ${v:reference} ${v:t:467} ${v:t:470} ${v:t:476} ${v:t:479} ${v:t:654} ${v:thr} ${u:chromosomes_processing_done} ${u:gvcfvariant} ${u:indices} ${u:ploidy} ${u:qcfile} ${u:realignedbam} ${u:recalibratedbam} ${u:recalparmsindels} ${u:recalreport} ]
    turbine::decr_local_file_refcount v:outputfile:2
}


proc __entry-chain13 { t:348 v:alias:sampleName v:t:467 v:t:604 u:qcfile } {
    # Var: $string v:samtoolsdir:7 RENAMED [$string:__v:samtoolsdir]
    # Var: $int v:numAlignments:7 RENAMED [$int:__v:numAlignments]
    # Var: $boolean v:t:595 VALUE_OF [boolean:__t:595]
    # Var: $boolean v:t:602 VALUE_OF [boolean:__t:602]
    # Var: $void v:t:601 VALUE_OF [void:__t:601]
    set v:samtoolsdir:7 [ turbine::retrieve_string ${t:348} CACHED 1 ]
    set v:numAlignments:7 [ alignment::samtools_view ${v:samtoolsdir:7} ${v:t:467} ]
    set v:t:595 [ expr { ${v:numAlignments:7} == 0 } ]
    set v:t:602 [ expr { ${v:numAlignments:7} > 0 } ]
    turbine::assert_impl ${v:t:602} ${v:t:604}
    set tcltmp:prio [ turbine::get_priority ]
    turbine::set_priority ${tcltmp:prio}
    adlb::spawn 0 [ list __entry-if14 ${v:alias:sampleName} ${v:t:467} ${v:t:595} ${u:qcfile} ]
    turbine::reset_priority
}


proc __entry-if14 { v:alias:sampleName v:t:467 v:t:595 u:qcfile } {
    if { ${v:t:595} } {
        # Var: string t:597 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():195:54
        # Var: $string v:t:597 VALUE_OF [string:__t:597]
        lassign [ adlb::multicreate [ list string 1 1 169 ] ] t:597
        turbine::c::log "allocated t:597=<${t:597}>"
        set v:t:597 "${v:alias:sampleName}\tREALIGNMENT\tFAIL\tGATK IndelRealigner command did not produce alignments for ${v:t:467}\n"
        turbine::store_string ${t:597} ${v:t:597}
        f:echo ${u:qcfile} ${t:597} -100 "HARD" "RANK"
        turbine::read_refcount_decr ${t:597} 1
    }
    turbine::file_read_refcount_decr ${u:qcfile} 1
}


proc BaseRecalibrator-app-leaf1 { t:348 t:622 v:VarcallDir v:alias:sampleName v:chr v:gatkdir v:javadir:1 v:reference v:t:467 v:t:470 v:t:476 v:t:479 v:t:654 v:thr u:chromosomes_processing_done u:gvcfvariant u:indices u:ploidy u:qcfile u:realignedbam u:recalibratedbam u:recalparmsindels u:recalreport } {
    # Var: $string v:dbsnp RENAMED [$string:__v:dbsnp] ./pipelinefunctions/realign_varcall_by_chr.swift:BaseRecalibrator():18:143
    # Var: $string$[int] v:knownindels RENAMED [$string$[int]:__v:knownindels] ./pipelinefunctions/realign_varcall_by_chr.swift:BaseRecalibrator():18:143
    # Var: $file v:inputFile:13 RENAMED [$file:__v:inputFile] ./pipelinefunctions/realign_varcall_by_chr.swift:BaseRecalibrator():18:143
    # Var: $file v:outputfile:3 RENAMED [$file:__v:outputfile] ./pipelinefunctions/realign_varcall_by_chr.swift:BaseRecalibrator():18:143
    set v:dbsnp [ turbine::retrieve_string ${t:622} CACHED 1 ]
    set v:knownindels [ turbine::unpack_args ${u:recalparmsindels} 1 string ]
    set v:inputFile:13 [ turbine::retrieve_file ${u:realignedbam} ]
    set tcltmp:init_rc 2
    set v:outputfile:3 [ turbine::create_local_file_ref ${v:t:476} ${tcltmp:init_rc} 1 ]
    turbine::c::log [ list exec: __v:javadir:1 "-Xmx16g" "-jar" ${v:gatkdir} "-T" "BaseRecalibrator" "-R" ${v:reference} "-I" ${v:t:467} "-knownSites" ${v:dbsnp} {*}${v:knownindels} "-nct" ${v:thr} "-o" ${v:t:476} [ dict create ] ]
    turbine::exec_external ${v:javadir:1} [ dict create ] "-Xmx16g" "-jar" ${v:gatkdir} "-T" "BaseRecalibrator" "-R" ${v:reference} "-I" ${v:t:467} "-knownSites" ${v:dbsnp} {*}${v:knownindels} "-nct" ${v:thr} "-o" ${v:t:476}
    turbine::store_file ${u:recalreport} v:outputfile:3 0
    set tcltmp:prio [ turbine::get_priority ]
    turbine::set_priority ${tcltmp:prio}
    adlb::spawn 0 [ list PrintReads-app-leaf1 ${t:348} ${v:VarcallDir} ${v:alias:sampleName} ${v:chr} ${v:dbsnp} ${v:gatkdir} ${v:javadir:1} ${v:reference} ${v:t:467} ${v:t:470} ${v:t:476} ${v:t:479} ${v:t:654} ${v:thr} ${u:chromosomes_processing_done} ${u:gvcfvariant} ${u:indices} ${u:ploidy} ${u:qcfile} ${u:realignedbam} ${u:recalibratedbam} ${u:recalreport} ]
    turbine::reset_priority
    turbine::decr_local_file_refcount v:outputfile:3
    turbine::read_refcount_decr ${u:recalparmsindels} 1
}


proc PrintReads-app-leaf1 { t:348 v:VarcallDir v:alias:sampleName v:chr v:dbsnp v:gatkdir v:javadir:1 v:reference v:t:467 v:t:470 v:t:476 v:t:479 v:t:654 v:thr u:chromosomes_processing_done u:gvcfvariant u:indices u:ploidy u:qcfile u:realignedbam u:recalibratedbam u:recalreport } {
    # Var: $file v:inputFile:14 RENAMED [$file:__v:inputFile] ./pipelinefunctions/realign_varcall_by_chr.swift:PrintReads():23:129
    # Var: $file v:recalreport RENAMED [$file:__v:recalreport] ./pipelinefunctions/realign_varcall_by_chr.swift:PrintReads():23:129
    # Var: $file v:outputfile:4 RENAMED [$file:__v:outputfile] ./pipelinefunctions/realign_varcall_by_chr.swift:PrintReads():23:129
    # Var: $int v:ploidy RENAMED [$int:__v:ploidy] ./pipelinefunctions/realign_varcall_by_chr.swift:HaplotypeCaller():28:455
    set v:inputFile:14 [ turbine::retrieve_file ${u:realignedbam} CACHED 1 ]
    set v:recalreport [ turbine::retrieve_file ${u:recalreport} CACHED 1 ]
    set tcltmp:init_rc 2
    set v:outputfile:4 [ turbine::create_local_file_ref ${v:t:470} ${tcltmp:init_rc} 1 ]
    turbine::c::log [ list exec: __v:javadir:1 "-Xmx16g" "-jar" ${v:gatkdir} "-T" "PrintReads" "-R" ${v:reference} "-I" ${v:t:467} "-BQSR" ${v:t:476} "-nct" ${v:thr} "--out" ${v:t:470} [ dict create ] ]
    turbine::exec_external ${v:javadir:1} [ dict create ] "-Xmx16g" "-jar" ${v:gatkdir} "-T" "PrintReads" "-R" ${v:reference} "-I" ${v:t:467} "-BQSR" ${v:t:476} "-nct" ${v:thr} "--out" ${v:t:470}
    turbine::store_file ${u:recalibratedbam} v:outputfile:4 0
    set v:ploidy [ turbine::retrieve_integer ${u:ploidy} CACHED 1 ]
    turbine::rule [ list ${t:348} ] [ list __entry-chain14 ${t:348} ${v:alias:sampleName} ${v:t:470} ${v:t:654} ${u:qcfile} ]
    set tcltmp:prio [ turbine::get_priority ]
    turbine::set_priority ${tcltmp:prio}
    adlb::spawn 0 [ list HaplotypeCaller-app-leaf1 ${v:VarcallDir} ${v:alias:sampleName} ${v:chr} ${v:dbsnp} ${v:gatkdir} ${v:javadir:1} ${v:ploidy} ${v:reference} ${v:t:470} ${v:t:479} ${v:thr} ${u:chromosomes_processing_done} ${u:gvcfvariant} ${u:indices} ${u:recalibratedbam} ]
    turbine::reset_priority
    turbine::decr_local_file_refcount v:outputfile:4
}


proc __entry-chain14 { t:348 v:alias:sampleName v:t:470 v:t:654 u:qcfile } {
    # Var: $string v:samtoolsdir:8 RENAMED [$string:__v:samtoolsdir]
    # Var: $int v:numAlignments:8 RENAMED [$int:__v:numAlignments]
    # Var: $boolean v:t:645 VALUE_OF [boolean:__t:645]
    # Var: $boolean v:t:652 VALUE_OF [boolean:__t:652]
    # Var: $void v:t:651 VALUE_OF [void:__t:651]
    set v:samtoolsdir:8 [ turbine::retrieve_string ${t:348} CACHED 1 ]
    set v:numAlignments:8 [ alignment::samtools_view ${v:samtoolsdir:8} ${v:t:470} ]
    set v:t:645 [ expr { ${v:numAlignments:8} == 0 } ]
    set v:t:652 [ expr { ${v:numAlignments:8} > 0 } ]
    turbine::assert_impl ${v:t:652} ${v:t:654}
    set tcltmp:prio [ turbine::get_priority ]
    turbine::set_priority ${tcltmp:prio}
    adlb::spawn 0 [ list __entry-if15 ${v:alias:sampleName} ${v:t:470} ${v:t:645} ${u:qcfile} ]
    turbine::reset_priority
}


proc __entry-if15 { v:alias:sampleName v:t:470 v:t:645 u:qcfile } {
    if { ${v:t:645} } {
        # Var: string t:647 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():200:57
        # Var: $string v:t:647 VALUE_OF [string:__t:647]
        lassign [ adlb::multicreate [ list string 1 1 170 ] ] t:647
        turbine::c::log "allocated t:647=<${t:647}>"
        set v:t:647 "${v:alias:sampleName}\tRECALIBRATION\tFAIL\tGATK BQSR Recalibration command did not produce alignments for ${v:t:470}\n"
        turbine::store_string ${t:647} ${v:t:647}
        f:echo ${u:qcfile} ${t:647} -100 "HARD" "RANK"
        turbine::read_refcount_decr ${t:647} 1
    }
    turbine::file_read_refcount_decr ${u:qcfile} 1
}


proc HaplotypeCaller-app-leaf1 { v:VarcallDir v:alias:sampleName v:chr v:dbsnp v:gatkdir v:javadir:1 v:ploidy v:reference v:t:470 v:t:479 v:thr u:chromosomes_processing_done u:gvcfvariant u:indices u:recalibratedbam } {
    # Var: $file v:inputFile:15 RENAMED [$file:__v:inputFile] ./pipelinefunctions/realign_varcall_by_chr.swift:HaplotypeCaller():28:455
    # Var: $file v:outputfile:5 RENAMED [$file:__v:outputfile] ./pipelinefunctions/realign_varcall_by_chr.swift:HaplotypeCaller():28:455
    # Var: *rw(file)[int] t:688 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():204:30
    # Var: string t:689 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():204:35
    # Var: $string$[int] v:indices VALUE_OF [string[int]:indices]
    # Var: $int v:t:686 VALUE_OF [int:__t:686]
    # Var: $string v:t:689 VALUE_OF [string:__t:689]
    lassign [ adlb::multicreate [ list container integer file_ref 1 1 171 ] [ list string 1 1 172 ] ] t:688 t:689
    turbine::c::log "allocated t:688=<${t:688}> t:689=<${t:689}>"
    set v:inputFile:15 [ turbine::retrieve_file ${u:recalibratedbam} CACHED 1 ]
    set tcltmp:init_rc 2
    set v:outputfile:5 [ turbine::create_local_file_ref ${v:t:479} ${tcltmp:init_rc} 1 ]
    turbine::c::log [ list exec: __v:javadir:1 "-Xmx8g" "-jar" ${v:gatkdir} "-T" "HaplotypeCaller" "-R" ${v:reference} "-I" ${v:t:470} "--dbsnp" ${v:dbsnp} "-o" ${v:t:479} "--emitRefConfidence" "GVCF" "-gt_mode" "DISCOVERY" "-A" "Coverage" "-A" "FisherStrand" "-A" "StrandOddsRatio" "-A" "HaplotypeScore" "-A" "MappingQualityRankSumTest" "-A" "QualByDepth" "-A" "RMSMappingQuality" "-A" "ReadPosRankSumTest" "-stand_call_conf" 30 "-stand_emit_conf" 30 "--sample_ploidy" ${v:ploidy} "-nt" 1 "-nct" ${v:thr} "-L" ${v:chr} [ dict create ] ]
    turbine::exec_external ${v:javadir:1} [ dict create ] "-Xmx8g" "-jar" ${v:gatkdir} "-T" "HaplotypeCaller" "-R" ${v:reference} "-I" ${v:t:470} "--dbsnp" ${v:dbsnp} "-o" ${v:t:479} "--emitRefConfidence" "GVCF" "-gt_mode" "DISCOVERY" "-A" "Coverage" "-A" "FisherStrand" "-A" "StrandOddsRatio" "-A" "HaplotypeScore" "-A" "MappingQualityRankSumTest" "-A" "QualByDepth" "-A" "RMSMappingQuality" "-A" "ReadPosRankSumTest" "-stand_call_conf" 30 "-stand_emit_conf" 30 "--sample_ploidy" ${v:ploidy} "-nt" 1 "-nct" ${v:thr} "-L" ${v:chr}
    turbine::store_file ${u:gvcfvariant} v:outputfile:5 0
    set v:indices [ adlb::enumerate ${u:indices} dict all 0 1 ]
    set v:t:686 [ dict size ${v:indices} ]
    turbine::glob [ list ${t:688} ] [ list ${t:689} ]
    set v:t:689 "${v:VarcallDir}${v:alias:sampleName}.*.raw.g.vcf"
    turbine::store_string ${t:689} ${v:t:689}
    turbine::rule [ list ${t:688} ] "__entry-call_foreign-size-1 ${t:688} ${v:t:686} ${u:chromosomes_processing_done}"
    turbine::decr_local_file_refcount v:outputfile:5
}


proc __entry-call_foreign-size-1 { t:688 v:t:686 u:chromosomes_processing_done } {
    # Var: file$[int] v:t:688 VALUE_OF [*rw(file)[int]:__t:688]
    # Var: $int v:t:687 VALUE_OF [int:__t:687]
    # Var: $boolean v:t:685 VALUE_OF [boolean:__t:685]
    set v:t:688 [ adlb::enumerate ${t:688} dict all 0 0 ]
    set v:t:687 [ dict size ${v:t:688} ]
    set v:t:685 [ expr { ${v:t:686} == ${v:t:687} } ]
    if { ${v:t:685} } {
        turbine::store_integer ${u:chromosomes_processing_done} 1
    }
    turbine::read_refcount_decr ${t:688} 1
}


proc __entry-optmerged-7 { t:70 v:chr u:realfiles u:recalfiles } {
    # Var: $string v:t:70:3 VALUE_OF [string:__t:70]
    # Var: $string v:t:482 VALUE_OF [string:__t:482]
    # Var: $string v:t:488 VALUE_OF [string:__t:488]
    set v:t:70:3 [ turbine::retrieve_string ${t:70} CACHED 1 ]
    set v:t:482 "${v:t:70:3}.${v:chr}.recal_foundfiles.txt"
    set v:t:488 "${v:t:70:3}.${v:chr}.real_foundfiles.txt"
    turbine::set_filename_val ${u:recalfiles} ${v:t:482}
    turbine::set_filename_val ${u:realfiles} ${v:t:488}
}


proc __entry-optmerged-8 { t:348 v:alias:sampleName v:t:464 v:t:521 u:chrdedupsortedbam u:qcfile } {
    # Var: $string v:samtoolsdir:6 RENAMED [$string:__v:samtoolsdir]
    set v:samtoolsdir:6 [ turbine::retrieve_string ${t:348} CACHED 1 ]
    set tcltmp:prio [ turbine::get_priority ]
    turbine::set_priority ${tcltmp:prio}
    adlb::spawn 0 [ list __entry-chain12 ${v:alias:sampleName} ${v:samtoolsdir:6} ${v:t:464} ${v:t:521} ${u:qcfile} ]
    turbine::reset_priority
    set tcltmp:prio [ turbine::get_priority ]
    turbine::set_priority ${tcltmp:prio}
    adlb::spawn 0 [ list samtools_index-app-leaf1 ${v:samtoolsdir:6} ${v:t:464} ${u:chrdedupsortedbam} ]
    turbine::reset_priority
}


proc __entry-chain12 { v:alias:sampleName v:samtoolsdir:6 v:t:464 v:t:521 u:qcfile } {
    # Var: $int v:numAlignments:6 RENAMED [$int:__v:numAlignments]
    # Var: $boolean v:t:512 VALUE_OF [boolean:__t:512]
    # Var: $boolean v:t:519 VALUE_OF [boolean:__t:519]
    # Var: $void v:t:518 VALUE_OF [void:__t:518]
    set v:numAlignments:6 [ alignment::samtools_view ${v:samtoolsdir:6} ${v:t:464} ]
    set v:t:512 [ expr { ${v:numAlignments:6} == 0 } ]
    set v:t:519 [ expr { ${v:numAlignments:6} > 0 } ]
    turbine::assert_impl ${v:t:519} ${v:t:521}
    set tcltmp:prio [ turbine::get_priority ]
    turbine::set_priority ${tcltmp:prio}
    adlb::spawn 0 [ list __entry-if13 ${v:alias:sampleName} ${v:t:464} ${v:t:512} ${u:qcfile} ]
    turbine::reset_priority
}


proc __entry-if13 { v:alias:sampleName v:t:464 v:t:512 u:qcfile } {
    if { ${v:t:512} } {
        # Var: string t:514 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():179:59
        # Var: $string v:t:514 VALUE_OF [string:__t:514]
        lassign [ adlb::multicreate [ list string 1 1 173 ] ] t:514
        turbine::c::log "allocated t:514=<${t:514}>"
        set v:t:514 "${v:alias:sampleName}\tREALIGNMENT\tFAIL\tsamtools command did not produce alignments for ${v:t:464}\n"
        turbine::store_string ${t:514} ${v:t:514}
        f:echo ${u:qcfile} ${t:514} -100 "HARD" "RANK"
        turbine::read_refcount_decr ${t:514} 1
    }
    turbine::file_read_refcount_decr ${u:qcfile} 1
}


proc samtools_index-app-leaf1 { v:samtoolsdir:6 v:t:464 u:chrdedupsortedbam } {
    # Var: $file v:inputFilename RENAMED [$file:__v:inputFilename] ./pipelinefunctions/realign_varcall_by_chr.swift:samtools_index():3:21
    set v:inputFilename [ turbine::retrieve_file ${u:chrdedupsortedbam} CACHED 1 ]
    turbine::c::log [ list exec: __v:samtoolsdir:6 "index" ${v:t:464} [ dict create ] ]
    turbine::exec_external ${v:samtoolsdir:6} [ dict create ] "index" ${v:t:464}
}


proc __entry-async_op-parse_int-6 { t:504 t:505 } {
    # Var: $string v:t:505 VALUE_OF [string:__t:505]
    # Var: $int v:t:504 VALUE_OF [int:__t:504]
    set v:t:505 [ turbine::retrieve_string ${t:505} CACHED 1 ]
    set v:t:504 [ turbine::parse_int_impl ${v:t:505} 10 ]
    turbine::store_integer ${t:504} ${v:t:504}
}


proc __entry-async_op-dircat-3 { t:567 t:569 } {
    # Var: $string v:t:569 VALUE_OF [string:__t:569]
    # Var: $string v:t:568 VALUE_OF [string:__t:568]
    # Var: $string v:t:567 VALUE_OF [string:__t:567]
    set v:t:569 [ turbine::retrieve_string ${t:569} CACHED 1 ]
    set v:t:568 "${v:t:569}/GenomeAnalysisTK.jar"
    set v:t:567 "${v:t:568}"
    turbine::store_string ${t:567} ${v:t:567}
}


proc __entry-optmerged-9 { t:527 t:529 t:531 t:572 t:575 t:622 t:625 } {
    # Var: $string v:t:529 VALUE_OF [string:__t:529]
    set v:t:529 [ turbine::retrieve_string ${t:529} CACHED 1 ]
    turbine::rule [ list ${t:531} ] [ list __entry-async_op-dircat-4 ${t:527} ${t:531} ${v:t:529} ]
    turbine::rule [ list ${t:575} ] [ list __entry-async_op-dircat-5 ${t:572} ${t:575} ${v:t:529} ]
    turbine::rule [ list ${t:625} ] [ list __entry-async_op-dircat-6 ${t:622} ${t:625} ${v:t:529} ]
}


proc __entry-async_op-dircat-4 { t:527 t:531 v:t:529 } {
    # Var: $string v:t:531 VALUE_OF [string:__t:531]
    # Var: $string v:t:528 VALUE_OF [string:__t:528]
    # Var: $string v:t:527 VALUE_OF [string:__t:527]
    set v:t:531 [ turbine::retrieve_string ${t:531} CACHED 1 ]
    set v:t:528 "${v:t:529}/${v:t:531}"
    set v:t:527 "${v:t:528}/"
    turbine::store_string ${t:527} ${v:t:527}
}


proc __entry-async_op-dircat-5 { t:572 t:575 v:t:529 } {
    # Var: $string v:t:575 VALUE_OF [string:__t:575]
    # Var: $string v:t:572 VALUE_OF [string:__t:572]
    set v:t:575 [ turbine::retrieve_string ${t:575} CACHED 1 ]
    set v:t:572 "${v:t:529}/${v:t:575}"
    turbine::store_string ${t:572} ${v:t:572}
}


proc __entry-async_op-dircat-6 { t:622 t:625 v:t:529 } {
    # Var: $string v:t:625 VALUE_OF [string:__t:625]
    # Var: $string v:t:622 VALUE_OF [string:__t:622]
    set v:t:625 [ turbine::retrieve_string ${t:625} CACHED 1 ]
    set v:t:622 "${v:t:529}/${v:t:625}"
    turbine::store_string ${t:622} ${v:t:622}
}


proc samtools_flagstat-app-leaf1 { t:348 v:t:26 v:t:58 u:dedupsortedbam u:flagstats u:stat } {
    # Var: $string v:samtoolsdir:11 RENAMED [$string:__v:samtoolsdir] ./pipelinefunctions/align_dedup.swift:samtools_flagstat():51:42
    # Var: $file v:inputFile:18 RENAMED [$file:__v:inputFile] ./pipelinefunctions/align_dedup.swift:samtools_flagstat():51:42
    # Var: $file v:output:3 RENAMED [$file:__v:output] ./pipelinefunctions/align_dedup.swift:samtools_flagstat():51:42
    # Var: $file v:flagstats VALUE_OF [file:flagstats]
    # Var: $string$[int] v:stat VALUE_OF [string[int]:stat]
    set v:samtoolsdir:11 [ turbine::retrieve_string ${t:348} CACHED 1 ]
    set v:inputFile:18 [ turbine::retrieve_file ${u:dedupsortedbam} CACHED 1 ]
    set tcltmp:init_rc 2
    set v:output:3 [ turbine::create_local_file_ref ${v:t:58} ${tcltmp:init_rc} 1 ]
    turbine::c::log [ list exec: __v:samtoolsdir:11 "flagstat" ${v:t:26} [ dict create "stdout" ${v:t:58} ] ]
    turbine::exec_external ${v:samtoolsdir:11} [ dict create "stdout" ${v:t:58} ] "flagstat" ${v:t:26}
    turbine::store_file ${u:flagstats} v:output:3 0
    set v:flagstats [ turbine::retrieve_file ${u:flagstats} CACHED 1 ]
    set v:stat [ turbine::file_lines_impl ${v:flagstats} ]
    turbine::build_rec ${u:stat} ${v:stat} [ list container integer string ] 0 1
    turbine::decr_local_file_refcount v:output:3
}


proc __entry-optmerged-10 { t:64 t:70 t:786 v:alias:sampleName u:alignedsam u:chr_bamListfile u:chr_vcfListfile } {
    # Var: $string v:t:786:1 VALUE_OF [string:__t:786]
    # Var: $string v:t:64 VALUE_OF [string:__t:64]
    # Var: $string v:t:70 VALUE_OF [string:__t:70]
    # Var: $string v:t:74 VALUE_OF [string:__t:74]
    # Var: $string v:t:69 VALUE_OF [string:__t:69]
    set v:t:786:1 [ turbine::retrieve_string ${t:786} CACHED 1 ]
    set v:t:64 "${v:t:786:1}/align/${v:alias:sampleName}.nodups.sam"
    turbine::store_string ${t:64} ${v:t:64}
    set v:t:70 "${v:t:786:1}/${v:alias:sampleName}"
    turbine::store_string ${t:70} ${v:t:70}
    turbine::set_filename_val ${u:alignedsam} ${v:t:64}
    set v:t:74 "${v:t:70}.chr_vcfList.txt"
    turbine::set_filename_val ${u:chr_vcfListfile} ${v:t:74}
    set v:t:69 "${v:t:70}.chr_bamList.txt"
    turbine::set_filename_val ${u:chr_bamListfile} ${v:t:69}
}


proc __entry-async_op-strcat-14 { t:786 u:variantFiles } {
    # Var: $string v:t:786 VALUE_OF [string:__t:786]
    # Var: $string v:t:785 VALUE_OF [string:__t:785]
    set v:t:786 [ turbine::retrieve_string ${t:786} CACHED 1 ]
    set v:t:785 "${v:t:786}/variantFiles.txt"
    turbine::set_filename_val ${u:variantFiles} ${v:t:785}
}


proc __entry-async_op-eq_string-2 { t:79 t:80 } {
    # Var: $string v:t:80 VALUE_OF [string:__t:80]
    # Var: $boolean v:t:79 VALUE_OF [boolean:__t:79]
    set v:t:80 [ turbine::retrieve_string ${t:80} CACHED 1 ]
    set v:t:79 [ string equal ${v:t:80} "SAMBLASTER" ]
    turbine::store_integer ${t:79} ${v:t:79}
}


proc __entry-async_op-parse_float-4 { t:340 t:368 } {
    # Var: $string v:t:340 VALUE_OF [string:__t:340]
    # Var: $float v:t:368 VALUE_OF [float:__t:368]
    set v:t:340 [ turbine::retrieve_string ${t:340} CACHED 1 ]
    set v:t:368 [ turbine::string2float_impl ${v:t:340} ]
    turbine::store_float ${t:368} ${v:t:368}
}


proc __entry-call_foreign-split-3 { t:453 u:indices } {
    # Var: $string v:t:453 VALUE_OF [string:__t:453]
    # Var: $string$[int] v:indices:1 VALUE_OF [string[int]:indices]
    set v:t:453 [ turbine::retrieve_string ${t:453} CACHED 1 ]
    set v:indices:1 [ turbine::split_impl ${v:t:453} ":" ]
    turbine::build_rec ${u:indices} ${v:indices:1} [ list container integer string ] 0 1
}


proc __entry-optmerged-11 { t:35 t:777 t:778 t:779 t:781 u:jointVCF } {
    # Var: $string v:t:779 VALUE_OF [string:__t:779]
    # Var: $string v:t:781 VALUE_OF [string:__t:781]
    # Var: $string v:t:778 VALUE_OF [string:__t:778]
    # Var: $string v:t:35 VALUE_OF [string:__t:35]
    # Var: $string v:t:777 VALUE_OF [string:__t:777]
    # Var: $string v:t:790 VALUE_OF [string:__t:790]
    set v:t:779 [ turbine::retrieve_string ${t:779} CACHED 1 ]
    set v:t:781 [ turbine::retrieve_string ${t:781} CACHED 1 ]
    set v:t:778 "${v:t:779}/${v:t:781}"
    turbine::store_string ${t:778} ${v:t:778}
    set v:t:35 "${v:t:779}/${v:t:781}/docs/QC_test_results.txt"
    turbine::store_string ${t:35} ${v:t:35}
    set v:t:777 "${v:t:778}/jointVCFs/jointVCFcalled.vcf"
    turbine::store_string ${t:777} ${v:t:777}
    turbine::set_filename_val ${u:jointVCF} ${v:t:777}
    set v:t:790 "${v:t:778}/jointVCFs"
    set tcltmp:prio [ turbine::get_priority ]
    turbine::set_priority ${tcltmp:prio}
    adlb::spawn 0 [ list mkdir-app-leaf1-1 ${v:t:790} ]
    turbine::reset_priority
}


proc mkdir-app-leaf1-1 { v:t:790 } {
    # Var: $void v:v:1 RENAMED [$void:__v:v] /usr/local/src/swift-t-1.1/turbine/export/unix.swift:mkdir():65:15
    turbine::c::log [ list exec: "mkdir" "-p" ${v:t:790} [ dict create ] ]
    turbine::exec_external "mkdir" [ dict create ] "-p" ${v:t:790}
}


proc f:cp { u:o u:i v:loc_rank v:loc_strictness v:loc_accuracy } {
    turbine::c::log "function: cp"
    # Var: $boolean v:mapped_o OPT_TEMPORARY
    turbine::file_read_refcount_incr ${u:o} 1
    turbine::file_read_refcount_incr ${u:i} 2
    set filename:i [ turbine::get_file_path ${u:i} ]
    set v:mapped_o [ turbine::is_file_mapped ${u:o} ]
    set filename:o [ turbine::get_file_path ${u:o} ]
    if { ${v:mapped_o} } {
    } else {
        # Var: $string optf:o FILENAME_OF [file:o]
        set optf:o [ turbine::mktemp ]
        turbine::set_filename_val ${u:o} ${optf:o}
    }
    turbine::rule [ list ${filename:i} ${filename:o} [ turbine::get_file_td ${u:i} ] ] "cp-app-leaf1 {${filename:i}} {${filename:o}} ${v:mapped_o} {${u:i}} {${u:o}}" target ${v:loc_rank} strictness ${v:loc_strictness} accuracy ${v:loc_accuracy}
}


proc cp-app-leaf1 { filename:i filename:o v:mapped_o u:i u:o } {
    # Var: $string v:__filename:i VALUE_OF [string:__filename:i] /usr/local/src/swift-t-1.1/turbine/export/unix.swift:cp():24:9
    # Var: $string v:__filename:o VALUE_OF [string:__filename:o] /usr/local/src/swift-t-1.1/turbine/export/unix.swift:cp():24:9
    # Var: $file v:i VALUE_OF [file:i] /usr/local/src/swift-t-1.1/turbine/export/unix.swift:cp():24:9
    # Var: $file v:o VALUE_OF [file:o] /usr/local/src/swift-t-1.1/turbine/export/unix.swift:cp():24:9
    # Var: $boolean v:3 EXPR_TEMPORARY /usr/local/src/swift-t-1.1/turbine/export/unix.swift:cp():24:9
    set v:__filename:i [ turbine::retrieve_string ${filename:i} ]
    set v:__filename:o [ turbine::retrieve_string ${filename:o} CACHED 1 ]
    set v:i [ turbine::retrieve_file ${u:i} CACHED 2 ]
    if { ${v:mapped_o} } {
        set tcltmp:init_rc 2
    } else {
        set tcltmp:init_rc 1
    }
    set v:o [ turbine::create_local_file_ref ${v:__filename:o} ${tcltmp:init_rc} ${v:mapped_o} ]
    turbine::c::log [ list exec: "cp" ${v:__filename:i} ${v:__filename:o} [ dict create ] ]
    turbine::exec_external "cp" [ dict create ] ${v:__filename:i} ${v:__filename:o}
    set v:3 [ expr { ! ${v:mapped_o} } ]
    turbine::store_file ${u:o} v:o ${v:3}
    turbine::decr_local_file_refcount v:o
}


proc f:sed { u:o u:i u:command v:loc_rank v:loc_strictness v:loc_accuracy } {
    turbine::c::log "function: sed"
    # Var: $boolean v:mapped_o OPT_TEMPORARY
    turbine::read_refcount_incr ${u:command} 1
    turbine::file_read_refcount_incr ${u:o} 1
    turbine::file_read_refcount_incr ${u:i} 2
    set filename:i [ turbine::get_file_path ${u:i} ]
    set v:mapped_o [ turbine::is_file_mapped ${u:o} ]
    set filename:o [ turbine::get_file_path ${u:o} ]
    if { ${v:mapped_o} } {
    } else {
        # Var: $string optf:o FILENAME_OF [file:o]
        set optf:o [ turbine::mktemp ]
        turbine::set_filename_val ${u:o} ${optf:o}
    }
    turbine::rule [ list ${filename:i} ${filename:o} ${u:command} [ turbine::get_file_td ${u:i} ] ] "sed-app-leaf1 {${filename:i}} {${filename:o}} ${v:mapped_o} {${u:command}} {${u:i}} {${u:o}}" target ${v:loc_rank} strictness ${v:loc_strictness} accuracy ${v:loc_accuracy}
}


proc sed-app-leaf1 { filename:i filename:o v:mapped_o u:command u:i u:o } {
    # Var: $string v:command VALUE_OF [string:command] /usr/local/src/swift-t-1.1/turbine/export/unix.swift:sed():40:26
    # Var: $string v:__filename:i VALUE_OF [string:__filename:i] /usr/local/src/swift-t-1.1/turbine/export/unix.swift:sed():40:26
    # Var: $string v:__filename:o VALUE_OF [string:__filename:o] /usr/local/src/swift-t-1.1/turbine/export/unix.swift:sed():40:26
    # Var: $file v:i VALUE_OF [file:i] /usr/local/src/swift-t-1.1/turbine/export/unix.swift:sed():40:26
    # Var: $file v:o VALUE_OF [file:o] /usr/local/src/swift-t-1.1/turbine/export/unix.swift:sed():40:26
    # Var: $boolean v:3 EXPR_TEMPORARY /usr/local/src/swift-t-1.1/turbine/export/unix.swift:sed():40:26
    set v:command [ turbine::retrieve_string ${u:command} CACHED 1 ]
    set v:__filename:i [ turbine::retrieve_string ${filename:i} ]
    set v:__filename:o [ turbine::retrieve_string ${filename:o} CACHED 1 ]
    set v:i [ turbine::retrieve_file ${u:i} CACHED 2 ]
    if { ${v:mapped_o} } {
        set tcltmp:init_rc 2
    } else {
        set tcltmp:init_rc 1
    }
    set v:o [ turbine::create_local_file_ref ${v:__filename:o} ${tcltmp:init_rc} ${v:mapped_o} ]
    turbine::c::log [ list exec: "sed" ${v:command} ${v:__filename:i} [ dict create "stdout" ${v:__filename:o} ] ]
    turbine::exec_external "sed" [ dict create "stdout" ${v:__filename:o} ] ${v:command} ${v:__filename:i}
    set v:3 [ expr { ! ${v:mapped_o} } ]
    turbine::store_file ${u:o} v:o ${v:3}
    turbine::decr_local_file_refcount v:o
}


proc f:echo { u:o u:s v:loc_rank v:loc_strictness v:loc_accuracy } {
    turbine::c::log "function: echo"
    # Var: $boolean v:mapped_o OPT_TEMPORARY
    turbine::file_read_refcount_incr ${u:o} 1
    turbine::read_refcount_incr ${u:s} 1
    set v:mapped_o [ turbine::is_file_mapped ${u:o} ]
    set filename:o [ turbine::get_file_path ${u:o} ]
    if { ${v:mapped_o} } {
    } else {
        # Var: $string optf:o FILENAME_OF [file:o]
        set optf:o [ turbine::mktemp ]
        turbine::set_filename_val ${u:o} ${optf:o}
    }
    turbine::rule [ list ${filename:o} ${u:s} ] "echo-app-leaf1 {${filename:o}} ${v:mapped_o} {${u:o}} {${u:s}}" target ${v:loc_rank} strictness ${v:loc_strictness} accuracy ${v:loc_accuracy}
}


proc echo-app-leaf1 { filename:o v:mapped_o u:o u:s } {
    # Var: $string v:s VALUE_OF [string:s] /usr/local/src/swift-t-1.1/turbine/export/unix.swift:echo():55:19
    # Var: $string v:__filename:o VALUE_OF [string:__filename:o] /usr/local/src/swift-t-1.1/turbine/export/unix.swift:echo():55:19
    # Var: $file v:o VALUE_OF [file:o] /usr/local/src/swift-t-1.1/turbine/export/unix.swift:echo():55:19
    # Var: $boolean v:3 EXPR_TEMPORARY /usr/local/src/swift-t-1.1/turbine/export/unix.swift:echo():55:19
    set v:s [ turbine::retrieve_string ${u:s} CACHED 1 ]
    set v:__filename:o [ turbine::retrieve_string ${filename:o} CACHED 1 ]
    if { ${v:mapped_o} } {
        set tcltmp:init_rc 2
    } else {
        set tcltmp:init_rc 1
    }
    set v:o [ turbine::create_local_file_ref ${v:__filename:o} ${tcltmp:init_rc} ${v:mapped_o} ]
    turbine::c::log [ list exec: "echo" ${v:s} [ dict create "stdout" ${v:__filename:o} ] ]
    turbine::exec_external "echo" [ dict create "stdout" ${v:__filename:o} ] ${v:s}
    set v:3 [ expr { ! ${v:mapped_o} } ]
    turbine::store_file ${u:o} v:o ${v:3}
    turbine::decr_local_file_refcount v:o
}


proc f:bwa_mem { u:output u:bwadir u:read1 u:read2 u:INDEX u:bwamemparams u:PBSCORES u:rgheader v:loc_rank v:loc_strictness v:loc_accuracy } {
    turbine::c::log "function: bwa_mem"
    # Var: $boolean v:mapped_output OPT_TEMPORARY
    turbine::read_refcount_incr ${u:read1} 1
    turbine::read_refcount_incr ${u:read2} 1
    turbine::read_refcount_incr ${u:bwamemparams} 1
    turbine::read_refcount_incr ${u:rgheader} 1
    turbine::read_refcount_incr ${u:INDEX} 1
    turbine::read_refcount_incr ${u:bwadir} 1
    turbine::read_refcount_incr ${u:PBSCORES} 1
    turbine::file_read_refcount_incr ${u:output} 1
    set v:mapped_output [ turbine::is_file_mapped ${u:output} ]
    set filename:output [ turbine::get_file_path ${u:output} ]
    if { ${v:mapped_output} } {
    } else {
        # Var: $string optf:output FILENAME_OF [file:output]
        set optf:output [ turbine::mktemp ]
        turbine::set_filename_val ${u:output} ${optf:output}
    }
    turbine::rule [ list ${u:INDEX} ${u:PBSCORES} ${filename:output} ${u:bwadir} ${u:bwamemparams} ${u:read1} ${u:read2} ${u:rgheader} ] "bwa_mem-app-leaf1 {${u:INDEX}} {${u:PBSCORES}} {${filename:output}} ${v:mapped_output} {${u:bwadir}} {${u:bwamemparams}} {${u:output}} {${u:read1}} {${u:read2}} {${u:rgheader}}" target ${v:loc_rank} strictness ${v:loc_strictness} accuracy ${v:loc_accuracy}
}


proc bwa_mem-app-leaf1 { u:INDEX u:PBSCORES filename:output v:mapped_output u:bwadir u:bwamemparams u:output u:read1 u:read2 u:rgheader } {
    # Var: $string v:bwadir VALUE_OF [string:bwadir] ./pipelinefunctions/align_dedup.swift:bwa_mem():4:86
    # Var: $string$[int] v:bwamemparams VALUE_OF [string[int]:bwamemparams] ./pipelinefunctions/align_dedup.swift:bwa_mem():4:86
    # Var: $int v:PBSCORES VALUE_OF [int:PBSCORES] ./pipelinefunctions/align_dedup.swift:bwa_mem():4:86
    # Var: $string v:rgheader VALUE_OF [string:rgheader] ./pipelinefunctions/align_dedup.swift:bwa_mem():4:86
    # Var: $string v:INDEX VALUE_OF [string:INDEX] ./pipelinefunctions/align_dedup.swift:bwa_mem():4:86
    # Var: $string v:read1 VALUE_OF [string:read1] ./pipelinefunctions/align_dedup.swift:bwa_mem():4:86
    # Var: $string v:read2 VALUE_OF [string:read2] ./pipelinefunctions/align_dedup.swift:bwa_mem():4:86
    # Var: $string v:__filename:output VALUE_OF [string:__filename:output] ./pipelinefunctions/align_dedup.swift:bwa_mem():4:86
    # Var: $file v:output VALUE_OF [file:output] ./pipelinefunctions/align_dedup.swift:bwa_mem():4:86
    # Var: $boolean v:3 EXPR_TEMPORARY ./pipelinefunctions/align_dedup.swift:bwa_mem():4:86
    set v:bwadir [ turbine::retrieve_string ${u:bwadir} CACHED 1 ]
    set v:bwamemparams [ turbine::unpack_args ${u:bwamemparams} 1 string ]
    set v:PBSCORES [ turbine::retrieve_integer ${u:PBSCORES} CACHED 1 ]
    set v:rgheader [ turbine::retrieve_string ${u:rgheader} CACHED 1 ]
    set v:INDEX [ turbine::retrieve_string ${u:INDEX} CACHED 1 ]
    set v:read1 [ turbine::retrieve_string ${u:read1} CACHED 1 ]
    set v:read2 [ turbine::retrieve_string ${u:read2} CACHED 1 ]
    set v:__filename:output [ turbine::retrieve_string ${filename:output} CACHED 1 ]
    if { ${v:mapped_output} } {
        set tcltmp:init_rc 2
    } else {
        set tcltmp:init_rc 1
    }
    set v:output [ turbine::create_local_file_ref ${v:__filename:output} ${tcltmp:init_rc} ${v:mapped_output} ]
    turbine::c::log [ list exec: __v:bwadir "mem" "-M" {*}${v:bwamemparams} "-t" ${v:PBSCORES} "-R" ${v:rgheader} ${v:INDEX} ${v:read1} ${v:read2} [ dict create "stdout" ${v:__filename:output} ] ]
    turbine::exec_external ${v:bwadir} [ dict create "stdout" ${v:__filename:output} ] "mem" "-M" {*}${v:bwamemparams} "-t" ${v:PBSCORES} "-R" ${v:rgheader} ${v:INDEX} ${v:read1} ${v:read2}
    set v:3 [ expr { ! ${v:mapped_output} } ]
    turbine::store_file ${u:output} v:output ${v:3}
    turbine::decr_local_file_refcount v:output
    turbine::read_refcount_decr ${u:bwamemparams} 1
}


proc f:samtools_view { u:output u:samtoolsdir u:inputFile u:thr u:args v:loc_rank v:loc_strictness v:loc_accuracy } {
    turbine::c::log "function: samtools_view"
    # Var: $boolean v:mapped_output OPT_TEMPORARY
    turbine::read_refcount_incr ${u:thr} 1
    turbine::file_read_refcount_incr ${u:inputFile} 2
    turbine::file_read_refcount_incr ${u:output} 1
    turbine::read_refcount_incr ${u:samtoolsdir} 1
    turbine::read_refcount_incr ${u:args} 1
    set filename:inputFile [ turbine::get_file_path ${u:inputFile} ]
    set v:mapped_output [ turbine::is_file_mapped ${u:output} ]
    set filename:output [ turbine::get_file_path ${u:output} ]
    if { ${v:mapped_output} } {
    } else {
        # Var: $string optf:output FILENAME_OF [file:output]
        set optf:output [ turbine::mktemp ]
        turbine::set_filename_val ${u:output} ${optf:output}
    }
    turbine::rule [ list ${filename:inputFile} ${filename:output} ${u:args} [ turbine::get_file_td ${u:inputFile} ] ${u:samtoolsdir} ${u:thr} ] "samtools_view-app-leaf1 {${filename:inputFile}} {${filename:output}} ${v:mapped_output} {${u:args}} {${u:inputFile}} {${u:output}} {${u:samtoolsdir}} {${u:thr}}" target ${v:loc_rank} strictness ${v:loc_strictness} accuracy ${v:loc_accuracy}
}


proc samtools_view-app-leaf1 { filename:inputFile filename:output v:mapped_output u:args u:inputFile u:output u:samtoolsdir u:thr } {
    # Var: $string v:samtoolsdir VALUE_OF [string:samtoolsdir] ./pipelinefunctions/align_dedup.swift:samtools_view():15:58
    # Var: $int v:thr VALUE_OF [int:thr] ./pipelinefunctions/align_dedup.swift:samtools_view():15:58
    # Var: $string v:__filename:inputFile VALUE_OF [string:__filename:inputFile] ./pipelinefunctions/align_dedup.swift:samtools_view():15:58
    # Var: $string$[int] v:args VALUE_OF [string[int]:args] ./pipelinefunctions/align_dedup.swift:samtools_view():15:58
    # Var: $string v:__filename:output VALUE_OF [string:__filename:output] ./pipelinefunctions/align_dedup.swift:samtools_view():15:58
    # Var: $file v:inputFile VALUE_OF [file:inputFile] ./pipelinefunctions/align_dedup.swift:samtools_view():15:58
    # Var: $file v:output VALUE_OF [file:output] ./pipelinefunctions/align_dedup.swift:samtools_view():15:58
    # Var: $boolean v:3 EXPR_TEMPORARY ./pipelinefunctions/align_dedup.swift:samtools_view():15:58
    set v:samtoolsdir [ turbine::retrieve_string ${u:samtoolsdir} CACHED 1 ]
    set v:thr [ turbine::retrieve_integer ${u:thr} CACHED 1 ]
    set v:__filename:inputFile [ turbine::retrieve_string ${filename:inputFile} ]
    set v:args [ turbine::unpack_args ${u:args} 1 string ]
    set v:__filename:output [ turbine::retrieve_string ${filename:output} CACHED 1 ]
    set v:inputFile [ turbine::retrieve_file ${u:inputFile} CACHED 2 ]
    if { ${v:mapped_output} } {
        set tcltmp:init_rc 2
    } else {
        set tcltmp:init_rc 1
    }
    set v:output [ turbine::create_local_file_ref ${v:__filename:output} ${tcltmp:init_rc} ${v:mapped_output} ]
    turbine::c::log [ list exec: __v:samtoolsdir "view" "-@" ${v:thr} "-bS" ${v:__filename:inputFile} {*}${v:args} [ dict create "stdout" ${v:__filename:output} ] ]
    turbine::exec_external ${v:samtoolsdir} [ dict create "stdout" ${v:__filename:output} ] "view" "-@" ${v:thr} "-bS" ${v:__filename:inputFile} {*}${v:args}
    set v:3 [ expr { ! ${v:mapped_output} } ]
    turbine::store_file ${u:output} v:output ${v:3}
    turbine::decr_local_file_refcount v:output
    turbine::read_refcount_decr ${u:args} 1
}


proc f:novosort { u:output u:novosortdir u:inputFile u:tmpdir u:thr u:sortoptions v:loc_rank v:loc_strictness v:loc_accuracy } {
    turbine::c::log "function: novosort"
    # Var: $boolean v:mapped_output OPT_TEMPORARY
    turbine::read_refcount_incr ${u:thr} 1
    turbine::read_refcount_incr ${u:novosortdir} 1
    turbine::read_refcount_incr ${u:tmpdir} 1
    turbine::read_refcount_incr ${u:sortoptions} 1
    turbine::file_read_refcount_incr ${u:inputFile} 2
    turbine::file_read_refcount_incr ${u:output} 1
    set filename:inputFile [ turbine::get_file_path ${u:inputFile} ]
    set v:mapped_output [ turbine::is_file_mapped ${u:output} ]
    set filename:output [ turbine::get_file_path ${u:output} ]
    if { ${v:mapped_output} } {
    } else {
        # Var: $string optf:output FILENAME_OF [file:output]
        set optf:output [ turbine::mktemp ]
        turbine::set_filename_val ${u:output} ${optf:output}
    }
    turbine::rule [ list ${filename:inputFile} ${filename:output} [ turbine::get_file_td ${u:inputFile} ] ${u:novosortdir} ${u:sortoptions} ${u:thr} ${u:tmpdir} ] "novosort-app-leaf1 {${filename:inputFile}} {${filename:output}} ${v:mapped_output} {${u:inputFile}} {${u:novosortdir}} {${u:output}} {${u:sortoptions}} {${u:thr}} {${u:tmpdir}}" target ${v:loc_rank} strictness ${v:loc_strictness} accuracy ${v:loc_accuracy}
}


proc novosort-app-leaf1 { filename:inputFile filename:output v:mapped_output u:inputFile u:novosortdir u:output u:sortoptions u:thr u:tmpdir } {
    # Var: $string v:novosortdir VALUE_OF [string:novosortdir] ./pipelinefunctions/align_dedup.swift:novosort():33:79
    # Var: $string v:tmpdir VALUE_OF [string:tmpdir] ./pipelinefunctions/align_dedup.swift:novosort():33:79
    # Var: $int v:thr VALUE_OF [int:thr] ./pipelinefunctions/align_dedup.swift:novosort():33:79
    # Var: $string v:__filename:inputFile VALUE_OF [string:__filename:inputFile] ./pipelinefunctions/align_dedup.swift:novosort():33:79
    # Var: $string v:__filename:output VALUE_OF [string:__filename:output] ./pipelinefunctions/align_dedup.swift:novosort():33:79
    # Var: $string$[int] v:sortoptions VALUE_OF [string[int]:sortoptions] ./pipelinefunctions/align_dedup.swift:novosort():33:79
    # Var: $file v:inputFile VALUE_OF [file:inputFile] ./pipelinefunctions/align_dedup.swift:novosort():33:79
    # Var: $file v:output VALUE_OF [file:output] ./pipelinefunctions/align_dedup.swift:novosort():33:79
    # Var: $boolean v:3 EXPR_TEMPORARY ./pipelinefunctions/align_dedup.swift:novosort():33:79
    set v:novosortdir [ turbine::retrieve_string ${u:novosortdir} CACHED 1 ]
    set v:tmpdir [ turbine::retrieve_string ${u:tmpdir} CACHED 1 ]
    set v:thr [ turbine::retrieve_integer ${u:thr} CACHED 1 ]
    set v:__filename:inputFile [ turbine::retrieve_string ${filename:inputFile} ]
    set v:__filename:output [ turbine::retrieve_string ${filename:output} CACHED 1 ]
    set v:sortoptions [ turbine::unpack_args ${u:sortoptions} 1 string ]
    set v:inputFile [ turbine::retrieve_file ${u:inputFile} CACHED 2 ]
    if { ${v:mapped_output} } {
        set tcltmp:init_rc 2
    } else {
        set tcltmp:init_rc 1
    }
    set v:output [ turbine::create_local_file_ref ${v:__filename:output} ${tcltmp:init_rc} ${v:mapped_output} ]
    turbine::c::log [ list exec: __v:novosortdir "--index" "--tmpdir" ${v:tmpdir} "--threads" ${v:thr} ${v:__filename:inputFile} "-o" ${v:__filename:output} {*}${v:sortoptions} [ dict create ] ]
    turbine::exec_external ${v:novosortdir} [ dict create ] "--index" "--tmpdir" ${v:tmpdir} "--threads" ${v:thr} ${v:__filename:inputFile} "-o" ${v:__filename:output} {*}${v:sortoptions}
    set v:3 [ expr { ! ${v:mapped_output} } ]
    turbine::store_file ${u:output} v:output ${v:3}
    turbine::decr_local_file_refcount v:output
    turbine::read_refcount_decr ${u:sortoptions} 1
}


proc f:find_files { u:output u:dir u:pattern v:loc_rank v:loc_strictness v:loc_accuracy } {
    turbine::c::log "function: find_files"
    # Var: $boolean v:mapped_output OPT_TEMPORARY
    turbine::read_refcount_incr ${u:dir} 1
    turbine::read_refcount_incr ${u:pattern} 1
    turbine::file_read_refcount_incr ${u:output} 1
    set v:mapped_output [ turbine::is_file_mapped ${u:output} ]
    set filename:output [ turbine::get_file_path ${u:output} ]
    if { ${v:mapped_output} } {
    } else {
        # Var: $string optf:output FILENAME_OF [file:output]
        set optf:output [ turbine::mktemp ]
        turbine::set_filename_val ${u:output} ${optf:output}
    }
    turbine::rule [ list ${filename:output} ${u:dir} ${u:pattern} ] "find_files-app-leaf1 {${filename:output}} ${v:mapped_output} {${u:dir}} {${u:output}} {${u:pattern}}" target ${v:loc_rank} strictness ${v:loc_strictness} accuracy ${v:loc_accuracy}
}


proc find_files-app-leaf1 { filename:output v:mapped_output u:dir u:output u:pattern } {
    # Var: $string v:dir VALUE_OF [string:dir] ./pipelinefunctions/miscellaneous.swift:find_files():17:43
    # Var: $string v:pattern VALUE_OF [string:pattern] ./pipelinefunctions/miscellaneous.swift:find_files():17:43
    # Var: $string v:__filename:output VALUE_OF [string:__filename:output] ./pipelinefunctions/miscellaneous.swift:find_files():17:43
    # Var: $file v:output VALUE_OF [file:output] ./pipelinefunctions/miscellaneous.swift:find_files():17:43
    # Var: $boolean v:3 EXPR_TEMPORARY ./pipelinefunctions/miscellaneous.swift:find_files():17:43
    set v:dir [ turbine::retrieve_string ${u:dir} CACHED 1 ]
    set v:pattern [ turbine::retrieve_string ${u:pattern} CACHED 1 ]
    set v:__filename:output [ turbine::retrieve_string ${filename:output} CACHED 1 ]
    if { ${v:mapped_output} } {
        set tcltmp:init_rc 2
    } else {
        set tcltmp:init_rc 1
    }
    set v:output [ turbine::create_local_file_ref ${v:__filename:output} ${tcltmp:init_rc} ${v:mapped_output} ]
    turbine::c::log [ list exec: "find" ${v:dir} "-name" ${v:pattern} [ dict create "stdout" ${v:__filename:output} ] ]
    turbine::exec_external "find" [ dict create "stdout" ${v:__filename:output} ] ${v:dir} "-name" ${v:pattern}
    set v:3 [ expr { ! ${v:mapped_output} } ]
    turbine::store_file ${u:output} v:output ${v:3}
    turbine::decr_local_file_refcount v:output
}

turbine::defaults
turbine::declare_custom_work_types COASTER
turbine::init $servers "Swift"
turbine::enable_read_refcount
adlb::declare_struct_type 16 s:location [ list "rank" integer "strictness" string "accuracy" string ]
turbine::check_constants "WORKER\[WORKER\]" ${turbine::WORK_TASK} 0 "CONTROL" ${turbine::WORK_TASK} 0 "ADLB_RANK_ANY" ${adlb::RANK_ANY} -100
adlb::add_debug_symbol 1 "__c:s__GATKCombi-2" ""
adlb::add_debug_symbol 2 "__c:s_sknownSite" ""
adlb::add_debug_symbol 3 "__c:s_sknown_g" ""
adlb::add_debug_symbol 4 "__c:s_svariant_g" ""
adlb::add_debug_symbol 5 "__t:7" "VCcallingPipeline:29:33"
adlb::add_debug_symbol 6 "__t:777" "VCcallingPipeline:235:16"
adlb::add_debug_symbol 7 "__t:778" "VCcallingPipeline:235:40"
adlb::add_debug_symbol 8 "__t:779" "VCcallingPipeline:235:23"
adlb::add_debug_symbol 9 "__t:781" "VCcallingPipeline:235:41"
adlb::add_debug_symbol 10 "__t:786" "VCcallingPipeline:236:27"
adlb::add_debug_symbol 11 "samples_processing_done" "VCcallingPipeline:31:0"
adlb::add_debug_symbol 12 "jointVCF" "VCcallingPipeline:235:80"
adlb::add_debug_symbol 13 "configFile" "VCcallingPipeline:24:0"
adlb::add_debug_symbol 14 "sampleInfoFile" "VCcallingPipeline:29:0"
adlb::add_debug_symbol 15 "vars" "VCcallingPipeline:27:0"
adlb::add_debug_symbol 16 "variantFiles" "VCcallingPipeline:236:42"
adlb::add_debug_symbol 17 "__t:11" "VCcallingPipeline:__entry():41:88"
adlb::add_debug_symbol 18 "__t:13" "VCcallingPipeline:__entry():41:106"
adlb::add_debug_symbol 19 "__t:15" "VCcallingPipeline:__entry():41:148"
adlb::add_debug_symbol 20 "__t:35" "VCcallingPipeline:__entry():54:14"
adlb::add_debug_symbol 21 "__t:80" "VCcallingPipeline:__entry():66:5"
adlb::add_debug_symbol 22 "__t:340" "VCcallingPipeline:__entry():121:54"
adlb::add_debug_symbol 23 "__t:345" "VCcallingPipeline:__entry():122:55"
adlb::add_debug_symbol 24 "__t:348" "VCcallingPipeline:__entry():124:31"
adlb::add_debug_symbol 25 "__t:453" "VCcallingPipeline:__entry():157:17"
adlb::add_debug_symbol 26 "__t:79" "VCcallingPipeline:__entry():66:32"
adlb::add_debug_symbol 27 "__t:368" "VCcallingPipeline:__entry():134:17"
adlb::add_debug_symbol 28 "indices" "VCcallingPipeline:__entry():157:9"
adlb::add_debug_symbol 29 "keyValuePair" "pipelinefunctions.miscellaneous:getConfigVariables():8:16"
adlb::add_debug_symbol 30 "varlist" "VCcallingPipeline:__entry():240:1"
adlb::add_debug_symbol 31 "__t:807" "VCcallingPipeline:__entry():240:48"
adlb::add_debug_symbol 32 "__t:813" "VCcallingPipeline:__entry():241:27"
adlb::add_debug_symbol 33 "__t:817" "VCcallingPipeline:__entry():241:51"
adlb::add_debug_symbol 34 "__t:821" "VCcallingPipeline:__entry():241:92"
adlb::add_debug_symbol 35 "__t:823" "VCcallingPipeline:__entry():241:113"
adlb::add_debug_symbol 36 "sampleInfo" "VCcallingPipeline:__entry():36:1"
adlb::add_debug_symbol 37 "read1" "VCcallingPipeline:__entry():38:1"
adlb::add_debug_symbol 38 "read2" "VCcallingPipeline:__entry():39:1"
adlb::add_debug_symbol 39 "rgheader" "VCcallingPipeline:__entry():41:1"
adlb::add_debug_symbol 40 "VarcallDir" "VCcallingPipeline:__entry():45:1"
adlb::add_debug_symbol 41 "RealignDir" "VCcallingPipeline:__entry():46:1"
adlb::add_debug_symbol 42 "__t:26" "VCcallingPipeline:__entry():50:22"
adlb::add_debug_symbol 43 "dedupsortedbam" "VCcallingPipeline:__entry():50:71"
adlb::add_debug_symbol 44 "__t:31" "VCcallingPipeline:__entry():51:15"
adlb::add_debug_symbol 45 "outbam" "VCcallingPipeline:__entry():51:46"
adlb::add_debug_symbol 46 "__t:33" "VCcallingPipeline:__entry():52:19"
adlb::add_debug_symbol 47 "rawvariant" "VCcallingPipeline:__entry():52:50"
adlb::add_debug_symbol 48 "qcfile" "VCcallingPipeline:__entry():54:69"
adlb::add_debug_symbol 49 "__t:42" "VCcallingPipeline:__entry():55:18"
adlb::add_debug_symbol 50 "mergedbam" "VCcallingPipeline:__entry():55:78"
adlb::add_debug_symbol 51 "mergedvariant" "VCcallingPipeline:__entry():56:82"
adlb::add_debug_symbol 52 "flagstats" "VCcallingPipeline:__entry():59:87"
adlb::add_debug_symbol 53 "__t:64" "VCcallingPipeline:__entry():62:18"
adlb::add_debug_symbol 54 "alignedsam" "VCcallingPipeline:__entry():62:63"
adlb::add_debug_symbol 55 "__t:70" "VCcallingPipeline:__entry():63:45"
adlb::add_debug_symbol 56 "chr_bamListfile" "VCcallingPipeline:__entry():63:57"
adlb::add_debug_symbol 57 "chr_vcfListfile" "VCcallingPipeline:__entry():64:57"
adlb::add_debug_symbol 58 "stat" "VCcallingPipeline:__entry():126:1"
adlb::add_debug_symbol 59 "__t:350" "VCcallingPipeline:__entry():127:14"
adlb::add_debug_symbol 60 "__t:353" "VCcallingPipeline:__entry():128:13"
adlb::add_debug_symbol 61 "__t:356" "VCcallingPipeline:__entry():129:12"
adlb::add_debug_symbol 62 "perc_mapped" "VCcallingPipeline:__entry():132:12"
adlb::add_debug_symbol 63 "__t:363" "VCcallingPipeline:__entry():132:38"
adlb::add_debug_symbol 64 "chromosomes_processing_done" "VCcallingPipeline:__entry():158:1"
adlb::add_debug_symbol 65 "chr_bamList" "VCcallingPipeline:__entry():217:1"
adlb::add_debug_symbol 66 "__t:730" "VCcallingPipeline:__entry():222:38"
adlb::add_debug_symbol 67 "chr_vcfList" "VCcallingPipeline:__entry():225:1"
adlb::add_debug_symbol 68 "__t:741" "VCcallingPipeline:__entry():225:52"
adlb::add_debug_symbol 69 "__t:85" "VCcallingPipeline:__entry():68:17"
adlb::add_debug_symbol 70 "dedupsam" "VCcallingPipeline:__entry():68:63"
adlb::add_debug_symbol 71 "__t:90" "VCcallingPipeline:__entry():69:17"
adlb::add_debug_symbol 72 "dedupbam" "VCcallingPipeline:__entry():69:66"
adlb::add_debug_symbol 73 "__t:95" "VCcallingPipeline:__entry():71:23"
adlb::add_debug_symbol 74 "__t:97" "VCcallingPipeline:__entry():71:53"
adlb::add_debug_symbol 75 "__t:99" "VCcallingPipeline:__entry():71:72"
adlb::add_debug_symbol 76 "__t:100" "VCcallingPipeline:__entry():71:72"
adlb::add_debug_symbol 77 "__t:102" "VCcallingPipeline:__entry():71:95"
adlb::add_debug_symbol 78 "__t:103" "VCcallingPipeline:__entry():71:106"
adlb::add_debug_symbol 79 "__t:126" "VCcallingPipeline:__entry():76:35"
adlb::add_debug_symbol 80 "__t:130" "VCcallingPipeline:__entry():77:28"
adlb::add_debug_symbol 81 "__t:131" "VCcallingPipeline:__entry():77:35"
adlb::add_debug_symbol 82 "__t:140" "VCcallingPipeline:__entry():77:129"
adlb::add_debug_symbol 83 "__t:105" "VCcallingPipeline:__entry():72:24"
adlb::add_debug_symbol 84 "__t:112" "VCcallingPipeline:__entry():73:89"
adlb::add_debug_symbol 85 "__t:119" "VCcallingPipeline:__entry():75:46"
adlb::add_debug_symbol 86 "__t:148" "VCcallingPipeline:__entry():79:55"
adlb::add_debug_symbol 87 "__t:159" "VCcallingPipeline:__entry():82:19"
adlb::add_debug_symbol 88 "alignedbam" "VCcallingPipeline:__entry():82:67"
adlb::add_debug_symbol 89 "alignedsortedbam" "VCcallingPipeline:__entry():85:75"
adlb::add_debug_symbol 90 "metricsfile" "VCcallingPipeline:__entry():86:70"
adlb::add_debug_symbol 91 "__t:180" "VCcallingPipeline:__entry():87:24"
adlb::add_debug_symbol 92 "__t:182" "VCcallingPipeline:__entry():87:54"
adlb::add_debug_symbol 93 "__t:184" "VCcallingPipeline:__entry():87:73"
adlb::add_debug_symbol 94 "__t:185" "VCcallingPipeline:__entry():87:73"
adlb::add_debug_symbol 95 "__t:187" "VCcallingPipeline:__entry():87:96"
adlb::add_debug_symbol 96 "__t:188" "VCcallingPipeline:__entry():87:107"
adlb::add_debug_symbol 97 "__t:209" "VCcallingPipeline:__entry():91:38"
adlb::add_debug_symbol 98 "__t:213" "VCcallingPipeline:__entry():92:31"
adlb::add_debug_symbol 99 "__t:214" "VCcallingPipeline:__entry():92:38"
adlb::add_debug_symbol 100 "__t:223" "VCcallingPipeline:__entry():92:120"
adlb::add_debug_symbol 101 "__t:242" "VCcallingPipeline:__entry():96:45"
adlb::add_debug_symbol 102 "__t:195" "VCcallingPipeline:__entry():88:94"
adlb::add_debug_symbol 103 "__t:202" "VCcallingPipeline:__entry():90:49"
adlb::add_debug_symbol 104 "__t:224" "VCcallingPipeline:__entry():93:39"
adlb::add_debug_symbol 105 "__t:226" "VCcallingPipeline:__entry():93:56"
adlb::add_debug_symbol 106 "__t:235" "VCcallingPipeline:__entry():95:56"
adlb::add_debug_symbol 107 "__t:249" "VCcallingPipeline:__entry():99:7"
adlb::add_debug_symbol 108 "__t:305" "VCcallingPipeline:__entry():110:30"
adlb::add_debug_symbol 109 "__t:306" "VCcallingPipeline:__entry():110:37"
adlb::add_debug_symbol 110 "__t:312" "VCcallingPipeline:__entry():110:102"
adlb::add_debug_symbol 111 "__t:313" "VCcallingPipeline:__entry():110:113"
adlb::add_debug_symbol 112 "__t:315" "VCcallingPipeline:__entry():110:133"
adlb::add_debug_symbol 113 "__t:322" "VCcallingPipeline:__entry():112:57"
adlb::add_debug_symbol 114 "__t:252" "VCcallingPipeline:__entry():100:25"
adlb::add_debug_symbol 115 "__t:254" "VCcallingPipeline:__entry():100:55"
adlb::add_debug_symbol 116 "__t:256" "VCcallingPipeline:__entry():100:74"
adlb::add_debug_symbol 117 "__t:257" "VCcallingPipeline:__entry():100:74"
adlb::add_debug_symbol 118 "__t:259" "VCcallingPipeline:__entry():100:97"
adlb::add_debug_symbol 119 "__t:260" "VCcallingPipeline:__entry():100:108"
adlb::add_debug_symbol 120 "__t:267" "VCcallingPipeline:__entry():101:94"
adlb::add_debug_symbol 121 "__t:270" "VCcallingPipeline:__entry():103:34"
adlb::add_debug_symbol 122 "__t:274" "VCcallingPipeline:__entry():103:87"
adlb::add_debug_symbol 123 "__t:279" "VCcallingPipeline:__entry():103:138"
adlb::add_debug_symbol 124 "__t:280" "VCcallingPipeline:__entry():103:149"
adlb::add_debug_symbol 125 "__t:287" "VCcallingPipeline:__entry():104:95"
adlb::add_debug_symbol 126 "__t:294" "VCcallingPipeline:__entry():107:49"
adlb::add_debug_symbol 127 "__t:691" "VCcallingPipeline:__entry():211:44"
adlb::add_debug_symbol 128 "__t:693" "VCcallingPipeline:__entry():212:44"
adlb::add_debug_symbol 129 "__t:708" "VCcallingPipeline:__entry():218:27"
adlb::add_debug_symbol 130 "__t:715" "VCcallingPipeline:__entry():218:105"
adlb::add_debug_symbol 131 "__t:723" "VCcallingPipeline:__entry():221:49"
adlb::add_debug_symbol 132 "__t:397" "VCcallingPipeline:__entry():138:205"
adlb::add_debug_symbol 133 "__t:424" "VCcallingPipeline:__entry():141:209"
adlb::add_debug_symbol 134 "__t:747" "VCcallingPipeline:__entry():226:28"
adlb::add_debug_symbol 135 "__t:751" "VCcallingPipeline:__entry():226:52"
adlb::add_debug_symbol 136 "__t:755" "VCcallingPipeline:__entry():226:93"
adlb::add_debug_symbol 137 "__t:757" "VCcallingPipeline:__entry():226:114"
adlb::add_debug_symbol 138 "__t:759" "VCcallingPipeline:__entry():226:153"
adlb::add_debug_symbol 139 "__t:762" "VCcallingPipeline:__entry():226:154"
adlb::add_debug_symbol 140 "__t:767" "VCcallingPipeline:__entry():228:32"
adlb::add_debug_symbol 141 "__t:768" "VCcallingPipeline:__entry():228:37"
adlb::add_debug_symbol 142 "__t:505" "VCcallingPipeline:__entry():177:85"
adlb::add_debug_symbol 143 "__t:529" "VCcallingPipeline:__entry():183:35"
adlb::add_debug_symbol 144 "__t:531" "VCcallingPipeline:__entry():183:56"
adlb::add_debug_symbol 145 "__t:565" "VCcallingPipeline:__entry():192:39"
adlb::add_debug_symbol 146 "__t:569" "VCcallingPipeline:__entry():192:63"
adlb::add_debug_symbol 147 "__t:575" "VCcallingPipeline:__entry():192:125"
adlb::add_debug_symbol 148 "__t:625" "VCcallingPipeline:__entry():197:223"
adlb::add_debug_symbol 149 "__t:504" "VCcallingPipeline:__entry():177:74"
adlb::add_debug_symbol 150 "__t:572" "VCcallingPipeline:__entry():192:124"
adlb::add_debug_symbol 151 "__t:622" "VCcallingPipeline:__entry():197:222"
adlb::add_debug_symbol 152 "__t:527" "VCcallingPipeline:__entry():183:28"
adlb::add_debug_symbol 153 "__t:567" "VCcallingPipeline:__entry():192:56"
adlb::add_debug_symbol 154 "chrdedupsortedbam" "VCcallingPipeline:__entry():164:68"
adlb::add_debug_symbol 155 "realignedbam" "VCcallingPipeline:__entry():165:63"
adlb::add_debug_symbol 156 "recalibratedbam" "VCcallingPipeline:__entry():166:66"
adlb::add_debug_symbol 157 "intervals" "VCcallingPipeline:__entry():167:61"
adlb::add_debug_symbol 158 "recalreport" "VCcallingPipeline:__entry():168:63"
adlb::add_debug_symbol 159 "gvcfvariant" "VCcallingPipeline:__entry():169:62"
adlb::add_debug_symbol 160 "recalfiles" "VCcallingPipeline:__entry():171:65"
adlb::add_debug_symbol 161 "realfiles" "VCcallingPipeline:__entry():172:64"
adlb::add_debug_symbol 162 "ploidy" "VCcallingPipeline:__entry():175:3"
adlb::add_debug_symbol 163 "__t:507" "VCcallingPipeline:__entry():177:105"
adlb::add_debug_symbol 164 "__t:534" "VCcallingPipeline:__entry():183:80"
adlb::add_debug_symbol 165 "recalparmsindels" "VCcallingPipeline:__entry():184:3"
adlb::add_debug_symbol 166 "__t:540" "VCcallingPipeline:__entry():184:59"
adlb::add_debug_symbol 167 "realparms" "VCcallingPipeline:__entry():187:3"
adlb::add_debug_symbol 168 "__t:559" "VCcallingPipeline:__entry():187:52"
adlb::add_debug_symbol 169 "__t:597" "VCcallingPipeline:__entry():195:54"
adlb::add_debug_symbol 170 "__t:647" "VCcallingPipeline:__entry():200:57"
adlb::add_debug_symbol 171 "__t:688" "VCcallingPipeline:__entry():204:30"
adlb::add_debug_symbol 172 "__t:689" "VCcallingPipeline:__entry():204:35"
adlb::add_debug_symbol 173 "__t:514" "VCcallingPipeline:__entry():179:59"
turbine::start swift:main swift:constants
turbine::finalize
