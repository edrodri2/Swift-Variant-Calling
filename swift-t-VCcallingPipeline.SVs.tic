
# Generated by stc version 0.6.0
# date                    : 2016/11/24 13:08:32
# Turbine version         : 0.6.0
# Input filename          : /home/azza/swift-project/Swift-Variant-Calling/VCcallingPipeline.swift
# Output filename         : /home/azza/swift-project/Swift-Variant-Calling/./swift-t-VCcallingPipeline.SVs.tic
# STC home                : /usr/local/src/swift-t-0.9.1/stc
# Turbine home            : /usr/local/src/swift-t-0.9.1/turbine
# Compiler settings:
# stc.auto-declare              : true
# stc.c_preprocess              : true
# stc.checkpointing             : true
# stc.compiler-debug            : true
# stc.debugging                 : COMMENTS
# stc.ic.output-file            : 
# stc.input_filename            : VCcallingPipeline.swift
# stc.log.file                  : 
# stc.log.trace                 : false
# stc.must_pass_wait_vars       : true
# stc.opt.algebra               : true
# stc.opt.array-build           : true
# stc.opt.batch-refcounts       : true
# stc.opt.cancel-refcounts      : true
# stc.opt.constant-fold         : true
# stc.opt.controlflow-fusion    : true
# stc.opt.dataflow-op-inline    : true
# stc.opt.dead-code-elim        : true
# stc.opt.demote-globals        : true
# stc.opt.disable-asserts       : false
# stc.opt.expand-loop-threshold-insts: 256
# stc.opt.expand-loop-threshold-iters: 16
# stc.opt.expand-loops          : false
# stc.opt.finalized-var         : true
# stc.opt.flatten-nested        : true
# stc.opt.full-function-inline  : false
# stc.opt.full-unroll           : false
# stc.opt.function-always-inline-threshold: 5
# stc.opt.function-inline       : true
# stc.opt.function-inline-threshold: 50
# stc.opt.function-signature    : true
# stc.opt.hoist                 : true
# stc.opt.hoist-refcounts       : true
# stc.opt.loop-simplify         : true
# stc.opt.max-iterations        : 10
# stc.opt.merge-refcounts       : true
# stc.opt.piggyback-refcounts   : true
# stc.opt.pipeline              : false
# stc.opt.propagate-aliases     : true
# stc.opt.reorder-insts         : false
# stc.opt.shared-constants      : true
# stc.opt.unroll-loop-threshold-insts: 192
# stc.opt.unroll-loop-threshold-iters: 8
# stc.opt.unroll-loops          : true
# stc.opt.value-number          : true
# stc.opt.wait-coalesce         : true
# stc.output_filename           : ./swift-t-VCcallingPipeline.SVs.tic
# stc.preproc.force-cpp         : false
# stc.preproc.force-gcc         : false
# stc.preprocess_only           : false
# stc.profile                   : false
# stc.refcounting               : true
# stc.rpath                     : 
# stc.stc_home                  : /usr/local/src/swift-t-0.9.1/stc
# stc.turbine.version           : 0.6.0
# stc.turbine_home              : /usr/local/src/swift-t-0.9.1/turbine
# stc.version                   : 0.6.0

# Metadata:

package require turbine 0.6.0
namespace import turbine::*


proc swift:constants {  } {
    turbine::c::log "function:swift:constants"
    global c:s__GATKCombi-2
    turbine::allocate_custom c:s__GATKCombi-2 string 1 1 1 1
    turbine::store_string ${c:s__GATKCombi-2} "*.GATKCombineGVCF.raw.vcf"
    global c:s_sknownSite
    turbine::allocate_custom c:s_sknownSite string 1 1 2 1
    turbine::store_string ${c:s_sknownSite} "s/^/--knownSites /g"
    global c:s_sknown_g
    turbine::allocate_custom c:s_sknown_g string 1 1 3 1
    turbine::store_string ${c:s_sknown_g} "s/^/-known /g"
    global c:s_svariant_g
    turbine::allocate_custom c:s_svariant_g string 1 1 4 1
    turbine::store_string ${c:s_svariant_g} "s/^/--variant /g"
    global c:s_u
    turbine::allocate_custom c:s_u string 1 1 5 1
    turbine::store_string ${c:s_u} "-u"
}


proc swift:main {  } {
    turbine::c::log "function: __entry"
    # Var: string t:7 EXPR_TEMPORARY VCcallingPipeline.swift:27:33
    # Var: string t:631 EXPR_TEMPORARY VCcallingPipeline.swift:218:16
    # Var: string t:632 EXPR_TEMPORARY VCcallingPipeline.swift:218:40
    # Var: string t:633 EXPR_TEMPORARY VCcallingPipeline.swift:218:23
    # Var: string t:635 EXPR_TEMPORARY VCcallingPipeline.swift:218:41
    # Var: string t:640 EXPR_TEMPORARY VCcallingPipeline.swift:219:27
    # Var: $string v:configFilename VALUE_OF [string:configFilename]
    # Var: $void v:t:629 VALUE_OF [void:__t:629]
    # Var: int u:samples_processing_done VCcallingPipeline.swift:29:0
    # Var: file u:jointVCF VCcallingPipeline.swift:218:80
    # Var: file u:configFile VCcallingPipeline.swift:22:0
    # Var: file u:sampleInfoFile VCcallingPipeline.swift:27:0
    # Var: string[string] u:vars VCcallingPipeline.swift:25:0
    # Var: file u:variantFiles VCcallingPipeline.swift:219:42
    # Var: string t:11 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():39:88
    # Var: string t:13 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():39:106
    # Var: string t:15 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():39:148
    # Var: string t:35 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():52:14
    # Var: string t:80 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():64:5
    # Var: string t:240 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():111:54
    # Var: string t:245 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():112:55
    # Var: string t:248 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():114:31
    # Var: string t:369 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():146:17
    # Var: $file v:configFile VALUE_OF [file:configFile]
    # Var: $file v:configFile:1 VALUE_OF [file:configFile]
    # Var: $string$[int] v:configFileData VALUE_OF [string[int]:configFileData]
    # Var: boolean t:79 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():64:32
    # Var: float t:268 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():124:17
    # Var: string[int] u:indices VCcallingPipeline.swift:__entry():146:9
    lassign [ adlb::multicreate [ list string 1 1 6 ] [ list string 1 1 7 ] [ list string 2 1 8 ] [ list string 2 1 9 ] [ list string 1 1 10 ] [ list string 2 1 11 ] [ list integer 1 1 12 ] [ list container string string 17 1 16 ] [ list string 1 1 18 ] [ list string 1 1 19 ] [ list string 1 1 20 ] [ list string 1 1 21 ] [ list string 2 1 22 ] [ list string 2 1 23 ] [ list string 1 1 24 ] [ list string 1 1 25 ] [ list string 1 1 26 ] [ list integer 1 1 27 ] [ list float 1 1 28 ] [ list container integer string 1 1 29 ] ] t:7 t:631 t:632 t:633 t:635 t:640 u:samples_processing_done u:vars t:11 t:13 t:15 t:35 t:80 t:240 t:245 t:248 t:369 t:79 t:268 u:indices
    turbine::c::log "allocated t:7=<${t:7}> t:631=<${t:631}> t:632=<${t:632}> t:633=<${t:633}> t:635=<${t:635}>"
    turbine::c::log "allocated t:640=<${t:640}> u:samples_processing_done=<${u:samples_processing_done}> u:vars=<${u:vars}> t:11=<${t:11}> t:13=<${t:13}>"
    turbine::c::log "allocated t:15=<${t:15}> t:35=<${t:35}> t:80=<${t:80}> t:240=<${t:240}> t:245=<${t:245}>"
    turbine::c::log "allocated t:248=<${t:248}> t:369=<${t:369}> t:79=<${t:79}> t:268=<${t:268}> u:indices=<${u:indices}>"
    lassign [ turbine::make_file_tds [ adlb::multicreate [ list file 0 1 13 ] [ list file 1 1 14 ] [ list file 1 1 15 ] [ list file 1 1 17 ] ] [ list 1 0 0 1 ] ] u:jointVCF u:configFile u:sampleInfoFile u:variantFiles
    turbine::argv_accept_impl [ list "runfile" ]
    set v:configFilename [ turbine::argv_get_impl "runfile" ]
    set tcltmp:init_rc 1
    set v:configFile [ turbine::create_local_file_ref "" ${tcltmp:init_rc} 0 ]
    turbine::input_file_local v:configFile ${v:configFilename}
    turbine::store_file ${u:configFile} v:configFile 1
    set v:configFile:1 [ turbine::retrieve_file ${u:configFile} CACHED 1 ]
    set v:configFileData [ turbine::file_lines_impl ${v:configFile:1} ]
    turbine::container_reference ${u:vars} "SAMPLEINFORMATION" ${t:7} string
    turbine::trace_impl "####    Now launching joint_genotyping script for all SAMPLEs: each 200 together        ##########"
    turbine::container_reference ${u:vars} "OUTPUTDIR" ${t:633} string
    turbine::container_reference ${u:vars} "DELIVERYFOLDER" ${t:635} string
    turbine::container_reference ${u:vars} "TMPDIR" ${t:640} string
    turbine::container_reference ${u:vars} "SAMPLELB" ${t:11} string
    turbine::container_reference ${u:vars} "SAMPLEPL" ${t:13} string
    turbine::container_reference ${u:vars} "SAMPLECN" ${t:15} string
    turbine::container_reference ${u:vars} "MARKDUPLICATESTOOL" ${t:80} string
    turbine::container_reference ${u:vars} "DUP_CUTOFF" ${t:240} string
    turbine::container_reference ${u:vars} "MAP_CUTOFF" ${t:245} string
    turbine::container_reference ${u:vars} "SAMTOOLSDIR" ${t:248} string
    turbine::container_reference ${u:vars} "CHRNAMES" ${t:369} string
    dict for {tcltmp:ignore v:line} ${v:configFileData} {
        # Var: string[int] u:keyValuePair RENAMED [string[int]:keyValuePair] ./pipelinefunctions/miscellaneous.swift:getConfigVariables():8:16
        # Var: $string$[int] v:keyValuePair VALUE_OF [string[int]:keyValuePair]
        # Var: $string v:alias:name VALUE_OF [string:__alias:name]
        # Var: $string v:alias:value VALUE_OF [string:__alias:value]
        lassign [ adlb::multicreate [ list container integer string 1 2 30 ] ] u:keyValuePair
        turbine::c::log "allocated u:keyValuePair=<${u:keyValuePair}>"
        set v:keyValuePair [ turbine::split_impl ${v:line} "=" ]
        turbine::build_rec ${u:keyValuePair} ${v:keyValuePair} [ list container integer string ] 0 1
        set a:name [ adlb::subscript_container ${u:keyValuePair} 0 ]
        set v:alias:name [ turbine::retrieve_string ${a:name} ]
        set a:value [ adlb::subscript_container ${u:keyValuePair} 1 ]
        set v:alias:value [ turbine::retrieve_string ${a:value} CACHED 1 ]
        turbine::container_insert ${u:vars} ${v:alias:name} ${v:alias:value} string 0
        adlb::write_refcount_decr ${u:keyValuePair} 1
    }
    turbine::rule [ list ${u:samples_processing_done} ] "__entry-explicit-wait4 ${t:631} ${t:632} {${u:jointVCF}} ${u:samples_processing_done} {${u:variantFiles}} ${u:vars}"
    turbine::rule [ list ${t:7} ] "__entry-call_foreign-input_file ${t:11} ${t:13} ${t:15} ${t:240} ${t:245} ${t:248} ${t:268} ${t:35} ${t:632} ${t:633} ${t:640} ${t:7} ${t:79} ${t:80} ${u:indices} {${u:sampleInfoFile}} ${u:samples_processing_done} ${u:vars}"
    turbine::rule [ list ${t:640} ] "__entry-async_op-strcat-11 ${t:640} {${u:variantFiles}}"
    turbine::rule [ list ${t:80} ] "__entry-async_op-eq_string-2 ${t:79} ${t:80}"
    turbine::rule [ list ${t:240} ] "__entry-async_op-parse_float-4 ${t:240} ${t:268}"
    turbine::rule [ list ${t:369} ] "__entry-call_foreign-split-3 ${t:369} ${u:indices}"
    turbine::rule [ list ${t:633} ${t:635} ] "__entry-optmerged-8 ${t:35} ${t:631} ${t:632} ${t:633} ${t:635} {${u:jointVCF}}"
    turbine::decr_local_file_refcount v:configFile
    adlb::write_refcount_decr ${u:vars} 1
}


proc __entry-explicit-wait4 { t:631 t:632 u:jointVCF u:samples_processing_done u:variantFiles u:vars } {
    # Var: string c:s__GATKCombi-2 OPT_TEMPORARY
    global c:s__GATKCombi-2
    # Var: string[int] u:varlist VCcallingPipeline.swift:__entry():223:1
    lassign [ adlb::multicreate [ list container integer string 1 1 31 ] ] u:varlist
    turbine::c::log "allocated u:varlist=<${u:varlist}>"
    f:find_files ${u:variantFiles} ${t:632} ${c:s__GATKCombi-2} -100 "HARD" "RANK"
    turbine::rule [ list [ turbine::get_file_td ${u:variantFiles} ] ] "__entry-chain15 ${t:631} {${u:jointVCF}} {${u:variantFiles}} ${u:varlist} ${u:vars}"
    turbine::read_refcount_decr ${t:632} 1
    turbine::read_refcount_decr ${u:samples_processing_done} 1
}


proc __entry-chain15 { t:631 u:jointVCF u:variantFiles u:varlist u:vars } {
    # Var: string c:s_svariant_g OPT_TEMPORARY
    global c:s_svariant_g
    # Var: file t:661 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():223:48
    lassign [ turbine::make_file_tds [ adlb::multicreate [ list file 1 1 32 ] ] [ list 0 ] ] t:661
    f:sed ${t:661} ${u:variantFiles} ${c:s_svariant_g} -100 "HARD" "RANK"
    turbine::rule [ list [ turbine::get_file_td ${t:661} ] ] "__entry-call_foreign-read ${t:631} {${t:661}} {${u:jointVCF}} ${u:varlist} ${u:vars}"
    turbine::file_read_refcount_decr ${u:variantFiles} 1
}


proc __entry-call_foreign-read { t:631 t:661 u:jointVCF u:varlist u:vars } {
    # Var: $file v:t:661 VALUE_OF [file:__t:661]
    # Var: $string v:t:660 VALUE_OF [string:__t:660]
    # Var: $int v:n:4 RENAMED [$int:__v:n]
    # Var: $string v:t:659 VALUE_OF [string:__t:659]
    # Var: $string v:o:4 RENAMED [$string:__v:o]
    # Var: $string$[int] v:varlist VALUE_OF [string[int]:varlist]
    # Var: string t:667 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():224:27
    # Var: string t:671 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():224:51
    # Var: string t:675 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():224:92
    # Var: string t:677 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():224:113
    # Var: $string$[int] v:variants:1 RENAMED [$string$[int]:__v:variants] ./pipelinefunctions/joint_vcf.swift:GenotypeGVCFs():3:91
    lassign [ adlb::multicreate [ list string 1 1 33 ] [ list string 1 1 34 ] [ list string 1 1 35 ] [ list string 1 1 36 ] ] t:667 t:671 t:675 t:677
    turbine::c::log "allocated t:667=<${t:667}> t:671=<${t:671}> t:675=<${t:675}> t:677=<${t:677}>"
    set v:t:661 [ turbine::retrieve_file ${t:661} CACHED 1 ]
    set v:t:660 [ turbine::file_read_local ${v:t:661} ]
    set v:n:4 [ string length ${v:t:660} ]
    set v:t:659 [ turbine::replace_all_impl ${v:t:660} "\n" " " 0 ${v:n:4} ]
    set v:o:4 [ string trim ${v:t:659} ]
    set v:varlist [ turbine::split_impl ${v:o:4} " " ]
    turbine::build_rec ${u:varlist} ${v:varlist} [ list container integer string ] 0 1
    turbine::container_reference ${u:vars} "JAVADIR" ${t:667} string
    turbine::container_reference ${u:vars} "GATKDIR" ${t:671} string
    turbine::container_reference ${u:vars} "REFGENOMEDIR" ${t:675} string
    turbine::container_reference ${u:vars} "REFGENOME" ${t:677} string
    set v:variants:1 [ turbine::unpack_args ${u:varlist} 1 string ]
    turbine::rule [ list ${t:631} ${t:667} ${t:671} ${t:675} ${t:677} ] "__entry-async_op-dircat ${t:631} ${t:667} ${t:671} ${t:675} ${t:677} {${v:variants:1}} {${u:jointVCF}}"
    turbine::read_refcount_decr ${u:varlist} 1
}


proc __entry-async_op-dircat { t:631 t:667 t:671 t:675 t:677 v:variants:1 u:jointVCF } {
    # Var: $string v:t:675 VALUE_OF [string:__t:675]
    # Var: $string v:t:677 VALUE_OF [string:__t:677]
    # Var: $string v:t:674 VALUE_OF [string:__t:674]
    # Var: $string v:t:671 VALUE_OF [string:__t:671]
    # Var: $string v:t:670 VALUE_OF [string:__t:670]
    # Var: $string v:t:669 VALUE_OF [string:__t:669]
    # Var: $string v:javadir:7 RENAMED [$string:__v:javadir] ./pipelinefunctions/joint_vcf.swift:GenotypeGVCFs():3:91
    # Var: $string v:__filename:outputfile:7 RENAMED [$string:__v:__filename:outputfile] ./pipelinefunctions/joint_vcf.swift:GenotypeGVCFs():3:91
    # Var: $file v:outputfile:7 RENAMED [$file:__v:outputfile] ./pipelinefunctions/joint_vcf.swift:GenotypeGVCFs():3:91
    set v:t:675 [ turbine::retrieve_string ${t:675} CACHED 1 ]
    set v:t:677 [ turbine::retrieve_string ${t:677} CACHED 1 ]
    set v:t:674 "${v:t:675}/${v:t:677}"
    set v:t:671 [ turbine::retrieve_string ${t:671} CACHED 1 ]
    set v:t:670 "${v:t:671}/GenomeAnalysisTK.jar"
    set v:t:669 "${v:t:670}"
    set v:javadir:7 [ turbine::retrieve_string ${t:667} CACHED 1 ]
    set v:__filename:outputfile:7 [ turbine::retrieve_string ${t:631} CACHED 1 ]
    set tcltmp:init_rc 2
    set v:outputfile:7 [ turbine::create_local_file_ref ${v:__filename:outputfile:7} ${tcltmp:init_rc} 1 ]
    turbine::c::log [ list exec: __v:javadir:7 "-Xmx8g" "-jar" ${v:t:669} "-T" "GenotypeGVCFs" "-R" ${v:t:674} {*}${v:variants:1} "-o" ${v:__filename:outputfile:7} [ dict create ] ]
    turbine::exec_external ${v:javadir:7} [ dict create ] "-Xmx8g" "-jar" ${v:t:669} "-T" "GenotypeGVCFs" "-R" ${v:t:674} {*}${v:variants:1} "-o" ${v:__filename:outputfile:7}
    turbine::store_file ${u:jointVCF} v:outputfile:7 0
    turbine::decr_local_file_refcount v:outputfile:7
}


proc __entry-call_foreign-input_file { t:11 t:13 t:15 t:240 t:245 t:248 t:268 t:35 t:632 t:633 t:640 t:7 t:79 t:80 u:indices u:sampleInfoFile u:samples_processing_done u:vars } {
    # Var: $string v:t:7 VALUE_OF [string:__t:7]
    # Var: $file v:sampleInfoFile VALUE_OF [file:sampleInfoFile]
    # Var: $file v:sampleInfoFile:1 VALUE_OF [file:sampleInfoFile]
    # Var: $string$[int] v:sampleLines:1 VALUE_OF [string[int]:sampleLines]
    set v:t:7 [ turbine::retrieve_string ${t:7} CACHED 1 ]
    set tcltmp:init_rc 1
    set v:sampleInfoFile [ turbine::create_local_file_ref "" ${tcltmp:init_rc} 0 ]
    turbine::input_file_local v:sampleInfoFile ${v:t:7}
    turbine::store_file ${u:sampleInfoFile} v:sampleInfoFile 1
    set v:sampleInfoFile:1 [ turbine::retrieve_file ${u:sampleInfoFile} CACHED 1 ]
    set v:sampleLines:1 [ turbine::file_lines_impl ${v:sampleInfoFile:1} ]
    turbine::rule [ list ] "__entry-foreach-wait1 ${t:11} ${t:13} ${t:15} ${t:240} ${t:245} ${t:248} ${t:268} ${t:35} ${t:632} ${t:633} ${t:640} ${t:79} ${t:80} {${v:sampleLines:1}} ${u:indices} ${u:samples_processing_done} ${u:vars}"
    turbine::decr_local_file_refcount v:sampleInfoFile
}


proc __entry-foreach-wait1 { t:11 t:13 t:15 t:240 t:245 t:248 t:268 t:35 t:632 t:633 t:640 t:79 t:80 v:sampleLines:1 u:indices u:samples_processing_done u:vars } {
    set tcltmp:iters [ dict size ${v:sampleLines:1} ]
    turbine::read_refcount_incr ${t:240} [ expr { 3 * ${tcltmp:iters} } ]
    turbine::read_refcount_incr ${t:35} [ expr { ${tcltmp:iters} } ]
    turbine::read_refcount_incr ${t:13} [ expr { ${tcltmp:iters} } ]
    turbine::read_refcount_incr ${t:79} [ expr { ${tcltmp:iters} } ]
    turbine::read_refcount_incr ${t:268} [ expr { ${tcltmp:iters} } ]
    turbine::read_refcount_incr ${t:632} [ expr { 2 * ${tcltmp:iters} } ]
    turbine::read_refcount_incr ${t:15} [ expr { ${tcltmp:iters} } ]
    turbine::read_refcount_incr ${t:640} [ expr { 5 * ${tcltmp:iters} } ]
    turbine::read_refcount_incr ${t:245} [ expr { 3 * ${tcltmp:iters} } ]
    turbine::read_refcount_incr ${t:11} [ expr { ${tcltmp:iters} } ]
    turbine::read_refcount_incr ${t:80} [ expr { ${tcltmp:iters} } ]
    turbine::read_refcount_incr ${u:indices} [ expr { ${tcltmp:iters} } ]
    turbine::read_refcount_incr ${t:248} [ expr { 4 * ${tcltmp:iters} } ]
    turbine::read_refcount_incr ${t:633} [ expr { 3 * ${tcltmp:iters} } ]
    turbine::read_refcount_incr ${u:vars} [ expr { 21 * ${tcltmp:iters} } ]
    dict for {tcltmp:ignore v:sample} ${v:sampleLines:1} {
        # Var: string c:s_svariant_g OPT_TEMPORARY
        global c:s_svariant_g
        # Var: string[int] u:sampleInfo VCcallingPipeline.swift:__entry():34:1
        # Var: string u:read1 VCcallingPipeline.swift:__entry():36:1
        # Var: string u:read2 VCcallingPipeline.swift:__entry():37:1
        # Var: string u:rgheader VCcallingPipeline.swift:__entry():39:1
        # Var: string u:VarcallDir VCcallingPipeline.swift:__entry():43:1
        # Var: string u:RealignDir VCcallingPipeline.swift:__entry():44:1
        # Var: string t:26 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():48:22
        # Var: file u:dedupsortedbam VCcallingPipeline.swift:__entry():48:71
        # Var: string t:31 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():49:15
        # Var: file u:outbam VCcallingPipeline.swift:__entry():49:46
        # Var: string t:33 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():50:19
        # Var: file u:rawvariant VCcallingPipeline.swift:__entry():50:50
        # Var: file u:qcfile VCcallingPipeline.swift:__entry():52:69
        # Var: file u:mergedbam VCcallingPipeline.swift:__entry():53:78
        # Var: file u:mergedvariant VCcallingPipeline.swift:__entry():54:82
        # Var: file u:flagstats VCcallingPipeline.swift:__entry():57:87
        # Var: string t:64 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():60:18
        # Var: file u:alignedsam VCcallingPipeline.swift:__entry():60:63
        # Var: string t:70 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():61:45
        # Var: file u:chr_bamListfile VCcallingPipeline.swift:__entry():61:57
        # Var: file u:chr_vcfListfile VCcallingPipeline.swift:__entry():62:57
        # Var: string[int] u:stat VCcallingPipeline.swift:__entry():116:1
        # Var: string[int] t:250 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():117:14
        # Var: string[int] t:253 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():118:13
        # Var: string[int] t:256 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():119:12
        # Var: float u:perc_mapped VCcallingPipeline.swift:__entry():122:12
        # Var: float t:263 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():122:38
        # Var: int u:chromosomes_processing_done VCcallingPipeline.swift:__entry():147:1
        # Var: string[int] u:chr_bamList VCcallingPipeline.swift:__entry():201:1
        # Var: string[int] u:chr_vcfList VCcallingPipeline.swift:__entry():208:1
        # Var: file t:595 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():208:52
        # Var: $string$[int] v:sampleInfo VALUE_OF [string[int]:sampleInfo]
        # Var: $string v:alias:sampleName VALUE_OF [string:__alias:sampleName]
        # Var: $string v:alias:read1 VALUE_OF [string:__alias:read1]
        # Var: $string v:alias:read2 VALUE_OF [string:__alias:read2]
        # Var: $void v:t:233 VALUE_OF [void:__t:233]
        # Var: $void v:t:235 VALUE_OF [void:__t:235]
        # Var: $void v:t:367 VALUE_OF [void:__t:367]
        # Var: $string v:t:566 VALUE_OF [string:__t:566]
        # Var: $string v:t:565 VALUE_OF [string:__t:565]
        # Var: $void v:t:564 VALUE_OF [void:__t:564]
        # Var: $string v:t:589 VALUE_OF [string:__t:589]
        # Var: $string v:t:588 VALUE_OF [string:__t:588]
        # Var: $void v:t:587 VALUE_OF [void:__t:587]
        lassign [ adlb::multicreate [ list container integer string 1 2 37 ] [ list string 1 1 38 ] [ list string 1 1 39 ] [ list string 1 1 40 ] [ list string 1 1 41 ] [ list string 1 1 42 ] [ list string 1 1 43 ] [ list string 1 1 45 ] [ list string 1 1 47 ] [ list string 2 1 53 ] [ list string 1 1 55 ] [ list container integer string 3 1 58 ] [ list container integer string 1 1 59 ] [ list container integer string 1 1 60 ] [ list container integer string 1 1 61 ] [ list float 2 1 62 ] [ list float 1 1 63 ] [ list integer 1 1 64 ] [ list container integer string 1 1 65 ] [ list container integer string 1 1 66 ] ] u:sampleInfo u:read1 u:read2 u:rgheader u:VarcallDir u:RealignDir t:26 t:31 t:33 t:64 t:70 u:stat t:250 t:253 t:256 u:perc_mapped t:263 u:chromosomes_processing_done u:chr_bamList u:chr_vcfList
        turbine::c::log "allocated u:sampleInfo=<${u:sampleInfo}> u:read1=<${u:read1}> u:read2=<${u:read2}> u:rgheader=<${u:rgheader}> u:VarcallDir=<${u:VarcallDir}>"
        turbine::c::log "allocated u:RealignDir=<${u:RealignDir}> t:26=<${t:26}> t:31=<${t:31}> t:33=<${t:33}> t:64=<${t:64}>"
        turbine::c::log "allocated t:70=<${t:70}> u:stat=<${u:stat}> t:250=<${t:250}> t:253=<${t:253}> t:256=<${t:256}>"
        turbine::c::log "allocated u:perc_mapped=<${u:perc_mapped}> t:263=<${t:263}> u:chromosomes_processing_done=<${u:chromosomes_processing_done}> u:chr_bamList=<${u:chr_bamList}> u:chr_vcfList=<${u:chr_vcfList}>"
        lassign [ turbine::make_file_tds [ adlb::multicreate [ list file 4 1 44 ] [ list file 1 1 46 ] [ list file 1 1 48 ] [ list file 1 1 49 ] [ list file 1 1 50 ] [ list file 1 1 51 ] [ list file 1 1 52 ] [ list file 2 1 54 ] [ list file 1 1 56 ] [ list file 1 1 57 ] [ list file 1 1 67 ] ] [ list 1 1 1 1 1 1 1 1 1 1 0 ] ] u:dedupsortedbam u:outbam u:rawvariant u:qcfile u:mergedbam u:mergedvariant u:flagstats u:alignedsam u:chr_bamListfile u:chr_vcfListfile t:595
        set v:sampleInfo [ turbine::split_impl ${v:sample} " " ]
        turbine::build_rec ${u:sampleInfo} ${v:sampleInfo} [ list container integer string ] 0 1
        set a:sampleName [ adlb::subscript_container ${u:sampleInfo} 0 ]
        set v:alias:sampleName [ turbine::retrieve_string ${a:sampleName} ]
        set a:read1 [ adlb::subscript_container ${u:sampleInfo} 1 ]
        set v:alias:read1 [ turbine::retrieve_string ${a:read1} ]
        turbine::store_string ${u:read1} ${v:alias:read1}
        set a:read2 [ adlb::subscript_container ${u:sampleInfo} 2 ]
        set v:alias:read2 [ turbine::retrieve_string ${a:read2} CACHED 1 ]
        turbine::store_string ${u:read2} ${v:alias:read2}
        turbine::trace_impl "#############     END ALIGNMENT-DEDUPLICATION BLOCK                   ############"
        turbine::trace_impl "########   ALIGNMENT QC TEST   FOR SAMPLE" ${v:alias:sampleName} "             ###############"
        set a:t:251 [ adlb::subscript_container ${u:stat} 4 ]
        set a:tot_mapped [ adlb::subscript_container ${t:250} 0 ]
        set a:t:254 [ adlb::subscript_container ${u:stat} 0 ]
        set a:tot_reads [ adlb::subscript_container ${t:253} 0 ]
        set a:t:257 [ adlb::subscript_container ${u:stat} 3 ]
        set a:tot_dups [ adlb::subscript_container ${t:256} 0 ]
        turbine::trace_impl "#############   WRAP UP the align_dedup stage   ############"
        set v:t:566 "#######   MERGE BAMS BLOCK STARTS HERE  FOR             ${v:alias:sampleName}"
        set v:t:565 "${v:t:566}      ######"
        turbine::trace_impl ${v:t:565}
        set v:t:589 "#######   MERGE VCFs BLOCK STARTS HERE  FOR             ${v:alias:sampleName}"
        set v:t:588 "${v:t:589}       ######"
        turbine::trace_impl ${v:t:588}
        f:sed ${t:595} ${u:chr_vcfListfile} ${c:s_svariant_g} -100 "HARD" "RANK"
        turbine::rule [ list ${t:79} ] [ list __entry-if1 ${t:248} ${t:26} ${t:633} ${t:64} ${t:640} ${t:79} ${t:80} ${v:alias:read1} ${v:alias:read2} ${v:alias:sampleName} ${u:alignedsam} ${u:dedupsortedbam} ${u:read1} ${u:read2} ${u:rgheader} ${u:vars} ]
        turbine::rule [ list ${u:chromosomes_processing_done} ] [ list __entry-explicit-wait3 ${u:RealignDir} ${u:VarcallDir} ${t:31} ${t:640} ${v:alias:sampleName} ${u:chr_bamList} ${u:chr_bamListfile} ${u:chr_vcfListfile} ${u:chromosomes_processing_done} ${u:mergedbam} ${u:outbam} ${u:vars} ]
        turbine::rule [ list ${t:11} ${t:13} ${t:15} ] [ list __entry-async_op-sprintf ${t:11} ${t:13} ${t:15} ${v:alias:sampleName} ${u:rgheader} ]
        turbine::rule [ list ${t:35} ] "__entry-copy_in_filename ${t:35} {${u:qcfile}}"
        turbine::rule [ list ${t:632} ] [ list __entry-async_op-dircat-1 ${t:632} ${v:alias:sampleName} ${u:mergedbam} ${u:mergedvariant} ]
        turbine::rule [ list ${t:240} ] "__entry-call_foreign-trace ${t:240}"
        turbine::rule [ list ${t:245} ] "__entry-call_foreign-trace-1 ${t:245}"
        turbine::rule [ list ${a:t:251} ] "__entry-call_foreign-split {${a:t:251}} ${t:250}"
        turbine::rule [ list ${a:t:254} ] "__entry-call_foreign-split-1 {${a:t:254}} ${t:253}"
        turbine::rule [ list ${a:t:257} ] "__entry-call_foreign-split-2 {${a:t:257}} ${t:256}"
        turbine::rule [ list ${a:tot_reads} ] [ list __entry-async_op-parse_float ${a:tot_dups} ${a:tot_reads} ${t:240} ${t:245} ${t:263} ${t:268} ${v:alias:sampleName} ${u:perc_mapped} ${u:qcfile} ]
        turbine::rule [ list ${a:tot_mapped} ] "__entry-async_op-parse_float-3 {${a:tot_mapped}} ${t:263}"
        turbine::rule [ list [ turbine::get_file_td ${t:595} ] ] "__entry-call_foreign-read-2 ${t:33} {${t:595}} ${t:632} {${v:sampleLines:1}} ${u:chr_vcfList} {${u:mergedvariant}} {${u:rawvariant}} ${u:samples_processing_done} ${u:vars}"
        turbine::rule [ list ${t:633} ] [ list __entry-optmerged-3 ${u:RealignDir} ${u:VarcallDir} ${t:248} ${t:26} ${t:31} ${t:33} ${t:633} ${t:70} ${v:alias:sampleName} ${u:chromosomes_processing_done} ${u:dedupsortedbam} ${u:flagstats} ${u:indices} ${u:outbam} ${u:rawvariant} ${u:stat} ${u:vars} ]
        turbine::rule [ list ${t:640} ] [ list __entry-optmerged-7 ${t:64} ${t:640} ${t:70} ${v:alias:sampleName} ${u:alignedsam} ${u:chr_bamListfile} ${u:chr_vcfListfile} ]
        adlb::write_refcount_decr ${u:sampleInfo} 1
    }
    turbine::read_refcount_decr ${t:640} 1
    turbine::read_refcount_decr ${t:632} 1
    turbine::read_refcount_decr ${t:15} 1
    turbine::read_refcount_decr ${t:248} 1
    turbine::read_refcount_decr ${t:633} 1
    turbine::read_refcount_decr ${t:245} 1
    turbine::read_refcount_decr ${t:268} 1
    turbine::read_refcount_decr ${t:11} 1
    turbine::read_refcount_decr ${t:13} 1
    turbine::read_refcount_decr ${t:35} 1
    turbine::read_refcount_decr ${t:79} 1
    turbine::read_refcount_decr ${t:240} 1
    turbine::read_refcount_decr ${t:80} 1
    turbine::read_refcount_decr ${u:indices} 1
    turbine::read_refcount_decr ${u:vars} 1
}


proc __entry-if1 { t:248 t:26 t:633 t:64 t:640 t:79 t:80 v:alias:read1 v:alias:read2 v:alias:sampleName u:alignedsam u:dedupsortedbam u:read1 u:read2 u:rgheader u:vars } {
    # Var: $boolean v:__t:79 VALUE_OF [boolean:__t:79] VCcallingPipeline.swift:__entry():64:35
    set v:__t:79 [ turbine::retrieve_integer ${t:79} CACHED 1 ]
    if { ${v:__t:79} } {
        # Var: string t:85 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():66:17
        # Var: file u:dedupsam VCcallingPipeline.swift:__entry():66:63
        # Var: file u:dedupbam VCcallingPipeline.swift:__entry():67:66
        # Var: string t:95 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():69:23
        # Var: string t:97 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():69:53
        # Var: string[int] t:99 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():69:72
        # Var: string t:100 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():69:72
        # Var: int t:102 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():69:95
        # Var: string t:103 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():69:106
        # Var: $void v:t:83 VALUE_OF [void:__t:83]
        lassign [ adlb::multicreate [ list string 1 1 68 ] [ list string 1 1 71 ] [ list string 1 1 72 ] [ list container integer string 1 1 73 ] [ list string 1 1 74 ] [ list integer 1 1 75 ] [ list string 1 1 76 ] ] t:85 t:95 t:97 t:99 t:100 t:102 t:103
        turbine::c::log "allocated t:85=<${t:85}> t:95=<${t:95}> t:97=<${t:97}> t:99=<${t:99}> t:100=<${t:100}>"
        turbine::c::log "allocated t:102=<${t:102}> t:103=<${t:103}>"
        lassign [ turbine::make_file_tds [ adlb::multicreate [ list file 1 1 69 ] [ list file 1 1 70 ] ] [ list 1 1 ] ] u:dedupsam u:dedupbam
        turbine::trace_impl "##CASE1: dedup tool is ## SAMBLASTER ##. We use a single command for align-deduplication ##"
        turbine::container_reference ${u:vars} "BWADIR" ${t:95} string
        turbine::container_reference ${u:vars} "BWAINDEX" ${t:97} string
        turbine::container_reference ${u:vars} "BWAMEMPARAMS" ${t:100} string
        turbine::container_reference ${u:vars} "PBSCORES" ${t:103} string
        f:bwa_mem ${u:alignedsam} ${t:95} ${u:read1} ${u:read2} ${t:97} ${t:99} ${t:102} ${u:rgheader} -100 "HARD" "RANK"
        turbine::rule [ list [ turbine::get_file_td ${u:alignedsam} ] ] "__entry-chain1 ${t:102} ${t:248} ${t:64} ${t:640} ${t:85} {${u:alignedsam}} {${u:dedupbam}} {${u:dedupsam}} {${u:dedupsortedbam}} ${u:vars}"
        turbine::rule [ list ${t:640} ] [ list __entry-async_op-strcat-1 ${t:640} ${t:85} ${v:alias:sampleName} ${u:dedupsam} ]
        turbine::rule [ list ${t:633} ] [ list __entry-async_op-strcat-2 ${t:633} ${v:alias:sampleName} ${u:dedupbam} ]
        turbine::rule [ list ${t:100} ] "__entry-arr_copy_in_imm ${t:100} ${t:99}"
        turbine::rule [ list ${t:103} ] "__entry-async_op-parse_int ${t:102} ${t:103}"
        turbine::read_refcount_decr ${t:99} 1
        turbine::read_refcount_decr ${t:95} 1
        turbine::read_refcount_decr ${t:97} 1
    } else {
        # Var: file u:alignedbam VCcallingPipeline.swift:__entry():80:67
        lassign [ turbine::make_file_tds [ adlb::multicreate [ list file 2 1 81 ] ] [ list 1 ] ] u:alignedbam
        turbine::read_refcount_incr ${u:rgheader} 1
        turbine::read_refcount_incr ${u:vars} 2
        turbine::file_read_refcount_incr ${u:alignedsam} 1
        turbine::read_refcount_incr ${t:80} 1
        turbine::read_refcount_incr ${u:read1} 1
        turbine::read_refcount_incr ${u:read2} 1
        turbine::read_refcount_incr ${t:26} 1
        turbine::read_refcount_incr ${t:248} 1
        turbine::read_refcount_incr ${t:633} 1
        turbine::rule [ list ${t:633} ] [ list __entry-async_op-strcat-3 ${t:633} ${v:alias:sampleName} ${u:alignedbam} ]
        turbine::rule [ list ${t:80} ] [ list __entry-async_op-eq_string ${t:248} ${t:26} ${t:633} ${t:64} ${t:640} ${t:80} ${v:alias:read1} ${v:alias:read2} ${v:alias:sampleName} ${u:alignedbam} ${u:alignedsam} ${u:dedupsortedbam} ${u:read1} ${u:read2} ${u:rgheader} ${u:vars} ]
    }
    turbine::read_refcount_decr ${t:640} 1
    turbine::read_refcount_decr ${t:248} 1
    turbine::read_refcount_decr ${t:26} 1
    turbine::read_refcount_decr ${t:633} 1
    turbine::file_read_refcount_decr ${u:dedupsortedbam} 1
    turbine::read_refcount_decr ${u:read2} 1
    turbine::read_refcount_decr ${t:64} 1
    turbine::read_refcount_decr ${u:read1} 1
    turbine::read_refcount_decr ${t:80} 1
    turbine::file_read_refcount_decr ${u:alignedsam} 1
    turbine::read_refcount_decr ${u:vars} 1
    turbine::read_refcount_decr ${u:rgheader} 1
}


proc __entry-chain1 { t:102 t:248 t:64 t:640 t:85 u:alignedsam u:dedupbam u:dedupsam u:dedupsortedbam u:vars } {
    # Var: string t:105 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():70:24
    lassign [ adlb::multicreate [ list string 1 1 77 ] ] t:105
    turbine::c::log "allocated t:105=<${t:105}>"
    turbine::container_reference ${u:vars} "SAMBLASTERDIR" ${t:105} string
    turbine::rule [ list ${t:105} ${t:64} ${t:85} ] "samblaster-app-leaf1 ${t:102} ${t:105} ${t:248} ${t:64} ${t:640} ${t:85} {${u:alignedsam}} {${u:dedupbam}} {${u:dedupsam}} {${u:dedupsortedbam}} ${u:vars}"
}


proc samblaster-app-leaf1 { t:102 t:105 t:248 t:64 t:640 t:85 u:alignedsam u:dedupbam u:dedupsam u:dedupsortedbam u:vars } {
    # Var: $string v:samblasterdir RENAMED [$string:__v:samblasterdir] ./pipelinefunctions/align_dedup.swift:samblaster():27:43
    # Var: $string v:__filename:inputFile RENAMED [$string:__v:__filename:inputFile] ./pipelinefunctions/align_dedup.swift:samblaster():27:43
    # Var: $string v:__filename:output RENAMED [$string:__v:__filename:output] ./pipelinefunctions/align_dedup.swift:samblaster():27:43
    # Var: $file v:inputFile RENAMED [$file:__v:inputFile] ./pipelinefunctions/align_dedup.swift:samblaster():27:43
    # Var: $file v:output RENAMED [$file:__v:output] ./pipelinefunctions/align_dedup.swift:samblaster():27:43
    set v:samblasterdir [ turbine::retrieve_string ${t:105} CACHED 1 ]
    set v:__filename:inputFile [ turbine::retrieve_string ${t:64} CACHED 1 ]
    set v:__filename:output [ turbine::retrieve_string ${t:85} CACHED 1 ]
    set v:inputFile [ turbine::retrieve_file ${u:alignedsam} CACHED 1 ]
    set tcltmp:init_rc 2
    set v:output [ turbine::create_local_file_ref ${v:__filename:output} ${tcltmp:init_rc} 1 ]
    turbine::c::log [ list exec: __v:samblasterdir "-M" "-i" ${v:__filename:inputFile} [ dict create "stdout" ${v:__filename:output} ] ]
    turbine::exec_external ${v:samblasterdir} [ dict create "stdout" ${v:__filename:output} ] "-M" "-i" ${v:__filename:inputFile}
    turbine::store_file ${u:dedupsam} v:output 0
    turbine::rule [ list ] "__entry-chain2 ${t:102} ${t:248} ${t:640} {${u:dedupbam}} {${u:dedupsam}} {${u:dedupsortedbam}} ${u:vars}"
    turbine::decr_local_file_refcount v:output
}


proc __entry-chain2 { t:102 t:248 t:640 u:dedupbam u:dedupsam u:dedupsortedbam u:vars } {
    # Var: string c:s_u OPT_TEMPORARY
    global c:s_u
    f:samtools_view ${u:dedupbam} ${t:248} ${u:dedupsam} ${t:102} ${c:s_u} -100 "HARD" "RANK"
    turbine::rule [ list [ turbine::get_file_td ${u:dedupbam} ] ] "__entry-chain3 ${t:102} ${t:640} {${u:dedupbam}} {${u:dedupsortedbam}} ${u:vars}"
    turbine::file_read_refcount_decr ${u:dedupsam} 1
    turbine::read_refcount_decr ${t:248} 1
}


proc __entry-chain3 { t:102 t:640 u:dedupbam u:dedupsortedbam u:vars } {
    # Var: string t:113 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():76:28
    # Var: string t:114 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():76:35
    # Var: string[int] t:123 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():76:129
    lassign [ adlb::multicreate [ list string 1 1 78 ] [ list string 1 1 79 ] [ list container integer string 1 1 80 ] ] t:113 t:114 t:123
    turbine::c::log "allocated t:113=<${t:113}> t:114=<${t:114}> t:123=<${t:123}>"
    turbine::array_kv_build ${t:123} [ ::adlb::dict_create 0 "--compression 1" ] 1 integer string
    turbine::container_reference ${u:vars} "NOVOCRAFTDIR" ${t:114} string
    f:novosort ${u:dedupsortedbam} ${t:113} ${u:dedupbam} ${t:640} ${t:102} ${t:123} -100 "HARD" "RANK"
    turbine::rule [ list ${t:114} ] "__entry-async_op-strcat ${t:113} ${t:114}"
    turbine::read_refcount_decr ${t:640} 1
    turbine::read_refcount_decr ${t:123} 1
    turbine::file_read_refcount_decr ${u:dedupsortedbam} 1
    turbine::read_refcount_decr ${t:102} 1
    turbine::read_refcount_decr ${t:113} 1
    turbine::file_read_refcount_decr ${u:dedupbam} 1
}


proc __entry-async_op-strcat { t:113 t:114 } {
    # Var: $string v:t:114 VALUE_OF [string:__t:114]
    # Var: $string v:t:113 VALUE_OF [string:__t:113]
    set v:t:114 [ turbine::retrieve_string ${t:114} CACHED 1 ]
    set v:t:113 "${v:t:114}/novosort"
    turbine::store_string ${t:113} ${v:t:113}
}


proc __entry-async_op-strcat-1 { t:640 t:85 v:alias:sampleName u:dedupsam } {
    # Var: $string v:t:640:3 VALUE_OF [string:__t:640]
    # Var: $string v:t:85 VALUE_OF [string:__t:85]
    set v:t:640:3 [ turbine::retrieve_string ${t:640} CACHED 1 ]
    set v:t:85 "${v:t:640:3}/align/${v:alias:sampleName}.wdups.sam"
    turbine::store_string ${t:85} ${v:t:85}
    turbine::set_filename_val ${u:dedupsam} ${v:t:85}
}


proc __entry-async_op-strcat-2 { t:633 v:alias:sampleName u:dedupbam } {
    # Var: $string v:t:633:5 VALUE_OF [string:__t:633]
    # Var: $string v:t:90 VALUE_OF [string:__t:90]
    set v:t:633:5 [ turbine::retrieve_string ${t:633} CACHED 1 ]
    set v:t:90 "${v:t:633:5}/align/${v:alias:sampleName}.wdups.bam"
    turbine::set_filename_val ${u:dedupbam} ${v:t:90}
}


proc __entry-arr_copy_in_imm { t:100 t:99 } {
    # Var: $string v:t:100 VALUE_OF [string:__t:100]
    set v:t:100 [ turbine::retrieve_string ${t:100} CACHED 1 ]
    turbine::array_kv_build ${t:99} [ ::adlb::dict_create 0 ${v:t:100} ] 1 integer string
}


proc __entry-async_op-parse_int { t:102 t:103 } {
    # Var: $string v:t:103 VALUE_OF [string:__t:103]
    # Var: $int v:t:102 VALUE_OF [int:__t:102]
    set v:t:103 [ turbine::retrieve_string ${t:103} CACHED 1 ]
    set v:t:102 [ turbine::parse_int_impl ${v:t:103} 10 ]
    turbine::store_integer ${t:102} ${v:t:102}
}


proc __entry-async_op-strcat-3 { t:633 v:alias:sampleName u:alignedbam } {
    # Var: $string v:t:633:6 VALUE_OF [string:__t:633]
    # Var: $string v:t:125 VALUE_OF [string:__t:125]
    set v:t:633:6 [ turbine::retrieve_string ${t:633} CACHED 1 ]
    set v:t:125 "${v:t:633:6}/align/${v:alias:sampleName}.nodups.bam"
    turbine::set_filename_val ${u:alignedbam} ${v:t:125}
}


proc __entry-async_op-eq_string { t:248 t:26 t:633 t:64 t:640 t:80 v:alias:read1 v:alias:read2 v:alias:sampleName u:alignedbam u:alignedsam u:dedupsortedbam u:read1 u:read2 u:rgheader u:vars } {
    # Var: $string v:t:80:1 VALUE_OF [string:__t:80]
    # Var: $boolean v:t:130 VALUE_OF [boolean:__t:130]
    set v:t:80:1 [ turbine::retrieve_string ${t:80} CACHED 1 ]
    set v:t:130 [ string equal ${v:t:80:1} "PICARD" ]
    if { ${v:t:130} } {
        # Var: string t:136 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():83:26
        # Var: file u:alignedsortedbam VCcallingPipeline.swift:__entry():83:75
        # Var: string t:141 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():84:21
        # Var: file u:metricsfile VCcallingPipeline.swift:__entry():84:70
        # Var: string t:146 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():85:24
        # Var: string t:148 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():85:54
        # Var: string[int] t:150 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():85:73
        # Var: string t:151 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():85:73
        # Var: int t:153 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():85:96
        # Var: string t:154 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():85:107
        # Var: $void v:t:134 VALUE_OF [void:__t:134]
        lassign [ adlb::multicreate [ list string 1 1 82 ] [ list string 1 1 84 ] [ list string 1 1 86 ] [ list string 1 1 87 ] [ list container integer string 1 1 88 ] [ list string 1 1 89 ] [ list integer 1 1 90 ] [ list string 1 1 91 ] ] t:136 t:141 t:146 t:148 t:150 t:151 t:153 t:154
        turbine::c::log "allocated t:136=<${t:136}> t:141=<${t:141}> t:146=<${t:146}> t:148=<${t:148}> t:150=<${t:150}>"
        turbine::c::log "allocated t:151=<${t:151}> t:153=<${t:153}> t:154=<${t:154}>"
        lassign [ turbine::make_file_tds [ adlb::multicreate [ list file 1 1 83 ] [ list file 0 1 85 ] ] [ list 1 1 ] ] u:alignedsortedbam u:metricsfile
        turbine::read_refcount_incr ${t:633} 1
        turbine::read_refcount_incr ${t:26} 1
        turbine::trace_impl "##CASE 2: dedup tool is ## PICARD ##. One command for align, one for sort, one for dedup ##"
        turbine::container_reference ${u:vars} "BWADIR" ${t:146} string
        turbine::container_reference ${u:vars} "BWAINDEX" ${t:148} string
        turbine::container_reference ${u:vars} "BWAMEMPARAMS" ${t:151} string
        turbine::container_reference ${u:vars} "PBSCORES" ${t:154} string
        f:bwa_mem ${u:alignedsam} ${t:146} ${u:read1} ${u:read2} ${t:148} ${t:150} ${t:153} ${u:rgheader} -100 "HARD" "RANK"
        turbine::rule [ list [ turbine::get_file_td ${u:alignedsam} ] ] "__entry-chain4 ${t:136} ${t:141} ${t:153} ${t:248} ${t:26} ${t:640} {${u:alignedbam}} {${u:alignedsam}} {${u:alignedsortedbam}} {${u:dedupsortedbam}} {${u:metricsfile}} ${u:vars}"
        turbine::rule [ list ${t:151} ] "__entry-arr_copy_in_imm-1 ${t:150} ${t:151}"
        turbine::rule [ list ${t:154} ] "__entry-async_op-parse_int-1 ${t:153} ${t:154}"
        turbine::rule [ list ${t:633} ] [ list __entry-optmerged ${t:136} ${t:141} ${t:633} ${v:alias:sampleName} ${u:alignedsortedbam} ${u:metricsfile} ]
        turbine::read_refcount_decr ${t:148} 1
        turbine::read_refcount_decr ${t:146} 1
        turbine::read_refcount_decr ${t:150} 1
    } else {
        # Var: string t:183 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():94:7
        # Var: $void v:t:180 VALUE_OF [void:__t:180]
        lassign [ adlb::multicreate [ list string 1 1 97 ] ] t:183
        turbine::c::log "allocated t:183=<${t:183}>"
        turbine::read_refcount_incr ${u:read1} 1
        turbine::read_refcount_incr ${t:64} 1
        turbine::read_refcount_incr ${u:read2} 1
        turbine::read_refcount_incr ${u:rgheader} 1
        turbine::file_read_refcount_incr ${u:alignedbam} 2
        turbine::file_read_refcount_incr ${u:alignedsam} 1
        turbine::read_refcount_incr ${t:248} 1
        turbine::file_read_refcount_incr ${u:dedupsortedbam} 1
        turbine::trace_impl "##CASE DEFAULT: dedup tool is ## NOVOSORT ##. We use one command for dup-sort ##"
        turbine::container_reference ${u:vars} "ALIGNERTOOL" ${t:183} string
        turbine::rule [ list [ turbine::get_file_td ${u:alignedbam} ] ] "__entry-explicit-wait1 ${t:640} {${u:alignedbam}} {${u:dedupsortedbam}} ${u:vars}"
        turbine::rule [ list ${t:183} ] [ list __entry-async_op-eq_string-1 ${t:183} ${t:248} ${t:64} ${v:alias:read1} ${v:alias:read2} ${u:alignedbam} ${u:alignedsam} ${u:read1} ${u:read2} ${u:rgheader} ${u:vars} ]
    }
    turbine::read_refcount_decr ${t:640} 1
    turbine::read_refcount_decr ${t:248} 1
    turbine::read_refcount_decr ${t:26} 1
    turbine::read_refcount_decr ${t:633} 1
    turbine::file_read_refcount_decr ${u:dedupsortedbam} 1
    turbine::file_read_refcount_decr ${u:alignedbam} 1
    turbine::read_refcount_decr ${u:read2} 1
    turbine::read_refcount_decr ${t:64} 1
    turbine::read_refcount_decr ${u:read1} 1
    turbine::file_read_refcount_decr ${u:alignedsam} 1
    turbine::read_refcount_decr ${u:vars} 1
    turbine::read_refcount_decr ${u:rgheader} 1
}


proc __entry-chain4 { t:136 t:141 t:153 t:248 t:26 t:640 u:alignedbam u:alignedsam u:alignedsortedbam u:dedupsortedbam u:metricsfile u:vars } {
    # Var: string c:s_u OPT_TEMPORARY
    global c:s_u
    f:samtools_view ${u:alignedbam} ${t:248} ${u:alignedsam} ${t:153} ${c:s_u} -100 "HARD" "RANK"
    turbine::rule [ list [ turbine::get_file_td ${u:alignedbam} ] ] "__entry-chain5 ${t:136} ${t:141} ${t:153} ${t:26} ${t:640} {${u:alignedbam}} {${u:alignedsortedbam}} {${u:dedupsortedbam}} {${u:metricsfile}} ${u:vars}"
    turbine::read_refcount_decr ${t:248} 1
    turbine::file_read_refcount_decr ${u:alignedsam} 1
}


proc __entry-chain5 { t:136 t:141 t:153 t:26 t:640 u:alignedbam u:alignedsortedbam u:dedupsortedbam u:metricsfile u:vars } {
    # Var: string t:162 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():88:31
    # Var: string t:163 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():88:38
    # Var: string[int] t:172 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():88:135
    lassign [ adlb::multicreate [ list string 1 1 92 ] [ list string 1 1 93 ] [ list container integer string 1 1 94 ] ] t:162 t:163 t:172
    turbine::c::log "allocated t:162=<${t:162}> t:163=<${t:163}> t:172=<${t:172}>"
    turbine::array_kv_build ${t:172} [ ::adlb::dict_create 0 "" ] 1 integer string
    turbine::container_reference ${u:vars} "NOVOCRAFTDIR" ${t:163} string
    f:novosort ${u:alignedsortedbam} ${t:162} ${u:alignedbam} ${t:640} ${t:153} ${t:172} -100 "HARD" "RANK"
    turbine::rule [ list [ turbine::get_file_td ${u:alignedsortedbam} ] ] "__entry-chain6 ${t:136} ${t:141} ${t:26} ${t:640} {${u:alignedsortedbam}} {${u:dedupsortedbam}} {${u:metricsfile}} ${u:vars}"
    turbine::rule [ list ${t:163} ] "__entry-async_op-strcat-4 ${t:162} ${t:163}"
    turbine::read_refcount_decr ${t:153} 1
    turbine::file_read_refcount_decr ${u:alignedbam} 1
    turbine::read_refcount_decr ${t:162} 1
    turbine::read_refcount_decr ${t:172} 1
}


proc __entry-chain6 { t:136 t:141 t:26 t:640 u:alignedsortedbam u:dedupsortedbam u:metricsfile u:vars } {
    # Var: string t:174 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():89:39
    # Var: string t:176 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():89:56
    lassign [ adlb::multicreate [ list string 1 1 95 ] [ list string 1 1 96 ] ] t:174 t:176
    turbine::c::log "allocated t:174=<${t:174}> t:176=<${t:176}>"
    turbine::container_reference ${u:vars} "JAVADIR" ${t:174} string
    turbine::container_reference ${u:vars} "PICARDDIR" ${t:176} string
    turbine::rule [ list ${t:136} ${t:141} ${t:174} ${t:176} ${t:26} ${t:640} ] "picard-app-leaf1 ${t:136} ${t:141} ${t:174} ${t:176} ${t:26} ${t:640} {${u:alignedsortedbam}} {${u:dedupsortedbam}} {${u:metricsfile}}"
}


proc picard-app-leaf1 { t:136 t:141 t:174 t:176 t:26 t:640 u:alignedsortedbam u:dedupsortedbam u:metricsfile } {
    # Var: $string v:javadir RENAMED [$string:__v:javadir] ./pipelinefunctions/align_dedup.swift:picard():45:145
    # Var: $string v:picarddir RENAMED [$string:__v:picarddir] ./pipelinefunctions/align_dedup.swift:picard():45:145
    # Var: $string v:__filename:inputFile:1 RENAMED [$string:__v:__filename:inputFile] ./pipelinefunctions/align_dedup.swift:picard():45:145
    # Var: $string v:__filename:outputfile RENAMED [$string:__v:__filename:outputfile] ./pipelinefunctions/align_dedup.swift:picard():45:145
    # Var: $string v:__filename:metricsfile RENAMED [$string:__v:__filename:metricsfile] ./pipelinefunctions/align_dedup.swift:picard():45:145
    # Var: $string v:tmpdir RENAMED [$string:__v:tmpdir] ./pipelinefunctions/align_dedup.swift:picard():45:145
    # Var: $file v:inputFile:1 RENAMED [$file:__v:inputFile] ./pipelinefunctions/align_dedup.swift:picard():45:145
    # Var: $file v:outputfile RENAMED [$file:__v:outputfile] ./pipelinefunctions/align_dedup.swift:picard():45:145
    # Var: $file v:metricsfile RENAMED [$file:__v:metricsfile] ./pipelinefunctions/align_dedup.swift:picard():45:145
    set v:javadir [ turbine::retrieve_string ${t:174} CACHED 1 ]
    set v:picarddir [ turbine::retrieve_string ${t:176} CACHED 1 ]
    set v:__filename:inputFile:1 [ turbine::retrieve_string ${t:136} CACHED 1 ]
    set v:__filename:outputfile [ turbine::retrieve_string ${t:26} CACHED 1 ]
    set v:__filename:metricsfile [ turbine::retrieve_string ${t:141} CACHED 1 ]
    set v:tmpdir [ turbine::retrieve_string ${t:640} CACHED 1 ]
    set v:inputFile:1 [ turbine::retrieve_file ${u:alignedsortedbam} CACHED 1 ]
    set tcltmp:init_rc 2
    set v:outputfile [ turbine::create_local_file_ref ${v:__filename:outputfile} ${tcltmp:init_rc} 1 ]
    set tcltmp:init_rc 2
    set v:metricsfile [ turbine::create_local_file_ref ${v:__filename:metricsfile} ${tcltmp:init_rc} 1 ]
    turbine::c::log [ list exec: __v:javadir "-Xmx8g" "-jar" ${v:picarddir} "MarkDuplicates" "INPUT=" ${v:__filename:inputFile:1} "OUTPUT=" ${v:__filename:outputfile} "METRICS_FILE=" ${v:__filename:metricsfile} "TMP_DIR=" ${v:tmpdir} "ASSUME_SORTED=true MAX_RECORDS_IN_RAM=null CREATE_INDEX=true VALIDATION_STRINGENCY=SILENT" [ dict create ] ]
    turbine::exec_external ${v:javadir} [ dict create ] "-Xmx8g" "-jar" ${v:picarddir} "MarkDuplicates" "INPUT=" ${v:__filename:inputFile:1} "OUTPUT=" ${v:__filename:outputfile} "METRICS_FILE=" ${v:__filename:metricsfile} "TMP_DIR=" ${v:tmpdir} "ASSUME_SORTED=true MAX_RECORDS_IN_RAM=null CREATE_INDEX=true VALIDATION_STRINGENCY=SILENT"
    turbine::store_file ${u:dedupsortedbam} v:outputfile 0
    turbine::store_file ${u:metricsfile} v:metricsfile 0
    turbine::decr_local_file_refcount v:outputfile
    turbine::decr_local_file_refcount v:metricsfile
}


proc __entry-async_op-strcat-4 { t:162 t:163 } {
    # Var: $string v:t:163 VALUE_OF [string:__t:163]
    # Var: $string v:t:162 VALUE_OF [string:__t:162]
    set v:t:163 [ turbine::retrieve_string ${t:163} CACHED 1 ]
    set v:t:162 "${v:t:163}/novosort"
    turbine::store_string ${t:162} ${v:t:162}
}


proc __entry-arr_copy_in_imm-1 { t:150 t:151 } {
    # Var: $string v:t:151 VALUE_OF [string:__t:151]
    set v:t:151 [ turbine::retrieve_string ${t:151} CACHED 1 ]
    turbine::array_kv_build ${t:150} [ ::adlb::dict_create 0 ${v:t:151} ] 1 integer string
}


proc __entry-async_op-parse_int-1 { t:153 t:154 } {
    # Var: $string v:t:154 VALUE_OF [string:__t:154]
    # Var: $int v:t:153 VALUE_OF [int:__t:153]
    set v:t:154 [ turbine::retrieve_string ${t:154} CACHED 1 ]
    set v:t:153 [ turbine::parse_int_impl ${v:t:154} 10 ]
    turbine::store_integer ${t:153} ${v:t:153}
}


proc __entry-optmerged { t:136 t:141 t:633 v:alias:sampleName u:alignedsortedbam u:metricsfile } {
    # Var: $string v:t:633:7 VALUE_OF [string:__t:633]
    # Var: $string v:t:136 VALUE_OF [string:__t:136]
    # Var: $string v:t:141 VALUE_OF [string:__t:141]
    set v:t:633:7 [ turbine::retrieve_string ${t:633} CACHED 1 ]
    set v:t:136 "${v:t:633:7}/align/${v:alias:sampleName}.nodups.sorted.bam"
    turbine::store_string ${t:136} ${v:t:136}
    set v:t:141 "${v:t:633:7}/align/${v:alias:sampleName}.picard.metrics"
    turbine::store_string ${t:141} ${v:t:141}
    turbine::set_filename_val ${u:alignedsortedbam} ${v:t:136}
    turbine::set_filename_val ${u:metricsfile} ${v:t:141}
}


proc __entry-explicit-wait1 { t:640 u:alignedbam u:dedupsortedbam u:vars } {
    # Var: string t:221 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():103:30
    # Var: string t:222 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():103:37
    # Var: int t:228 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():103:102
    # Var: string t:229 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():103:113
    # Var: string[int] t:231 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():103:133
    lassign [ adlb::multicreate [ list string 1 1 98 ] [ list string 1 1 99 ] [ list integer 1 1 100 ] [ list string 1 1 101 ] [ list container integer string 1 1 102 ] ] t:221 t:222 t:228 t:229 t:231
    turbine::c::log "allocated t:221=<${t:221}> t:222=<${t:222}> t:228=<${t:228}> t:229=<${t:229}> t:231=<${t:231}>"
    turbine::array_kv_build ${t:231} [ ::adlb::dict_create 0 "--markDuplicates" ] 1 integer string
    turbine::container_reference ${u:vars} "NOVOCRAFTDIR" ${t:222} string
    turbine::container_reference ${u:vars} "PBSCORES" ${t:229} string
    f:novosort ${u:dedupsortedbam} ${t:221} ${u:alignedbam} ${t:640} ${t:228} ${t:231} -100 "HARD" "RANK"
    turbine::rule [ list ${t:222} ] "__entry-async_op-strcat-5 ${t:221} ${t:222}"
    turbine::rule [ list ${t:229} ] "__entry-async_op-parse_int-2 ${t:228} ${t:229}"
    turbine::read_refcount_decr ${t:221} 1
    turbine::read_refcount_decr ${t:640} 1
    turbine::read_refcount_decr ${t:231} 1
    turbine::file_read_refcount_decr ${u:dedupsortedbam} 1
    turbine::file_read_refcount_decr ${u:alignedbam} 1
    turbine::read_refcount_decr ${t:228} 1
}


proc __entry-async_op-strcat-5 { t:221 t:222 } {
    # Var: $string v:t:222 VALUE_OF [string:__t:222]
    # Var: $string v:t:221 VALUE_OF [string:__t:221]
    set v:t:222 [ turbine::retrieve_string ${t:222} CACHED 1 ]
    set v:t:221 "${v:t:222}/novosort"
    turbine::store_string ${t:221} ${v:t:221}
}


proc __entry-async_op-parse_int-2 { t:228 t:229 } {
    # Var: $string v:t:229 VALUE_OF [string:__t:229]
    # Var: $int v:t:228 VALUE_OF [int:__t:228]
    set v:t:229 [ turbine::retrieve_string ${t:229} CACHED 1 ]
    set v:t:228 [ turbine::parse_int_impl ${v:t:229} 10 ]
    turbine::store_integer ${t:228} ${v:t:228}
}


proc __entry-async_op-eq_string-1 { t:183 t:248 t:64 v:alias:read1 v:alias:read2 u:alignedbam u:alignedsam u:read1 u:read2 u:rgheader u:vars } {
    # Var: $string v:t:183 VALUE_OF [string:__t:183]
    # Var: $boolean v:t:182 VALUE_OF [boolean:__t:182]
    set v:t:183 [ turbine::retrieve_string ${t:183} CACHED 1 ]
    set v:t:182 [ string equal ${v:t:183} "BWAMEM" ]
    if { ${v:t:182} } {
        # Var: string t:186 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():95:25
        # Var: string t:188 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():95:55
        # Var: string[int] t:190 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():95:74
        # Var: string t:191 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():95:74
        # Var: int t:193 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():95:97
        # Var: string t:194 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():95:108
        lassign [ adlb::multicreate [ list string 1 1 103 ] [ list string 1 1 104 ] [ list container integer string 1 1 105 ] [ list string 1 1 106 ] [ list integer 1 1 107 ] [ list string 1 1 108 ] ] t:186 t:188 t:190 t:191 t:193 t:194
        turbine::c::log "allocated t:186=<${t:186}> t:188=<${t:188}> t:190=<${t:190}> t:191=<${t:191}> t:193=<${t:193}>"
        turbine::c::log "allocated t:194=<${t:194}>"
        turbine::read_refcount_incr ${u:vars} 1
        turbine::container_reference ${u:vars} "BWADIR" ${t:186} string
        turbine::container_reference ${u:vars} "BWAINDEX" ${t:188} string
        turbine::container_reference ${u:vars} "BWAMEMPARAMS" ${t:191} string
        turbine::container_reference ${u:vars} "PBSCORES" ${t:194} string
        f:bwa_mem ${u:alignedsam} ${t:186} ${u:read1} ${u:read2} ${t:188} ${t:190} ${t:193} ${u:rgheader} -100 "HARD" "RANK"
        turbine::rule [ list [ turbine::get_file_td ${u:alignedsam} ] ] "__entry-chain7 ${t:193} ${t:248} {${u:alignedbam}} {${u:alignedsam}}"
        turbine::rule [ list ${t:191} ] "__entry-arr_copy_in_imm-2 ${t:190} ${t:191}"
        turbine::rule [ list ${t:194} ] "__entry-async_op-parse_int-3 ${t:193} ${t:194}"
        turbine::read_refcount_decr ${t:188} 1
        turbine::read_refcount_decr ${t:186} 1
        turbine::read_refcount_decr ${t:190} 1
    } else {
        # Var: string t:203 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():98:34
        # Var: string t:207 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():98:87
        # Var: int t:212 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():98:138
        # Var: string t:213 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():98:149
        lassign [ adlb::multicreate [ list string 1 1 109 ] [ list string 1 1 110 ] [ list integer 1 1 111 ] [ list string 1 1 112 ] ] t:203 t:207 t:212 t:213
        turbine::c::log "allocated t:203=<${t:203}> t:207=<${t:207}> t:212=<${t:212}> t:213=<${t:213}>"
        turbine::read_refcount_incr ${t:64} 1
        turbine::read_refcount_incr ${u:rgheader} 1
        turbine::container_reference ${u:vars} "NOVOCRAFTDIR" ${t:203} string
        turbine::container_reference ${u:vars} "NOVOALIGNINDEX" ${t:207} string
        turbine::container_reference ${u:vars} "PBSCORES" ${t:213} string
        turbine::rule [ list ${t:213} ] [ list __entry-async_op-parse_int-4 ${t:203} ${t:207} ${t:212} ${t:213} ${t:248} ${t:64} ${v:alias:read1} ${v:alias:read2} ${u:alignedbam} ${u:alignedsam} ${u:rgheader} ]
    }
    turbine::read_refcount_decr ${t:248} 1
    turbine::file_read_refcount_decr ${u:alignedsam} 1
    turbine::file_read_refcount_decr ${u:alignedbam} 1
    turbine::read_refcount_decr ${u:vars} 1
    turbine::read_refcount_decr ${u:rgheader} 1
    turbine::read_refcount_decr ${u:read2} 1
    turbine::read_refcount_decr ${t:64} 1
    turbine::read_refcount_decr ${u:read1} 1
}


proc __entry-chain7 { t:193 t:248 u:alignedbam u:alignedsam } {
    # Var: string c:s_u OPT_TEMPORARY
    global c:s_u
    f:samtools_view ${u:alignedbam} ${t:248} ${u:alignedsam} ${t:193} ${c:s_u} -100 "HARD" "RANK"
    turbine::read_refcount_decr ${t:248} 1
    turbine::file_read_refcount_decr ${u:alignedsam} 1
    turbine::file_read_refcount_decr ${u:alignedbam} 1
    turbine::read_refcount_decr ${t:193} 1
}


proc __entry-arr_copy_in_imm-2 { t:190 t:191 } {
    # Var: $string v:t:191 VALUE_OF [string:__t:191]
    set v:t:191 [ turbine::retrieve_string ${t:191} CACHED 1 ]
    turbine::array_kv_build ${t:190} [ ::adlb::dict_create 0 ${v:t:191} ] 1 integer string
}


proc __entry-async_op-parse_int-3 { t:193 t:194 } {
    # Var: $string v:t:194 VALUE_OF [string:__t:194]
    # Var: $int v:t:193 VALUE_OF [int:__t:193]
    set v:t:194 [ turbine::retrieve_string ${t:194} CACHED 1 ]
    set v:t:193 [ turbine::parse_int_impl ${v:t:194} 10 ]
    turbine::store_integer ${t:193} ${v:t:193}
}


proc __entry-async_op-parse_int-4 { t:203 t:207 t:212 t:213 t:248 t:64 v:alias:read1 v:alias:read2 u:alignedbam u:alignedsam u:rgheader } {
    # Var: $string v:t:213 VALUE_OF [string:__t:213]
    # Var: $int v:t:212 VALUE_OF [int:__t:212]
    set v:t:213 [ turbine::retrieve_string ${t:213} CACHED 1 ]
    set v:t:212 [ turbine::parse_int_impl ${v:t:213} 10 ]
    turbine::store_integer ${t:212} ${v:t:212}
    turbine::rule [ list ${t:203} ${t:207} ${t:212} ${t:64} ${u:rgheader} ] [ list __entry-async_op-strcat-6 ${t:203} ${t:207} ${t:212} ${t:248} ${t:64} ${v:alias:read1} ${v:alias:read2} ${u:alignedbam} ${u:alignedsam} ${u:rgheader} ]
}


proc __entry-async_op-strcat-6 { t:203 t:207 t:212 t:248 t:64 v:alias:read1 v:alias:read2 u:alignedbam u:alignedsam u:rgheader } {
    # Var: $string v:t:203 VALUE_OF [string:__t:203]
    # Var: $string v:t:202 VALUE_OF [string:__t:202]
    # Var: $int v:PBSCORES RENAMED [$int:__v:PBSCORES] ./pipelinefunctions/align_dedup.swift:novoalign():9:84
    # Var: $string v:INDEX RENAMED [$string:__v:INDEX] ./pipelinefunctions/align_dedup.swift:novoalign():9:84
    # Var: $string v:rgheader RENAMED [$string:__v:rgheader] ./pipelinefunctions/align_dedup.swift:novoalign():9:84
    # Var: $string v:__filename:output:1 RENAMED [$string:__v:__filename:output] ./pipelinefunctions/align_dedup.swift:novoalign():9:84
    # Var: $file v:output:1 RENAMED [$file:__v:output] ./pipelinefunctions/align_dedup.swift:novoalign():9:84
    set v:t:203 [ turbine::retrieve_string ${t:203} CACHED 1 ]
    set v:t:202 "${v:t:203}/novoalign"
    set v:PBSCORES [ turbine::retrieve_integer ${t:212} ]
    set v:INDEX [ turbine::retrieve_string ${t:207} CACHED 1 ]
    set v:rgheader [ turbine::retrieve_string ${u:rgheader} CACHED 1 ]
    set v:__filename:output:1 [ turbine::retrieve_string ${t:64} CACHED 1 ]
    set tcltmp:init_rc 2
    set v:output:1 [ turbine::create_local_file_ref ${v:__filename:output:1} ${tcltmp:init_rc} 1 ]
    turbine::c::log [ list exec: __v:t:202 "-c" ${v:PBSCORES} "-d" ${v:INDEX} "-f" ${v:alias:read1} ${v:alias:read2} "-o" "SAM" ${v:rgheader} [ dict create "stdout" ${v:__filename:output:1} ] ]
    turbine::exec_external ${v:t:202} [ dict create "stdout" ${v:__filename:output:1} ] "-c" ${v:PBSCORES} "-d" ${v:INDEX} "-f" ${v:alias:read1} ${v:alias:read2} "-o" "SAM" ${v:rgheader}
    turbine::store_file ${u:alignedsam} v:output:1 0
    turbine::rule [ list ] "__entry-chain8 ${t:212} ${t:248} {${u:alignedbam}} {${u:alignedsam}}"
    turbine::decr_local_file_refcount v:output:1
}


proc __entry-chain8 { t:212 t:248 u:alignedbam u:alignedsam } {
    # Var: string c:s_u OPT_TEMPORARY
    global c:s_u
    f:samtools_view ${u:alignedbam} ${t:248} ${u:alignedsam} ${t:212} ${c:s_u} -100 "HARD" "RANK"
    turbine::read_refcount_decr ${t:248} 1
    turbine::read_refcount_decr ${t:212} 1
    turbine::file_read_refcount_decr ${u:alignedsam} 1
    turbine::file_read_refcount_decr ${u:alignedbam} 1
}


proc __entry-explicit-wait3 { u:RealignDir u:VarcallDir t:31 t:640 v:alias:sampleName u:chr_bamList u:chr_bamListfile u:chr_vcfListfile u:chromosomes_processing_done u:mergedbam u:outbam u:vars } {
    # Var: string t:560 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():195:44
    # Var: string t:562 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():196:44
    # Var: $string v:t:560 VALUE_OF [string:__t:560]
    # Var: $string v:t:562 VALUE_OF [string:__t:562]
    lassign [ adlb::multicreate [ list string 1 1 113 ] [ list string 1 1 114 ] ] t:560 t:562
    turbine::c::log "allocated t:560=<${t:560}> t:562=<${t:562}>"
    set v:t:560 "${v:alias:sampleName}.*.recalibrated.bam"
    turbine::store_string ${t:560} ${v:t:560}
    f:find_files ${u:chr_bamListfile} ${u:RealignDir} ${t:560} -100 "HARD" "RANK"
    set v:t:562 "${v:alias:sampleName}.*.raw.g.vcf"
    turbine::store_string ${t:562} ${v:t:562}
    f:find_files ${u:chr_vcfListfile} ${u:VarcallDir} ${t:562} -100 "HARD" "RANK"
    turbine::rule [ list [ turbine::get_file_td ${u:chr_bamListfile} ] ] "__entry-call_foreign-read-1 ${t:31} ${t:640} ${u:chr_bamList} {${u:chr_bamListfile}} {${u:mergedbam}} {${u:outbam}} ${u:vars}"
    turbine::read_refcount_decr ${u:chromosomes_processing_done} 1
    turbine::read_refcount_decr ${t:562} 1
    turbine::read_refcount_decr ${t:560} 1
    turbine::file_read_refcount_decr ${u:chr_vcfListfile} 1
    turbine::read_refcount_decr ${u:VarcallDir} 1
    turbine::read_refcount_decr ${u:RealignDir} 1
}


proc __entry-call_foreign-read-1 { t:31 t:640 u:chr_bamList u:chr_bamListfile u:mergedbam u:outbam u:vars } {
    # Var: $file v:chr_bamListfile VALUE_OF [file:chr_bamListfile]
    # Var: $string v:t:571 VALUE_OF [string:__t:571]
    # Var: $int v:n:2 RENAMED [$int:__v:n]
    # Var: $string v:t:570 VALUE_OF [string:__t:570]
    # Var: $string v:o:2 RENAMED [$string:__v:o]
    # Var: $string$[int] v:chr_bamList VALUE_OF [string[int]:chr_bamList]
    # Var: string t:577 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():202:27
    # Var: string t:584 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():202:105
    lassign [ adlb::multicreate [ list string 1 1 115 ] [ list string 1 1 116 ] ] t:577 t:584
    turbine::c::log "allocated t:577=<${t:577}> t:584=<${t:584}>"
    set v:chr_bamListfile [ turbine::retrieve_file ${u:chr_bamListfile} CACHED 1 ]
    set v:t:571 [ turbine::file_read_local ${v:chr_bamListfile} ]
    set v:n:2 [ string length ${v:t:571} ]
    set v:t:570 [ turbine::replace_all_impl ${v:t:571} "\n" " " 0 ${v:n:2} ]
    set v:o:2 [ string trim ${v:t:570} ]
    set v:chr_bamList [ turbine::split_impl ${v:o:2} " " ]
    turbine::build_rec ${u:chr_bamList} ${v:chr_bamList} [ list container integer string ] 0 1
    turbine::container_reference ${u:vars} "NOVOCRAFTDIR" ${t:577} string
    turbine::container_reference ${u:vars} "PBSCORES" ${t:584} string
    turbine::rule [ list ${t:31} ${t:577} ${t:584} ${t:640} ] "__entry-async_op-parse_int-5 ${t:31} ${t:577} ${t:584} ${t:640} ${u:chr_bamList} {${u:mergedbam}} {${u:outbam}}"
}


proc __entry-async_op-parse_int-5 { t:31 t:577 t:584 t:640 u:chr_bamList u:mergedbam u:outbam } {
    # Var: $string v:t:584 VALUE_OF [string:__t:584]
    # Var: $int v:t:583 VALUE_OF [int:__t:583]
    # Var: $string v:t:577 VALUE_OF [string:__t:577]
    # Var: $string v:t:576 VALUE_OF [string:__t:576]
    # Var: $string v:tmpdir:1 RENAMED [$string:__v:tmpdir] ./pipelinefunctions/align_dedup.swift:novosort():40:72
    # Var: $string$[int] v:inputFile:7 RENAMED [$string$[int]:__v:inputFile] ./pipelinefunctions/align_dedup.swift:novosort():40:72
    # Var: $string v:__filename:output:2 RENAMED [$string:__v:__filename:output] ./pipelinefunctions/align_dedup.swift:novosort():40:72
    # Var: $file v:output:2 RENAMED [$file:__v:output] ./pipelinefunctions/align_dedup.swift:novosort():40:72
    set v:t:584 [ turbine::retrieve_string ${t:584} CACHED 1 ]
    set v:t:583 [ turbine::parse_int_impl ${v:t:584} 10 ]
    set v:t:577 [ turbine::retrieve_string ${t:577} CACHED 1 ]
    set v:t:576 "${v:t:577}/novosort"
    set v:tmpdir:1 [ turbine::retrieve_string ${t:640} CACHED 1 ]
    set v:inputFile:7 [ turbine::unpack_args ${u:chr_bamList} 1 string ]
    set v:__filename:output:2 [ turbine::retrieve_string ${t:31} CACHED 1 ]
    set tcltmp:init_rc 2
    set v:output:2 [ turbine::create_local_file_ref ${v:__filename:output:2} ${tcltmp:init_rc} 1 ]
    turbine::c::log [ list exec: __v:t:576 "--index" "--tmpdir" ${v:tmpdir:1} "--threads" ${v:t:583} {*}${v:inputFile:7} "-o" ${v:__filename:output:2} [ dict create ] ]
    turbine::exec_external ${v:t:576} [ dict create ] "--index" "--tmpdir" ${v:tmpdir:1} "--threads" ${v:t:583} {*}${v:inputFile:7} "-o" ${v:__filename:output:2}
    turbine::store_file ${u:outbam} v:output:2 0
    turbine::rule [ list ] "__entry-chain11 {${u:mergedbam}} {${u:outbam}}"
    turbine::decr_local_file_refcount v:output:2
    turbine::read_refcount_decr ${u:chr_bamList} 1
}


proc __entry-chain11 { u:mergedbam u:outbam } {
    f:cp ${u:mergedbam} ${u:outbam} -100 "HARD" "RANK"
    turbine::file_read_refcount_decr ${u:mergedbam} 1
    turbine::file_read_refcount_decr ${u:outbam} 1
}


proc __entry-async_op-sprintf { t:11 t:13 t:15 v:alias:sampleName u:rgheader } {
    # Var: $string v:t:11 VALUE_OF [string:__t:11]
    # Var: $string v:t:13 VALUE_OF [string:__t:13]
    # Var: $string v:t:15 VALUE_OF [string:__t:15]
    # Var: $string v:rgheader:1 VALUE_OF [string:rgheader]
    set v:t:11 [ turbine::retrieve_string ${t:11} CACHED 1 ]
    set v:t:13 [ turbine::retrieve_string ${t:13} CACHED 1 ]
    set v:t:15 [ turbine::retrieve_string ${t:15} CACHED 1 ]
    set v:rgheader:1 [ eval format [ list "@RG\tID:%s\tLB:%s\tPL:%s\tPU:%s\tSM:%s\tCN:%s" ${v:alias:sampleName} ${v:t:11} ${v:t:13} ${v:alias:sampleName} ${v:alias:sampleName} ${v:t:15} ] ]
    turbine::store_string ${u:rgheader} ${v:rgheader:1}
}


proc __entry-copy_in_filename { t:35 u:qcfile } {
    # Var: $string v:t:35:1 VALUE_OF [string:__t:35]
    set v:t:35:1 [ turbine::retrieve_string ${t:35} CACHED 1 ]
    turbine::set_filename_val ${u:qcfile} ${v:t:35:1}
}


proc __entry-async_op-dircat-1 { t:632 v:alias:sampleName u:mergedbam u:mergedvariant } {
    # Var: $string v:t:632:3 VALUE_OF [string:__t:632]
    # Var: $string v:t:43 VALUE_OF [string:__t:43]
    # Var: $string v:t:42 VALUE_OF [string:__t:42]
    # Var: $string v:t:50 VALUE_OF [string:__t:50]
    set v:t:632:3 [ turbine::retrieve_string ${t:632} CACHED 1 ]
    set v:t:43 "${v:t:632:3}/${v:alias:sampleName}"
    set v:t:42 "${v:t:43}.recalibrated.bam"
    turbine::set_filename_val ${u:mergedbam} ${v:t:42}
    set v:t:50 "${v:t:43}.GATKCombineGVCF.raw.vcf"
    turbine::set_filename_val ${u:mergedvariant} ${v:t:50}
}


proc __entry-call_foreign-trace { t:240 } {
    # Var: $string v:t:240:1 VALUE_OF [string:__t:240]
    # Var: $void v:t:238 VALUE_OF [void:__t:238]
    set v:t:240:1 [ turbine::retrieve_string ${t:240} CACHED 1 ]
    turbine::trace_impl "########   QC rule1: duplication cutoff <= " ${v:t:240:1} "          ###############"
}


proc __entry-call_foreign-trace-1 { t:245 } {
    # Var: $string v:t:245 VALUE_OF [string:__t:245]
    # Var: $void v:t:243 VALUE_OF [void:__t:243]
    set v:t:245 [ turbine::retrieve_string ${t:245} CACHED 1 ]
    turbine::trace_impl "########   QC rule2: mapped_reads cutoff >= " ${v:t:245} "           ###############"
}


proc __entry-call_foreign-split { a:t:251 t:250 } {
    # Var: $string v:alias:t:251 VALUE_OF [string:__alias:t:251]
    # Var: $string$[int] v:t:250 VALUE_OF [string[int]:__t:250]
    set v:alias:t:251 [ turbine::retrieve_string ${a:t:251} CACHED 1 ]
    set v:t:250 [ turbine::split_impl ${v:alias:t:251} " " ]
    turbine::build_rec ${t:250} ${v:t:250} [ list container integer string ] 0 1
}


proc __entry-call_foreign-split-1 { a:t:254 t:253 } {
    # Var: $string v:alias:t:254 VALUE_OF [string:__alias:t:254]
    # Var: $string$[int] v:t:253 VALUE_OF [string[int]:__t:253]
    set v:alias:t:254 [ turbine::retrieve_string ${a:t:254} CACHED 1 ]
    set v:t:253 [ turbine::split_impl ${v:alias:t:254} " " ]
    turbine::build_rec ${t:253} ${v:t:253} [ list container integer string ] 0 1
}


proc __entry-call_foreign-split-2 { a:t:257 t:256 } {
    # Var: $string v:alias:t:257 VALUE_OF [string:__alias:t:257]
    # Var: $string$[int] v:t:256 VALUE_OF [string[int]:__t:256]
    set v:alias:t:257 [ turbine::retrieve_string ${a:t:257} CACHED 1 ]
    set v:t:256 [ turbine::split_impl ${v:alias:t:257} " " ]
    turbine::build_rec ${t:256} ${v:t:256} [ list container integer string ] 0 1
}


proc __entry-async_op-parse_float { a:tot_dups a:tot_reads t:240 t:245 t:263 t:268 v:alias:sampleName u:perc_mapped u:qcfile } {
    # Var: $string v:alias:tot_reads VALUE_OF [string:__alias:tot_reads]
    # Var: $float v:t:262 VALUE_OF [float:__t:262]
    set v:alias:tot_reads [ turbine::retrieve_string ${a:tot_reads} CACHED 1 ]
    set v:t:262 [ turbine::string2float_impl ${v:alias:tot_reads} ]
    turbine::rule [ list ${t:263} ] "__entry-async_op-div_float ${t:263} ${v:t:262} ${u:perc_mapped}"
    turbine::rule [ list ${a:tot_dups} ${t:268} ] [ list __entry-async_op-parse_float-1 ${a:tot_dups} ${t:240} ${t:245} ${t:268} ${v:alias:sampleName} ${v:t:262} ${u:perc_mapped} ${u:qcfile} ]
}


proc __entry-async_op-div_float { t:263 v:t:262 u:perc_mapped } {
    # Var: $float v:t:263:1 VALUE_OF [float:__t:263]
    # Var: $float v:perc_mapped VALUE_OF [float:perc_mapped]
    set v:t:263:1 [ turbine::retrieve_float ${t:263} CACHED 1 ]
    set v:perc_mapped [ expr { ${v:t:263:1} / ${v:t:262} } ]
    turbine::store_float ${u:perc_mapped} ${v:perc_mapped}
}


proc __entry-async_op-parse_float-1 { a:tot_dups t:240 t:245 t:268 v:alias:sampleName v:t:262 u:perc_mapped u:qcfile } {
    # Var: $string v:alias:tot_dups VALUE_OF [string:__alias:tot_dups]
    # Var: $float v:t:260 VALUE_OF [float:__t:260]
    # Var: $float v:t:259 VALUE_OF [float:__t:259]
    # Var: $float v:perc_dup VALUE_OF [float:perc_dup]
    # Var: $float v:t:268:1 VALUE_OF [float:__t:268]
    # Var: $boolean v:t:267 VALUE_OF [boolean:__t:267]
    set v:alias:tot_dups [ turbine::retrieve_string ${a:tot_dups} CACHED 1 ]
    set v:t:260 [ turbine::string2float_impl ${v:alias:tot_dups} ]
    set v:t:259 [ expr { ${v:t:260} * 100.0 } ]
    set v:perc_dup [ expr { ${v:t:259} / ${v:t:262} } ]
    set v:t:268:1 [ turbine::retrieve_float ${t:268} CACHED 1 ]
    set v:t:267 [ expr { ${v:perc_dup} < ${v:t:268:1} } ]
    if { ${v:t:267} } {
        # Var: $string v:t:276 VALUE_OF [string:__t:276]
        # Var: $string v:t:275 VALUE_OF [string:__t:275]
        # Var: $string v:t:274 VALUE_OF [string:__t:274]
        # Var: $string v:t:273 VALUE_OF [string:__t:273]
        turbine::read_refcount_incr ${t:240} 2
        turbine::file_read_refcount_incr ${u:qcfile} 1
        set v:t:276 "#####  ${v:alias:sampleName}"
        set v:t:275 "${v:t:276} passed first filter percent_duplicates with value"
        set v:t:274 "${v:t:275}${v:perc_dup}"
        set v:t:273 "${v:t:274}, maximum cutoff is "
        turbine::rule [ list ${t:245} ${u:perc_mapped} ] [ list __entry-async_op-parse_float-2 ${t:240} ${t:245} ${v:alias:sampleName} ${v:perc_dup} ${v:t:276} ${u:perc_mapped} ${u:qcfile} ]
        turbine::rule [ list ${t:240} ] [ list __entry-async_op-strcat-9 ${t:240} ${v:t:273} ]
    } else {
        # Var: string t:351 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():135:218
        # Var: $string v:t:345 VALUE_OF [string:__t:345]
        # Var: $string v:t:344 VALUE_OF [string:__t:344]
        # Var: $string v:t:358 VALUE_OF [string:__t:358]
        # Var: $string v:t:343 VALUE_OF [string:__t:343]
        # Var: $string v:t:342 VALUE_OF [string:__t:342]
        # Var: $string v:t:357 VALUE_OF [string:__t:357]
        # Var: $string v:t:356 VALUE_OF [string:__t:356]
        lassign [ adlb::multicreate [ list string 1 1 119 ] ] t:351
        turbine::c::log "allocated t:351=<${t:351}>"
        set v:t:345 "#####  ${v:alias:sampleName}"
        set v:t:344 "${v:t:345} DID NOT pass first filter percent_duplicates with value"
        set v:t:358 "${v:alias:sampleName}\tQCTEST\tFAIL\n\trule1 not ok: percent_duplication="
        f:echo ${u:qcfile} ${t:351} -100 "HARD" "RANK"
        set v:t:343 "${v:t:344}${v:perc_dup}"
        set v:t:342 "${v:t:343}, maximum cutoff is "
        set v:t:357 "${v:t:358}${v:perc_dup}"
        set v:t:356 "${v:t:357}<? duplication_cutoff="
        turbine::rule [ list ${t:240} ${t:245} ${u:perc_mapped} ] [ list __entry-optmerged-1 ${t:240} ${t:245} ${t:351} ${v:t:342} ${v:t:356} ${u:perc_mapped} ]
        turbine::read_refcount_decr ${t:351} 1
    }
    turbine::read_refcount_decr ${t:245} 1
    turbine::read_refcount_decr ${u:perc_mapped} 1
    turbine::file_read_refcount_decr ${u:qcfile} 1
    turbine::read_refcount_decr ${t:240} 1
}


proc __entry-async_op-parse_float-2 { t:240 t:245 v:alias:sampleName v:perc_dup v:t:276 u:perc_mapped u:qcfile } {
    # Var: $string v:t:245:1 VALUE_OF [string:__t:245]
    # Var: $float v:t:283 VALUE_OF [float:__t:283]
    # Var: $float v:perc_mapped:1 VALUE_OF [float:perc_mapped]
    # Var: $boolean v:t:282 VALUE_OF [boolean:__t:282]
    set v:t:245:1 [ turbine::retrieve_string ${t:245} CACHED 1 ]
    set v:t:283 [ turbine::string2float_impl ${v:t:245:1} ]
    set v:perc_mapped:1 [ turbine::retrieve_float ${u:perc_mapped} CACHED 1 ]
    set v:t:282 [ expr { ${v:perc_mapped:1} > ${v:t:283} } ]
    if { ${v:t:282} } {
        # Var: string t:297 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():128:205
        # Var: $string v:t:290 VALUE_OF [string:__t:290]
        # Var: $string v:t:304 VALUE_OF [string:__t:304]
        # Var: $string v:t:289 VALUE_OF [string:__t:289]
        # Var: $string v:t:288 VALUE_OF [string:__t:288]
        # Var: $string v:t:287 VALUE_OF [string:__t:287]
        # Var: $void v:t:286 VALUE_OF [void:__t:286]
        # Var: $string v:t:303 VALUE_OF [string:__t:303]
        # Var: $string v:t:302 VALUE_OF [string:__t:302]
        lassign [ adlb::multicreate [ list string 1 1 117 ] ] t:297
        turbine::c::log "allocated t:297=<${t:297}>"
        set v:t:290 "${v:t:276} passed second filter map_cutoff with value"
        set v:t:304 "${v:alias:sampleName}\tQCTEST\tPASS\n\trule1 ok: percent_duplication="
        f:echo ${u:qcfile} ${t:297} -100 "HARD" "RANK"
        set v:t:289 "${v:t:290}${v:perc_mapped:1}"
        set v:t:288 "${v:t:289}, minimum cutoff is "
        set v:t:287 "${v:t:288}${v:t:245:1}"
        turbine::trace_impl ${v:t:287}
        set v:t:303 "${v:t:304}${v:perc_dup}"
        set v:t:302 "${v:t:303}<? duplication_cutoff="
        turbine::rule [ list ${t:240} ] [ list __entry-async_op-strcat-7 ${t:240} ${t:297} ${v:perc_mapped:1} ${v:t:245:1} ${v:t:302} ]
        turbine::read_refcount_decr ${t:297} 1
    } else {
        # Var: string t:324 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():131:209
        # Var: $string v:t:317 VALUE_OF [string:__t:317]
        # Var: $string v:t:331 VALUE_OF [string:__t:331]
        # Var: $string v:t:316 VALUE_OF [string:__t:316]
        # Var: $string v:t:315 VALUE_OF [string:__t:315]
        # Var: $string v:t:314 VALUE_OF [string:__t:314]
        # Var: $void v:t:313 VALUE_OF [void:__t:313]
        # Var: $string v:t:330 VALUE_OF [string:__t:330]
        # Var: $string v:t:329 VALUE_OF [string:__t:329]
        lassign [ adlb::multicreate [ list string 1 1 118 ] ] t:324
        turbine::c::log "allocated t:324=<${t:324}>"
        set v:t:317 "${v:t:276} DID NOT pass second filter map_cutoff with value"
        set v:t:331 "${v:alias:sampleName}\tQCTEST\tFAIL\n\trule1 ok: percent_duplication="
        f:echo ${u:qcfile} ${t:324} -100 "HARD" "RANK"
        set v:t:316 "${v:t:317}${v:perc_mapped:1}"
        set v:t:315 "${v:t:316}, minimum cutoff is "
        set v:t:314 "${v:t:315}${v:t:245:1}"
        turbine::trace_impl ${v:t:314}
        set v:t:330 "${v:t:331}${v:perc_dup}"
        set v:t:329 "${v:t:330}<? duplication_cutoff="
        turbine::rule [ list ${t:240} ] [ list __entry-async_op-strcat-8 ${t:240} ${t:324} ${v:perc_mapped:1} ${v:t:245:1} ${v:t:329} ]
        turbine::read_refcount_decr ${t:324} 1
    }
    turbine::file_read_refcount_decr ${u:qcfile} 1
    turbine::read_refcount_decr ${t:240} 1
}


proc __entry-async_op-strcat-7 { t:240 t:297 v:perc_mapped:1 v:t:245:1 v:t:302 } {
    # Var: $string v:t:240:3 VALUE_OF [string:__t:240]
    # Var: $string v:t:301 VALUE_OF [string:__t:301]
    # Var: $string v:t:300 VALUE_OF [string:__t:300]
    # Var: $string v:t:299 VALUE_OF [string:__t:299]
    # Var: $string v:t:298 VALUE_OF [string:__t:298]
    # Var: $string v:t:297 VALUE_OF [string:__t:297]
    set v:t:240:3 [ turbine::retrieve_string ${t:240} CACHED 1 ]
    set v:t:301 "${v:t:302}${v:t:240:3}"
    set v:t:300 "${v:t:301}\n\trule2 ok: percent_mapped="
    set v:t:299 "${v:t:300}${v:perc_mapped:1}"
    set v:t:298 "${v:t:299}>? mapping_cutoff="
    set v:t:297 "${v:t:298}${v:t:245:1}"
    turbine::store_string ${t:297} ${v:t:297}
}


proc __entry-async_op-strcat-8 { t:240 t:324 v:perc_mapped:1 v:t:245:1 v:t:329 } {
    # Var: $string v:t:240:4 VALUE_OF [string:__t:240]
    # Var: $string v:t:328 VALUE_OF [string:__t:328]
    # Var: $string v:t:327 VALUE_OF [string:__t:327]
    # Var: $string v:t:326 VALUE_OF [string:__t:326]
    # Var: $string v:t:325 VALUE_OF [string:__t:325]
    # Var: $string v:t:324 VALUE_OF [string:__t:324]
    set v:t:240:4 [ turbine::retrieve_string ${t:240} CACHED 1 ]
    set v:t:328 "${v:t:329}${v:t:240:4}"
    set v:t:327 "${v:t:328}\n\trule2 not ok: percent_mapped="
    set v:t:326 "${v:t:327}${v:perc_mapped:1}"
    set v:t:325 "${v:t:326}>? mapping_cutoff="
    set v:t:324 "${v:t:325}${v:t:245:1}"
    turbine::store_string ${t:324} ${v:t:324}
}


proc __entry-async_op-strcat-9 { t:240 v:t:273 } {
    # Var: $string v:t:240:2 VALUE_OF [string:__t:240]
    # Var: $string v:t:272 VALUE_OF [string:__t:272]
    # Var: $void v:t:271 VALUE_OF [void:__t:271]
    set v:t:240:2 [ turbine::retrieve_string ${t:240} CACHED 1 ]
    set v:t:272 "${v:t:273}${v:t:240:2}"
    turbine::trace_impl ${v:t:272}
}


proc __entry-optmerged-1 { t:240 t:245 t:351 v:t:342 v:t:356 u:perc_mapped } {
    # Var: $string v:t:240:5 VALUE_OF [string:__t:240]
    # Var: $string v:t:341 VALUE_OF [string:__t:341]
    # Var: $void v:t:340 VALUE_OF [void:__t:340]
    # Var: $string v:t:355 VALUE_OF [string:__t:355]
    # Var: $string v:t:354 VALUE_OF [string:__t:354]
    # Var: $float v:perc_mapped:6 VALUE_OF [float:perc_mapped]
    # Var: $string v:t:353 VALUE_OF [string:__t:353]
    # Var: $string v:t:352 VALUE_OF [string:__t:352]
    # Var: $string v:t:245:6 VALUE_OF [string:__t:245]
    # Var: $string v:t:351 VALUE_OF [string:__t:351]
    set v:t:240:5 [ turbine::retrieve_string ${t:240} CACHED 1 ]
    set v:t:341 "${v:t:342}${v:t:240:5}"
    turbine::trace_impl ${v:t:341}
    set v:t:355 "${v:t:356}${v:t:240:5}"
    set v:t:354 "${v:t:355}\n\trule2 not evaluated: percent_mapped="
    set v:perc_mapped:6 [ turbine::retrieve_float ${u:perc_mapped} CACHED 1 ]
    set v:t:353 "${v:t:354}${v:perc_mapped:6}"
    set v:t:352 "${v:t:353}>? mapping_cutoff="
    set v:t:245:6 [ turbine::retrieve_string ${t:245} CACHED 1 ]
    set v:t:351 "${v:t:352}${v:t:245:6}"
    turbine::store_string ${t:351} ${v:t:351}
}


proc __entry-async_op-parse_float-3 { a:tot_mapped t:263 } {
    # Var: $string v:alias:tot_mapped VALUE_OF [string:__alias:tot_mapped]
    # Var: $float v:t:264 VALUE_OF [float:__t:264]
    # Var: $float v:t:263 VALUE_OF [float:__t:263]
    set v:alias:tot_mapped [ turbine::retrieve_string ${a:tot_mapped} CACHED 1 ]
    set v:t:264 [ turbine::string2float_impl ${v:alias:tot_mapped} ]
    set v:t:263 [ expr { ${v:t:264} * 100.0 } ]
    turbine::store_float ${t:263} ${v:t:263}
}


proc __entry-call_foreign-read-2 { t:33 t:595 t:632 v:sampleLines:1 u:chr_vcfList u:mergedvariant u:rawvariant u:samples_processing_done u:vars } {
    # Var: $file v:t:595 VALUE_OF [file:__t:595]
    # Var: $string v:t:594 VALUE_OF [string:__t:594]
    # Var: $int v:n:3 RENAMED [$int:__v:n]
    # Var: $string v:t:593 VALUE_OF [string:__t:593]
    # Var: $string v:o:3 RENAMED [$string:__v:o]
    # Var: $string$[int] v:chr_vcfList VALUE_OF [string[int]:chr_vcfList]
    # Var: string t:601 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():209:28
    # Var: string t:605 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():209:52
    # Var: string t:609 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():209:93
    # Var: string t:611 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():209:114
    # Var: string t:613 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():209:153
    # Var: string t:616 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():209:154
    # Var: $string$[int] v:variants RENAMED [$string$[int]:__v:variants] ./pipelinefunctions/merge_vcf.swift:CombineGVCFs():3:105
    lassign [ adlb::multicreate [ list string 1 1 120 ] [ list string 1 1 121 ] [ list string 1 1 122 ] [ list string 1 1 123 ] [ list string 1 1 124 ] [ list string 1 1 125 ] ] t:601 t:605 t:609 t:611 t:613 t:616
    turbine::c::log "allocated t:601=<${t:601}> t:605=<${t:605}> t:609=<${t:609}> t:611=<${t:611}> t:613=<${t:613}>"
    turbine::c::log "allocated t:616=<${t:616}>"
    set v:t:595 [ turbine::retrieve_file ${t:595} CACHED 1 ]
    set v:t:594 [ turbine::file_read_local ${v:t:595} ]
    set v:n:3 [ string length ${v:t:594} ]
    set v:t:593 [ turbine::replace_all_impl ${v:t:594} "\n" " " 0 ${v:n:3} ]
    set v:o:3 [ string trim ${v:t:593} ]
    set v:chr_vcfList [ turbine::split_impl ${v:o:3} " " ]
    turbine::build_rec ${u:chr_vcfList} ${v:chr_vcfList} [ list container integer string ] 0 1
    turbine::container_reference ${u:vars} "JAVADIR" ${t:601} string
    turbine::container_reference ${u:vars} "GATKDIR" ${t:605} string
    turbine::container_reference ${u:vars} "REFGENOMEDIR" ${t:609} string
    turbine::container_reference ${u:vars} "REFGENOME" ${t:611} string
    turbine::container_reference ${u:vars} "DBSNP" ${t:616} string
    set v:variants [ turbine::unpack_args ${u:chr_vcfList} 1 string ]
    turbine::rule [ list ${t:609} ${t:616} ] "__entry-optmerged-2 ${t:33} ${t:601} ${t:605} ${t:609} ${t:611} ${t:613} ${t:616} ${t:632} {${v:sampleLines:1}} {${v:variants}} {${u:mergedvariant}} {${u:rawvariant}} ${u:samples_processing_done}"
    turbine::read_refcount_decr ${u:chr_vcfList} 1
}


proc __entry-optmerged-2 { t:33 t:601 t:605 t:609 t:611 t:613 t:616 t:632 v:sampleLines:1 v:variants u:mergedvariant u:rawvariant u:samples_processing_done } {
    # Var: $string v:t:609 VALUE_OF [string:__t:609]
    # Var: $string v:t:616 VALUE_OF [string:__t:616]
    # Var: $string v:t:613 VALUE_OF [string:__t:613]
    set v:t:609 [ turbine::retrieve_string ${t:609} CACHED 1 ]
    set v:t:616 [ turbine::retrieve_string ${t:616} CACHED 1 ]
    set v:t:613 "${v:t:609}/${v:t:616}"
    turbine::store_string ${t:613} ${v:t:613}
    turbine::rule [ list ${t:33} ${t:601} ${t:605} ${t:611} ${t:613} ] [ list __entry-async_op-dircat-2 ${t:33} ${t:601} ${t:605} ${t:611} ${t:613} ${t:632} ${v:sampleLines:1} ${v:t:609} ${v:variants} ${u:mergedvariant} ${u:rawvariant} ${u:samples_processing_done} ]
}


proc __entry-async_op-dircat-2 { t:33 t:601 t:605 t:611 t:613 t:632 v:sampleLines:1 v:t:609 v:variants u:mergedvariant u:rawvariant u:samples_processing_done } {
    # Var: $string v:t:611 VALUE_OF [string:__t:611]
    # Var: $string v:t:608 VALUE_OF [string:__t:608]
    # Var: $string v:t:605 VALUE_OF [string:__t:605]
    # Var: $string v:t:604 VALUE_OF [string:__t:604]
    # Var: $string v:t:603 VALUE_OF [string:__t:603]
    # Var: $string v:javadir:6 RENAMED [$string:__v:javadir] ./pipelinefunctions/merge_vcf.swift:CombineGVCFs():3:105
    # Var: $string v:dbsnp:2 RENAMED [$string:__v:dbsnp] ./pipelinefunctions/merge_vcf.swift:CombineGVCFs():3:105
    # Var: $string v:__filename:outputfile:6 RENAMED [$string:__v:__filename:outputfile] ./pipelinefunctions/merge_vcf.swift:CombineGVCFs():3:105
    # Var: $file v:outputfile:6 RENAMED [$file:__v:outputfile] ./pipelinefunctions/merge_vcf.swift:CombineGVCFs():3:105
    set v:t:611 [ turbine::retrieve_string ${t:611} CACHED 1 ]
    set v:t:608 "${v:t:609}/${v:t:611}"
    set v:t:605 [ turbine::retrieve_string ${t:605} CACHED 1 ]
    set v:t:604 "${v:t:605}/GenomeAnalysisTK.jar"
    set v:t:603 "${v:t:604}"
    set v:javadir:6 [ turbine::retrieve_string ${t:601} CACHED 1 ]
    set v:dbsnp:2 [ turbine::retrieve_string ${t:613} CACHED 1 ]
    set v:__filename:outputfile:6 [ turbine::retrieve_string ${t:33} CACHED 1 ]
    set tcltmp:init_rc 2
    set v:outputfile:6 [ turbine::create_local_file_ref ${v:__filename:outputfile:6} ${tcltmp:init_rc} 1 ]
    turbine::c::log [ list exec: __v:javadir:6 "-Xmx8g" "-jar" ${v:t:603} "-T" "CombineGVCFs" "-R" ${v:t:608} "--dbsnp" ${v:dbsnp:2} {*}${v:variants} "-o" ${v:__filename:outputfile:6} [ dict create ] ]
    turbine::exec_external ${v:javadir:6} [ dict create ] "-Xmx8g" "-jar" ${v:t:603} "-T" "CombineGVCFs" "-R" ${v:t:608} "--dbsnp" ${v:dbsnp:2} {*}${v:variants} "-o" ${v:__filename:outputfile:6}
    turbine::store_file ${u:rawvariant} v:outputfile:6 0
    turbine::rule [ list ] "__entry-chain13 ${t:632} {${v:sampleLines:1}} {${u:mergedvariant}} {${u:rawvariant}} ${u:samples_processing_done}"
    turbine::decr_local_file_refcount v:outputfile:6
}


proc __entry-chain13 { t:632 v:sampleLines:1 u:mergedvariant u:rawvariant u:samples_processing_done } {
    f:cp ${u:mergedvariant} ${u:rawvariant} -100 "HARD" "RANK"
    turbine::rule [ list [ turbine::get_file_td ${u:mergedvariant} ] ] "__entry-chain14 ${t:632} {${v:sampleLines:1}} {${u:mergedvariant}} ${u:samples_processing_done}"
    turbine::file_read_refcount_decr ${u:rawvariant} 1
}


proc __entry-chain14 { t:632 v:sampleLines:1 u:mergedvariant u:samples_processing_done } {
    # Var: *rw(file)[int] t:621 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():211:32
    # Var: string t:622 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():211:37
    # Var: $int v:t:619 VALUE_OF [int:__t:619]
    lassign [ adlb::multicreate [ list container integer file_ref 1 1 126 ] [ list string 1 1 127 ] ] t:621 t:622
    turbine::c::log "allocated t:621=<${t:621}> t:622=<${t:622}>"
    set v:t:619 [ dict size ${v:sampleLines:1} ]
    turbine::glob [ list ${t:621} ] [ list ${t:622} ]
    turbine::rule [ list ${t:632} ] "__entry-async_op-strcat-10 ${t:622} ${t:632}"
    turbine::rule [ list ${t:621} ] "__entry-call_foreign-size ${t:621} ${v:t:619} ${u:samples_processing_done}"
    turbine::file_read_refcount_decr ${u:mergedvariant} 1
}


proc __entry-async_op-strcat-10 { t:622 t:632 } {
    # Var: $string v:t:632:4 VALUE_OF [string:__t:632]
    # Var: $string v:t:622 VALUE_OF [string:__t:622]
    set v:t:632:4 [ turbine::retrieve_string ${t:632} CACHED 1 ]
    set v:t:622 "${v:t:632:4}/*.GATKCombineGVCF.raw.vcf"
    turbine::store_string ${t:622} ${v:t:622}
}


proc __entry-call_foreign-size { t:621 v:t:619 u:samples_processing_done } {
    # Var: file$[int] v:t:621 VALUE_OF [*rw(file)[int]:__t:621]
    # Var: $int v:t:620 VALUE_OF [int:__t:620]
    # Var: $boolean v:t:618 VALUE_OF [boolean:__t:618]
    set v:t:621 [ adlb::enumerate ${t:621} dict all 0 0 ]
    set v:t:620 [ dict size ${v:t:621} ]
    set v:t:618 [ expr { ${v:t:619} == ${v:t:620} } ]
    if { ${v:t:618} } {
        turbine::store_integer ${u:samples_processing_done} 1
    }
    turbine::read_refcount_decr ${t:621} 1
}


proc __entry-optmerged-3 { u:RealignDir u:VarcallDir t:248 t:26 t:31 t:33 t:633 t:70 v:alias:sampleName u:chromosomes_processing_done u:dedupsortedbam u:flagstats u:indices u:outbam u:rawvariant u:stat u:vars } {
    # Var: $string v:t:633:2 VALUE_OF [string:__t:633]
    # Var: $string v:t:17 VALUE_OF [string:__t:17]
    # Var: $string v:t:26 VALUE_OF [string:__t:26]
    # Var: $string v:t:58 VALUE_OF [string:__t:58]
    # Var: $string v:RealignDir VALUE_OF [string:RealignDir]
    # Var: $string v:t:31 VALUE_OF [string:__t:31]
    # Var: $string v:VarcallDir VALUE_OF [string:VarcallDir]
    # Var: $string v:t:33 VALUE_OF [string:__t:33]
    set v:t:633:2 [ turbine::retrieve_string ${t:633} CACHED 1 ]
    set v:t:17 "${v:t:633:2}/${v:alias:sampleName}"
    set v:t:26 "${v:t:633:2}/align/${v:alias:sampleName}.wdups.sorted.bam"
    turbine::store_string ${t:26} ${v:t:26}
    set v:t:58 "${v:t:633:2}/align/${v:alias:sampleName}.wdups.sorted.bam.flagstats"
    set v:RealignDir "${v:t:17}/realign/"
    turbine::store_string ${u:RealignDir} ${v:RealignDir}
    set v:t:31 "${v:RealignDir}${v:alias:sampleName}.recalibrated.bam"
    turbine::store_string ${t:31} ${v:t:31}
    turbine::set_filename_val ${u:outbam} ${v:t:31}
    set v:VarcallDir "${v:t:17}/variant/"
    turbine::store_string ${u:VarcallDir} ${v:VarcallDir}
    set v:t:33 "${v:VarcallDir}${v:alias:sampleName}.GATKCombineGVCF.raw.vcf"
    turbine::store_string ${t:33} ${v:t:33}
    turbine::set_filename_val ${u:rawvariant} ${v:t:33}
    turbine::set_filename_val ${u:dedupsortedbam} ${v:t:26}
    turbine::set_filename_val ${u:flagstats} ${v:t:58}
    set tcltmp:prio [ turbine::get_priority ]
    turbine::set_priority ${tcltmp:prio}
    adlb::spawn 0 [ list mkdir-app-leaf1 ${v:VarcallDir} ]
    turbine::reset_priority
    turbine::rule [ list [ turbine::get_file_td ${u:dedupsortedbam} ] ] [ list __entry-optmerged-4 ${t:248} ${t:70} ${v:RealignDir} ${v:VarcallDir} ${v:alias:sampleName} ${v:t:26} ${v:t:58} ${u:chromosomes_processing_done} ${u:dedupsortedbam} ${u:flagstats} ${u:indices} ${u:stat} ${u:vars} ]
}


proc mkdir-app-leaf1 { v:VarcallDir } {
    # Var: $void v:v RENAMED [$void:__v:v] /usr/local/src/swift-t-0.9.1/turbine/export/unix.swift:mkdir():65:15
    turbine::c::log [ list exec: "mkdir" "-p" ${v:VarcallDir} [ dict create ] ]
    turbine::exec_external "mkdir" [ dict create ] "-p" ${v:VarcallDir}
}


proc __entry-optmerged-4 { t:248 t:70 v:RealignDir v:VarcallDir v:alias:sampleName v:t:26 v:t:58 u:chromosomes_processing_done u:dedupsortedbam u:flagstats u:indices u:stat u:vars } {
    # Var: $string v:t:376 VALUE_OF [string:__t:376]
    # Var: $string v:t:413 VALUE_OF [string:__t:413]
    # Var: string t:421 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():166:85
    # Var: string t:428 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():170:35
    # Var: string t:430 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():170:56
    # Var: string t:464 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():179:39
    # Var: string t:468 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():179:63
    # Var: string t:474 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():179:125
    # Var: string t:509 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():182:223
    # Var: $string v:t:530 VALUE_OF [string:__t:530]
    # Var: $string v:t:375 VALUE_OF [string:__t:375]
    # Var: $string v:t:529 VALUE_OF [string:__t:529]
    lassign [ adlb::multicreate [ list string 1 1 128 ] [ list string 1 1 129 ] [ list string 1 1 130 ] [ list string 1 1 131 ] [ list string 1 1 132 ] [ list string 1 1 133 ] [ list string 1 1 134 ] ] t:421 t:428 t:430 t:464 t:468 t:474 t:509
    turbine::c::log "allocated t:421=<${t:421}> t:428=<${t:428}> t:430=<${t:430}> t:464=<${t:464}> t:468=<${t:468}>"
    turbine::c::log "allocated t:474=<${t:474}> t:509=<${t:509}>"
    set v:t:376 "####   Realign-Vcall script for SAMPLE ${v:alias:sampleName}"
    set v:t:413 "#######   REALIGN-RECALIBRATION BLOCK STARTS HERE   ${v:alias:sampleName}"
    turbine::container_reference ${u:vars} "PBSCORES" ${t:421} string
    turbine::container_reference ${u:vars} "REFGENOMEDIR" ${t:428} string
    turbine::container_reference ${u:vars} "INDELDIR" ${t:430} string
    turbine::container_reference ${u:vars} "JAVADIR" ${t:464} string
    turbine::container_reference ${u:vars} "GATKDIR" ${t:468} string
    turbine::container_reference ${u:vars} "REFGENOME" ${t:474} string
    turbine::container_reference ${u:vars} "DBSNP" ${t:509} string
    set v:t:530 "#############    GATK VARIANT CALLING   FOR SAMPLE ${v:alias:sampleName}"
    set v:t:375 "${v:t:376} chr="
    set v:t:529 "${v:t:530} : "
    turbine::rule [ list ${u:indices} ] [ list __entry-explicit-wait2 ${t:248} ${t:421} ${t:428} ${t:430} ${t:464} ${t:468} ${t:474} ${t:509} ${t:70} ${v:RealignDir} ${v:VarcallDir} ${v:alias:sampleName} ${v:t:375} ${v:t:413} ${v:t:529} ${u:chromosomes_processing_done} ${u:dedupsortedbam} ${u:indices} ]
    turbine::rule [ list ${t:248} ] [ list samtools_flagstat-app-leaf1 ${t:248} ${v:t:26} ${v:t:58} ${u:dedupsortedbam} ${u:flagstats} ${u:stat} ]
}


proc __entry-explicit-wait2 { t:248 t:421 t:428 t:430 t:464 t:468 t:474 t:509 t:70 v:RealignDir v:VarcallDir v:alias:sampleName v:t:375 v:t:413 v:t:529 u:chromosomes_processing_done u:dedupsortedbam u:indices } {
    # Var: int t:420 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():166:74
    # Var: string t:471 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():179:124
    # Var: string t:506 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():182:222
    # Var: string t:426 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():170:28
    # Var: string t:466 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():179:56
    lassign [ adlb::multicreate [ list integer 1 1 135 ] [ list string 1 1 136 ] [ list string 1 1 137 ] [ list string 1 1 138 ] [ list string 1 1 139 ] ] t:420 t:471 t:506 t:426 t:466
    turbine::c::log "allocated t:420=<${t:420}> t:471=<${t:471}> t:506=<${t:506}> t:426=<${t:426}> t:466=<${t:466}>"
    set tcltmp:container_sz [ adlb::enumerate ${u:indices} count all 0 ]
    set tcltmp:iters ${tcltmp:container_sz}
    turbine::read_refcount_incr ${t:471} [ expr { ${tcltmp:iters} - 1 } ]
    turbine::read_refcount_incr ${u:indices} [ expr { ${tcltmp:iters} - 1 } ]
    turbine::read_refcount_incr ${t:70} [ expr { ${tcltmp:iters} - 1 } ]
    turbine::read_refcount_incr ${t:466} [ expr { ${tcltmp:iters} - 1 } ]
    turbine::file_read_refcount_incr ${u:dedupsortedbam} [ expr { ${tcltmp:iters} - 1 } ]
    turbine::read_refcount_incr ${t:420} [ expr { ${tcltmp:iters} - 1 } ]
    turbine::read_refcount_incr ${t:464} [ expr { ${tcltmp:iters} - 1 } ]
    turbine::read_refcount_incr ${t:426} [ expr { ${tcltmp:iters} - 1 } ]
    turbine::read_refcount_incr ${t:248} [ expr { ${tcltmp:iters} - 1 } ]
    turbine::read_refcount_incr ${t:506} [ expr { ${tcltmp:iters} - 1 } ]
    __entry-foreach2:outer ${t:248} ${t:420} ${t:426} ${t:464} ${t:466} ${t:471} ${t:506} ${t:70} ${v:RealignDir} ${v:VarcallDir} ${v:alias:sampleName} ${v:t:375} ${v:t:413} ${v:t:529} ${u:chromosomes_processing_done} ${u:dedupsortedbam} ${u:indices} 0 [ expr { ${tcltmp:container_sz} - 1 } ] 1
    turbine::rule [ list ${t:421} ] "__entry-async_op-parse_int-6 ${t:420} ${t:421}"
    turbine::rule [ list ${t:468} ] "__entry-async_op-dircat-3 ${t:466} ${t:468}"
    turbine::rule [ list ${t:428} ] "__entry-optmerged-6 ${t:426} ${t:428} ${t:430} ${t:471} ${t:474} ${t:506} ${t:509}"
}


proc __entry-foreach2:outer { t:248 t:420 t:426 t:464 t:466 t:471 t:506 t:70 v:RealignDir v:VarcallDir v:alias:sampleName v:t:375 v:t:413 v:t:529 u:chromosomes_processing_done u:dedupsortedbam u:indices tcltmp:lo tcltmp:hi tcltmp:inc } {
    if { [ expr { ${tcltmp:lo} > ${tcltmp:hi} } ] } {
        return
    }
    while {1} {
        set tcltmp:itersleft [ expr { max(0,(${tcltmp:hi} - ${tcltmp:lo}) / ${tcltmp:inc} + 1) } ]
        if { [ expr { ${tcltmp:itersleft} <= 64 } ] } {
            __entry-foreach2:inner ${t:248} ${t:420} ${t:426} ${t:464} ${t:466} ${t:471} ${t:506} ${t:70} ${v:RealignDir} ${v:VarcallDir} ${v:alias:sampleName} ${v:t:375} ${v:t:413} ${v:t:529} ${u:chromosomes_processing_done} ${u:dedupsortedbam} ${u:indices} ${tcltmp:lo} ${tcltmp:hi} ${tcltmp:inc}
            return
        } else {
            set tcltmp:skip [ expr { ${tcltmp:inc} * max(64,((${tcltmp:itersleft} - 1) / 16) + 1) } ]
            for { set tcltmp:splitstart [ expr { ${tcltmp:lo} + ${tcltmp:skip} } ] } { ${tcltmp:splitstart} <= ${tcltmp:hi} } { incr tcltmp:splitstart ${tcltmp:skip} } {
                set tcltmp:splitend [ expr { min(${tcltmp:hi},${tcltmp:splitstart} + ${tcltmp:skip} - 1) } ]
                set tcltmp:prio [ turbine::get_priority ]
                turbine::set_priority ${tcltmp:prio}
                adlb::spawn 0 [ list __entry-foreach2:outer ${t:248} ${t:420} ${t:426} ${t:464} ${t:466} ${t:471} ${t:506} ${t:70} ${v:RealignDir} ${v:VarcallDir} ${v:alias:sampleName} ${v:t:375} ${v:t:413} ${v:t:529} ${u:chromosomes_processing_done} ${u:dedupsortedbam} ${u:indices} ${tcltmp:splitstart} ${tcltmp:splitend} ${tcltmp:inc} ]
                turbine::reset_priority
            }
            set tcltmp:hi [ expr { ${tcltmp:lo} + ${tcltmp:skip} - 1 } ]
        }
    }
}


proc __entry-foreach2:inner { t:248 t:420 t:426 t:464 t:466 t:471 t:506 t:70 v:RealignDir v:VarcallDir v:alias:sampleName v:t:375 v:t:413 v:t:529 u:chromosomes_processing_done u:dedupsortedbam u:indices tcltmp:lo tcltmp:hi tcltmp:inc } {
    set tcltmp:splitlen [ expr { ${tcltmp:hi} - ${tcltmp:lo} + 1 } ]
    set tcltmp:contents [ adlb::enumerate ${u:indices} members ${tcltmp:splitlen} ${tcltmp:lo} ]
    foreach v:chr ${tcltmp:contents} {
        # Var: string c:s_sknownSite OPT_TEMPORARY
        global c:s_sknownSite
        # Var: string c:s_sknown_g OPT_TEMPORARY
        global c:s_sknown_g
        # Var: file u:chrdedupsortedbam VCcallingPipeline.swift:__entry():153:68
        # Var: file u:realignedbam VCcallingPipeline.swift:__entry():154:63
        # Var: file u:recalibratedbam VCcallingPipeline.swift:__entry():155:66
        # Var: file u:intervals VCcallingPipeline.swift:__entry():156:61
        # Var: file u:recalreport VCcallingPipeline.swift:__entry():157:63
        # Var: file u:gvcfvariant VCcallingPipeline.swift:__entry():158:62
        # Var: file u:recalfiles VCcallingPipeline.swift:__entry():160:65
        # Var: file u:realfiles VCcallingPipeline.swift:__entry():161:64
        # Var: int u:ploidy VCcallingPipeline.swift:__entry():164:3
        # Var: string t:423 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():166:104
        # Var: string t:433 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():170:80
        # Var: string[int] u:recalparmsindels VCcallingPipeline.swift:__entry():171:3
        # Var: file t:439 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():171:59
        # Var: string[int] u:realparms VCcallingPipeline.swift:__entry():174:3
        # Var: file t:458 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():174:52
        # Var: $string v:t:374 VALUE_OF [string:__t:374]
        # Var: $string v:t:373 VALUE_OF [string:__t:373]
        # Var: $void v:t:372 VALUE_OF [void:__t:372]
        # Var: $string v:t:412 VALUE_OF [string:__t:412]
        # Var: $string v:t:411 VALUE_OF [string:__t:411]
        # Var: $void v:t:410 VALUE_OF [void:__t:410]
        # Var: $boolean v:t:416 VALUE_OF [boolean:__t:416]
        # Var: $string v:t:423 VALUE_OF [string:__t:423]
        # Var: $string v:t:433 VALUE_OF [string:__t:433]
        # Var: $string v:t:528 VALUE_OF [string:__t:528]
        # Var: $string v:t:527 VALUE_OF [string:__t:527]
        # Var: $void v:t:526 VALUE_OF [void:__t:526]
        # Var: $string v:t:395 VALUE_OF [string:__t:395]
        # Var: $string v:t:380 VALUE_OF [string:__t:380]
        # Var: $string v:t:383 VALUE_OF [string:__t:383]
        # Var: $string v:t:386 VALUE_OF [string:__t:386]
        # Var: $string v:t:389 VALUE_OF [string:__t:389]
        # Var: $string v:t:392 VALUE_OF [string:__t:392]
        lassign [ adlb::multicreate [ list integer 1 1 148 ] [ list string 1 1 149 ] [ list string 1 1 150 ] [ list container integer string 1 1 151 ] [ list container integer string 1 1 153 ] ] u:ploidy t:423 t:433 u:recalparmsindels u:realparms
        turbine::c::log "allocated u:ploidy=<${u:ploidy}> t:423=<${t:423}> t:433=<${t:433}> u:recalparmsindels=<${u:recalparmsindels}> u:realparms=<${u:realparms}>"
        lassign [ turbine::make_file_tds [ adlb::multicreate [ list file 2 1 140 ] [ list file 1 1 141 ] [ list file 1 1 142 ] [ list file 1 1 143 ] [ list file 1 1 144 ] [ list file 0 1 145 ] [ list file 1 1 146 ] [ list file 1 1 147 ] [ list file 1 1 152 ] [ list file 1 1 154 ] ] [ list 1 1 1 1 1 1 1 1 0 0 ] ] u:chrdedupsortedbam u:realignedbam u:recalibratedbam u:intervals u:recalreport u:gvcfvariant u:recalfiles u:realfiles t:439 t:458
        set v:t:374 "${v:t:375}${v:chr}"
        set v:t:373 "${v:t:374}                             #######"
        turbine::trace_impl ${v:t:373}
        set v:t:412 "${v:t:413}${v:chr}"
        set v:t:411 "${v:t:412}        ######"
        turbine::trace_impl ${v:t:411}
        set v:t:416 [ string equal ${v:chr} "M" ]
        set v:t:423 "${v:chr}"
        turbine::store_string ${t:423} ${v:t:423}
        f:samtools_view ${u:chrdedupsortedbam} ${t:248} ${u:dedupsortedbam} ${t:420} ${t:423} -100 "HARD" "RANK"
        set v:t:433 "*${v:chr}.vcf"
        turbine::store_string ${t:433} ${v:t:433}
        f:find_files ${u:recalfiles} ${t:426} ${t:433} -100 "HARD" "RANK"
        f:sed ${t:439} ${u:recalfiles} ${c:s_sknownSite} -100 "HARD" "RANK"
        f:find_files ${u:realfiles} ${t:426} ${t:433} -100 "HARD" "RANK"
        f:sed ${t:458} ${u:recalfiles} ${c:s_sknown_g} -100 "HARD" "RANK"
        set v:t:528 "${v:t:529}${v:chr}"
        set v:t:527 "${v:t:528}   ###########"
        turbine::trace_impl ${v:t:527}
        if { ${v:t:416} } {
            turbine::store_integer ${u:ploidy} 1
        } else {
            turbine::store_integer ${u:ploidy} 2
        }
        set v:t:395 "${v:VarcallDir}${v:alias:sampleName}.${v:chr}.raw.g.vcf"
        turbine::set_filename_val ${u:gvcfvariant} ${v:t:395}
        set v:t:380 "${v:RealignDir}${v:alias:sampleName}.${v:chr}.wdups.sorted.bam"
        set v:t:383 "${v:RealignDir}${v:alias:sampleName}.${v:chr}.realigned.bam"
        set v:t:386 "${v:RealignDir}${v:alias:sampleName}.${v:chr}.recalibrated.bam"
        set v:t:389 "${v:RealignDir}${v:alias:sampleName}.${v:chr}.realignTargetCreator.intervals"
        set v:t:392 "${v:RealignDir}${v:alias:sampleName}.${v:chr}.recal_report.grp"
        turbine::set_filename_val ${u:chrdedupsortedbam} ${v:t:380}
        turbine::set_filename_val ${u:realignedbam} ${v:t:383}
        turbine::set_filename_val ${u:recalibratedbam} ${v:t:386}
        turbine::set_filename_val ${u:intervals} ${v:t:389}
        turbine::set_filename_val ${u:recalreport} ${v:t:392}
        turbine::rule [ list [ turbine::get_file_td ${t:439} ] ] "__entry-call_foreign-read-3 {${t:439}} ${u:recalparmsindels}"
        turbine::rule [ list [ turbine::get_file_td ${t:458} ] ] [ list __entry-call_foreign-read-4 ${t:420} ${t:458} ${t:464} ${t:466} ${t:471} ${t:506} ${v:VarcallDir} ${v:alias:sampleName} ${v:chr} ${v:t:380} ${v:t:383} ${v:t:386} ${v:t:389} ${v:t:392} ${v:t:395} ${u:chrdedupsortedbam} ${u:chromosomes_processing_done} ${u:gvcfvariant} ${u:indices} ${u:intervals} ${u:ploidy} ${u:realignedbam} ${u:realparms} ${u:recalibratedbam} ${u:recalparmsindels} ${u:recalreport} ]
        turbine::rule [ list ${t:70} ] [ list __entry-optmerged-5 ${t:70} ${v:chr} ${u:realfiles} ${u:recalfiles} ]
        turbine::rule [ list ${t:248} [ turbine::get_file_td ${u:chrdedupsortedbam} ] ] [ list samtools_index-app-leaf1 ${t:248} ${v:t:380} ${u:chrdedupsortedbam} ]
        turbine::read_refcount_decr ${t:433} 1
        turbine::file_read_refcount_decr ${u:realfiles} 1
        turbine::file_read_refcount_decr ${u:recalfiles} 1
        turbine::read_refcount_decr ${t:423} 1
    }
    set tcltmp:iters [ expr { max(0,(${tcltmp:hi} - ${tcltmp:lo}) / ${tcltmp:inc} + 1) } ]
    turbine::file_read_refcount_decr ${u:dedupsortedbam} [ expr { ${tcltmp:iters} } ]
    turbine::read_refcount_decr ${t:426} [ expr { ${tcltmp:iters} } ]
}


proc __entry-call_foreign-read-3 { t:439 u:recalparmsindels } {
    # Var: $file v:t:439 VALUE_OF [file:__t:439]
    # Var: $string v:t:438 VALUE_OF [string:__t:438]
    # Var: $int v:n RENAMED [$int:__v:n]
    # Var: $string v:t:437 VALUE_OF [string:__t:437]
    # Var: $string v:o RENAMED [$string:__v:o]
    # Var: $string$[int] v:recalparmsindels VALUE_OF [string[int]:recalparmsindels]
    set v:t:439 [ turbine::retrieve_file ${t:439} CACHED 1 ]
    set v:t:438 [ turbine::file_read_local ${v:t:439} ]
    set v:n [ string length ${v:t:438} ]
    set v:t:437 [ turbine::replace_all_impl ${v:t:438} "\n" " " 0 ${v:n} ]
    set v:o [ string trim ${v:t:437} ]
    set v:recalparmsindels [ turbine::split_impl ${v:o} " " ]
    turbine::build_rec ${u:recalparmsindels} ${v:recalparmsindels} [ list container integer string ] 0 1
}


proc __entry-call_foreign-read-4 { t:420 t:458 t:464 t:466 t:471 t:506 v:VarcallDir v:alias:sampleName v:chr v:t:380 v:t:383 v:t:386 v:t:389 v:t:392 v:t:395 u:chrdedupsortedbam u:chromosomes_processing_done u:gvcfvariant u:indices u:intervals u:ploidy u:realignedbam u:realparms u:recalibratedbam u:recalparmsindels u:recalreport } {
    # Var: $file v:t:458 VALUE_OF [file:__t:458]
    # Var: $string v:t:457 VALUE_OF [string:__t:457]
    # Var: $int v:n:1 RENAMED [$int:__v:n]
    # Var: $string v:t:456 VALUE_OF [string:__t:456]
    # Var: $string v:o:1 RENAMED [$string:__v:o]
    # Var: $string$[int] v:realparms VALUE_OF [string[int]:realparms]
    set v:t:458 [ turbine::retrieve_file ${t:458} CACHED 1 ]
    set v:t:457 [ turbine::file_read_local ${v:t:458} ]
    set v:n:1 [ string length ${v:t:457} ]
    set v:t:456 [ turbine::replace_all_impl ${v:t:457} "\n" " " 0 ${v:n:1} ]
    set v:o:1 [ string trim ${v:t:456} ]
    set v:realparms [ turbine::split_impl ${v:o:1} " " ]
    turbine::build_rec ${u:realparms} ${v:realparms} [ list container integer string ] 0 1
    turbine::rule [ list ${t:420} ${t:464} ${t:466} ${t:471} [ turbine::get_file_td ${u:chrdedupsortedbam} ] ] [ list RealignerTargetCreator-app-leaf1 ${t:420} ${t:464} ${t:466} ${t:471} ${t:506} ${v:VarcallDir} ${v:alias:sampleName} ${v:chr} ${v:t:380} ${v:t:383} ${v:t:386} ${v:t:389} ${v:t:392} ${v:t:395} ${u:chrdedupsortedbam} ${u:chromosomes_processing_done} ${u:gvcfvariant} ${u:indices} ${u:intervals} ${u:ploidy} ${u:realignedbam} ${u:realparms} ${u:recalibratedbam} ${u:recalparmsindels} ${u:recalreport} ]
}


proc RealignerTargetCreator-app-leaf1 { t:420 t:464 t:466 t:471 t:506 v:VarcallDir v:alias:sampleName v:chr v:t:380 v:t:383 v:t:386 v:t:389 v:t:392 v:t:395 u:chrdedupsortedbam u:chromosomes_processing_done u:gvcfvariant u:indices u:intervals u:ploidy u:realignedbam u:realparms u:recalibratedbam u:recalparmsindels u:recalreport } {
    # Var: $string v:javadir:1 RENAMED [$string:__v:javadir] ./pipelinefunctions/realign_varcall_by_chr.swift:RealignerTargetCreator():12:121
    # Var: $string v:gatkdir RENAMED [$string:__v:gatkdir] ./pipelinefunctions/realign_varcall_by_chr.swift:RealignerTargetCreator():12:121
    # Var: $string v:reference RENAMED [$string:__v:reference] ./pipelinefunctions/realign_varcall_by_chr.swift:RealignerTargetCreator():12:121
    # Var: $string$[int] v:known RENAMED [$string$[int]:__v:known] ./pipelinefunctions/realign_varcall_by_chr.swift:RealignerTargetCreator():12:121
    # Var: $int v:thr RENAMED [$int:__v:thr] ./pipelinefunctions/realign_varcall_by_chr.swift:RealignerTargetCreator():12:121
    # Var: $file v:inputFile:2 RENAMED [$file:__v:inputFile] ./pipelinefunctions/realign_varcall_by_chr.swift:RealignerTargetCreator():12:121
    # Var: $file v:outputfile:1 RENAMED [$file:__v:outputfile] ./pipelinefunctions/realign_varcall_by_chr.swift:RealignerTargetCreator():12:121
    set v:javadir:1 [ turbine::retrieve_string ${t:464} CACHED 1 ]
    set v:gatkdir [ turbine::retrieve_string ${t:466} CACHED 1 ]
    set v:reference [ turbine::retrieve_string ${t:471} CACHED 1 ]
    set v:known [ turbine::unpack_args ${u:realparms} 1 string ]
    set v:thr [ turbine::retrieve_integer ${t:420} CACHED 1 ]
    set v:inputFile:2 [ turbine::retrieve_file ${u:chrdedupsortedbam} ]
    set tcltmp:init_rc 2
    set v:outputfile:1 [ turbine::create_local_file_ref ${v:t:389} ${tcltmp:init_rc} 1 ]
    turbine::c::log [ list exec: __v:javadir:1 "-Xmx8g" "-jar" ${v:gatkdir} "-T" "RealignerTargetCreator" "-R" ${v:reference} "-I" ${v:t:380} {*}${v:known} "-nt" ${v:thr} "-o" ${v:t:389} [ dict create ] ]
    turbine::exec_external ${v:javadir:1} [ dict create ] "-Xmx8g" "-jar" ${v:gatkdir} "-T" "RealignerTargetCreator" "-R" ${v:reference} "-I" ${v:t:380} {*}${v:known} "-nt" ${v:thr} "-o" ${v:t:389}
    turbine::store_file ${u:intervals} v:outputfile:1 0
    set tcltmp:prio [ turbine::get_priority ]
    turbine::set_priority ${tcltmp:prio}
    adlb::spawn 0 [ list IndelRealigner-app-leaf1 ${t:506} ${v:VarcallDir} ${v:alias:sampleName} ${v:chr} ${v:gatkdir} ${v:javadir:1} ${v:known} ${v:reference} ${v:t:380} ${v:t:383} ${v:t:386} ${v:t:389} ${v:t:392} ${v:t:395} ${v:thr} ${u:chrdedupsortedbam} ${u:chromosomes_processing_done} ${u:gvcfvariant} ${u:indices} ${u:intervals} ${u:ploidy} ${u:realignedbam} ${u:recalibratedbam} ${u:recalparmsindels} ${u:recalreport} ]
    turbine::reset_priority
    turbine::decr_local_file_refcount v:outputfile:1
    turbine::read_refcount_decr ${u:realparms} 1
}


proc IndelRealigner-app-leaf1 { t:506 v:VarcallDir v:alias:sampleName v:chr v:gatkdir v:javadir:1 v:known v:reference v:t:380 v:t:383 v:t:386 v:t:389 v:t:392 v:t:395 v:thr u:chrdedupsortedbam u:chromosomes_processing_done u:gvcfvariant u:indices u:intervals u:ploidy u:realignedbam u:recalibratedbam u:recalparmsindels u:recalreport } {
    # Var: $file v:inputFile:3 RENAMED [$file:__v:inputFile] ./pipelinefunctions/realign_varcall_by_chr.swift:IndelRealigner():17:133
    # Var: $file v:intervals RENAMED [$file:__v:intervals] ./pipelinefunctions/realign_varcall_by_chr.swift:IndelRealigner():17:133
    # Var: $file v:outputfile:2 RENAMED [$file:__v:outputfile] ./pipelinefunctions/realign_varcall_by_chr.swift:IndelRealigner():17:133
    set v:inputFile:3 [ turbine::retrieve_file ${u:chrdedupsortedbam} CACHED 1 ]
    set v:intervals [ turbine::retrieve_file ${u:intervals} CACHED 1 ]
    set tcltmp:init_rc 2
    set v:outputfile:2 [ turbine::create_local_file_ref ${v:t:383} ${tcltmp:init_rc} 1 ]
    turbine::c::log [ list exec: __v:javadir:1 "-Xmx8g" "-jar" ${v:gatkdir} "-T" "IndelRealigner" "-R" ${v:reference} "-I" ${v:t:380} {*}${v:known} "--targetIntervals" ${v:t:389} "-o" ${v:t:383} [ dict create ] ]
    turbine::exec_external ${v:javadir:1} [ dict create ] "-Xmx8g" "-jar" ${v:gatkdir} "-T" "IndelRealigner" "-R" ${v:reference} "-I" ${v:t:380} {*}${v:known} "--targetIntervals" ${v:t:389} "-o" ${v:t:383}
    turbine::store_file ${u:realignedbam} v:outputfile:2 0
    turbine::rule [ list ${t:506} ${u:recalparmsindels} ] [ list BaseRecalibrator-app-leaf1 ${t:506} ${v:VarcallDir} ${v:alias:sampleName} ${v:chr} ${v:gatkdir} ${v:javadir:1} ${v:reference} ${v:t:383} ${v:t:386} ${v:t:392} ${v:t:395} ${v:thr} ${u:chromosomes_processing_done} ${u:gvcfvariant} ${u:indices} ${u:ploidy} ${u:realignedbam} ${u:recalibratedbam} ${u:recalparmsindels} ${u:recalreport} ]
    turbine::decr_local_file_refcount v:outputfile:2
}


proc BaseRecalibrator-app-leaf1 { t:506 v:VarcallDir v:alias:sampleName v:chr v:gatkdir v:javadir:1 v:reference v:t:383 v:t:386 v:t:392 v:t:395 v:thr u:chromosomes_processing_done u:gvcfvariant u:indices u:ploidy u:realignedbam u:recalibratedbam u:recalparmsindels u:recalreport } {
    # Var: $string v:dbsnp RENAMED [$string:__v:dbsnp] ./pipelinefunctions/realign_varcall_by_chr.swift:BaseRecalibrator():22:143
    # Var: $string$[int] v:knownindels RENAMED [$string$[int]:__v:knownindels] ./pipelinefunctions/realign_varcall_by_chr.swift:BaseRecalibrator():22:143
    # Var: $file v:inputFile:4 RENAMED [$file:__v:inputFile] ./pipelinefunctions/realign_varcall_by_chr.swift:BaseRecalibrator():22:143
    # Var: $file v:outputfile:3 RENAMED [$file:__v:outputfile] ./pipelinefunctions/realign_varcall_by_chr.swift:BaseRecalibrator():22:143
    set v:dbsnp [ turbine::retrieve_string ${t:506} CACHED 1 ]
    set v:knownindels [ turbine::unpack_args ${u:recalparmsindels} 1 string ]
    set v:inputFile:4 [ turbine::retrieve_file ${u:realignedbam} ]
    set tcltmp:init_rc 2
    set v:outputfile:3 [ turbine::create_local_file_ref ${v:t:392} ${tcltmp:init_rc} 1 ]
    turbine::c::log [ list exec: __v:javadir:1 "-Xmx16g" "-jar" ${v:gatkdir} "-T" "BaseRecalibrator" "-R" ${v:reference} "-I" ${v:t:383} "-knownSites" ${v:dbsnp} {*}${v:knownindels} "-nct" ${v:thr} "-o" ${v:t:392} [ dict create ] ]
    turbine::exec_external ${v:javadir:1} [ dict create ] "-Xmx16g" "-jar" ${v:gatkdir} "-T" "BaseRecalibrator" "-R" ${v:reference} "-I" ${v:t:383} "-knownSites" ${v:dbsnp} {*}${v:knownindels} "-nct" ${v:thr} "-o" ${v:t:392}
    turbine::store_file ${u:recalreport} v:outputfile:3 0
    set tcltmp:prio [ turbine::get_priority ]
    turbine::set_priority ${tcltmp:prio}
    adlb::spawn 0 [ list PrintReads-app-leaf1 ${v:VarcallDir} ${v:alias:sampleName} ${v:chr} ${v:dbsnp} ${v:gatkdir} ${v:javadir:1} ${v:reference} ${v:t:383} ${v:t:386} ${v:t:392} ${v:t:395} ${v:thr} ${u:chromosomes_processing_done} ${u:gvcfvariant} ${u:indices} ${u:ploidy} ${u:realignedbam} ${u:recalibratedbam} ${u:recalreport} ]
    turbine::reset_priority
    turbine::decr_local_file_refcount v:outputfile:3
    turbine::read_refcount_decr ${u:recalparmsindels} 1
}


proc PrintReads-app-leaf1 { v:VarcallDir v:alias:sampleName v:chr v:dbsnp v:gatkdir v:javadir:1 v:reference v:t:383 v:t:386 v:t:392 v:t:395 v:thr u:chromosomes_processing_done u:gvcfvariant u:indices u:ploidy u:realignedbam u:recalibratedbam u:recalreport } {
    # Var: $file v:inputFile:5 RENAMED [$file:__v:inputFile] ./pipelinefunctions/realign_varcall_by_chr.swift:PrintReads():27:129
    # Var: $file v:recalreport RENAMED [$file:__v:recalreport] ./pipelinefunctions/realign_varcall_by_chr.swift:PrintReads():27:129
    # Var: $file v:outputfile:4 RENAMED [$file:__v:outputfile] ./pipelinefunctions/realign_varcall_by_chr.swift:PrintReads():27:129
    set v:inputFile:5 [ turbine::retrieve_file ${u:realignedbam} CACHED 1 ]
    set v:recalreport [ turbine::retrieve_file ${u:recalreport} CACHED 1 ]
    set tcltmp:init_rc 2
    set v:outputfile:4 [ turbine::create_local_file_ref ${v:t:386} ${tcltmp:init_rc} 1 ]
    turbine::c::log [ list exec: __v:javadir:1 "-Xmx16g" "-jar" ${v:gatkdir} "-T" "PrintReads" "-R" ${v:reference} "-I" ${v:t:383} "-BQSR" ${v:t:392} "-nct" ${v:thr} "--out" ${v:t:386} [ dict create ] ]
    turbine::exec_external ${v:javadir:1} [ dict create ] "-Xmx16g" "-jar" ${v:gatkdir} "-T" "PrintReads" "-R" ${v:reference} "-I" ${v:t:383} "-BQSR" ${v:t:392} "-nct" ${v:thr} "--out" ${v:t:386}
    turbine::store_file ${u:recalibratedbam} v:outputfile:4 0
    set tcltmp:prio [ turbine::get_priority ]
    turbine::set_priority ${tcltmp:prio}
    adlb::spawn 0 [ list HaplotypeCaller-app-leaf1 ${v:VarcallDir} ${v:alias:sampleName} ${v:chr} ${v:dbsnp} ${v:gatkdir} ${v:javadir:1} ${v:reference} ${v:t:386} ${v:t:395} ${v:thr} ${u:chromosomes_processing_done} ${u:gvcfvariant} ${u:indices} ${u:ploidy} ${u:recalibratedbam} ]
    turbine::reset_priority
    turbine::decr_local_file_refcount v:outputfile:4
}


proc HaplotypeCaller-app-leaf1 { v:VarcallDir v:alias:sampleName v:chr v:dbsnp v:gatkdir v:javadir:1 v:reference v:t:386 v:t:395 v:thr u:chromosomes_processing_done u:gvcfvariant u:indices u:ploidy u:recalibratedbam } {
    # Var: $int v:ploidy RENAMED [$int:__v:ploidy] ./pipelinefunctions/realign_varcall_by_chr.swift:HaplotypeCaller():32:455
    # Var: $file v:inputFile:6 RENAMED [$file:__v:inputFile] ./pipelinefunctions/realign_varcall_by_chr.swift:HaplotypeCaller():32:455
    # Var: $file v:outputfile:5 RENAMED [$file:__v:outputfile] ./pipelinefunctions/realign_varcall_by_chr.swift:HaplotypeCaller():32:455
    # Var: *rw(file)[int] t:557 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():188:30
    # Var: string t:558 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():188:35
    # Var: $string$[int] v:indices VALUE_OF [string[int]:indices]
    # Var: $int v:t:555 VALUE_OF [int:__t:555]
    # Var: $string v:t:558 VALUE_OF [string:__t:558]
    lassign [ adlb::multicreate [ list container integer file_ref 1 1 155 ] [ list string 1 1 156 ] ] t:557 t:558
    turbine::c::log "allocated t:557=<${t:557}> t:558=<${t:558}>"
    set v:ploidy [ turbine::retrieve_integer ${u:ploidy} CACHED 1 ]
    set v:inputFile:6 [ turbine::retrieve_file ${u:recalibratedbam} CACHED 1 ]
    set tcltmp:init_rc 2
    set v:outputfile:5 [ turbine::create_local_file_ref ${v:t:395} ${tcltmp:init_rc} 1 ]
    turbine::c::log [ list exec: __v:javadir:1 "-Xmx8g" "-jar" ${v:gatkdir} "-T" "HaplotypeCaller" "-R" ${v:reference} "-I" ${v:t:386} "--dbsnp" ${v:dbsnp} "-o" ${v:t:395} "--emitRefConfidence" "GVCF" "-gt_mode" "DISCOVERY" "-A" "Coverage" "-A" "FisherStrand" "-A" "StrandOddsRatio" "-A" "HaplotypeScore" "-A" "MappingQualityRankSumTest" "-A" "QualByDepth" "-A" "RMSMappingQuality" "-A" "ReadPosRankSumTest" "-stand_call_conf" 30 "-stand_emit_conf" 30 "--sample_ploidy" ${v:ploidy} "-nt" 1 "-nct" ${v:thr} "-L" ${v:chr} [ dict create ] ]
    turbine::exec_external ${v:javadir:1} [ dict create ] "-Xmx8g" "-jar" ${v:gatkdir} "-T" "HaplotypeCaller" "-R" ${v:reference} "-I" ${v:t:386} "--dbsnp" ${v:dbsnp} "-o" ${v:t:395} "--emitRefConfidence" "GVCF" "-gt_mode" "DISCOVERY" "-A" "Coverage" "-A" "FisherStrand" "-A" "StrandOddsRatio" "-A" "HaplotypeScore" "-A" "MappingQualityRankSumTest" "-A" "QualByDepth" "-A" "RMSMappingQuality" "-A" "ReadPosRankSumTest" "-stand_call_conf" 30 "-stand_emit_conf" 30 "--sample_ploidy" ${v:ploidy} "-nt" 1 "-nct" ${v:thr} "-L" ${v:chr}
    turbine::store_file ${u:gvcfvariant} v:outputfile:5 0
    set v:indices [ adlb::enumerate ${u:indices} dict all 0 1 ]
    set v:t:555 [ dict size ${v:indices} ]
    turbine::glob [ list ${t:557} ] [ list ${t:558} ]
    set v:t:558 "${v:VarcallDir}${v:alias:sampleName}.*.raw.g.vcf"
    turbine::store_string ${t:558} ${v:t:558}
    turbine::rule [ list ${t:557} ] "__entry-call_foreign-size-1 ${t:557} ${v:t:555} ${u:chromosomes_processing_done}"
    turbine::decr_local_file_refcount v:outputfile:5
}


proc __entry-call_foreign-size-1 { t:557 v:t:555 u:chromosomes_processing_done } {
    # Var: file$[int] v:t:557 VALUE_OF [*rw(file)[int]:__t:557]
    # Var: $int v:t:556 VALUE_OF [int:__t:556]
    # Var: $boolean v:t:554 VALUE_OF [boolean:__t:554]
    set v:t:557 [ adlb::enumerate ${t:557} dict all 0 0 ]
    set v:t:556 [ dict size ${v:t:557} ]
    set v:t:554 [ expr { ${v:t:555} == ${v:t:556} } ]
    if { ${v:t:554} } {
        turbine::store_integer ${u:chromosomes_processing_done} 1
    }
    turbine::read_refcount_decr ${t:557} 1
}


proc __entry-optmerged-5 { t:70 v:chr u:realfiles u:recalfiles } {
    # Var: $string v:t:70:3 VALUE_OF [string:__t:70]
    # Var: $string v:t:398 VALUE_OF [string:__t:398]
    # Var: $string v:t:404 VALUE_OF [string:__t:404]
    set v:t:70:3 [ turbine::retrieve_string ${t:70} CACHED 1 ]
    set v:t:398 "${v:t:70:3}.${v:chr}.recal_foundfiles.txt"
    set v:t:404 "${v:t:70:3}.${v:chr}.real_foundfiles.txt"
    turbine::set_filename_val ${u:recalfiles} ${v:t:398}
    turbine::set_filename_val ${u:realfiles} ${v:t:404}
}


proc samtools_index-app-leaf1 { t:248 v:t:380 u:chrdedupsortedbam } {
    # Var: $string v:samtoolsdir RENAMED [$string:__v:samtoolsdir] ./pipelinefunctions/realign_varcall_by_chr.swift:samtools_index():7:21
    # Var: $file v:inputFilename RENAMED [$file:__v:inputFilename] ./pipelinefunctions/realign_varcall_by_chr.swift:samtools_index():7:21
    set v:samtoolsdir [ turbine::retrieve_string ${t:248} CACHED 1 ]
    set v:inputFilename [ turbine::retrieve_file ${u:chrdedupsortedbam} CACHED 1 ]
    turbine::c::log [ list exec: __v:samtoolsdir "index" ${v:t:380} [ dict create ] ]
    turbine::exec_external ${v:samtoolsdir} [ dict create ] "index" ${v:t:380}
}


proc __entry-async_op-parse_int-6 { t:420 t:421 } {
    # Var: $string v:t:421 VALUE_OF [string:__t:421]
    # Var: $int v:t:420 VALUE_OF [int:__t:420]
    set v:t:421 [ turbine::retrieve_string ${t:421} CACHED 1 ]
    set v:t:420 [ turbine::parse_int_impl ${v:t:421} 10 ]
    turbine::store_integer ${t:420} ${v:t:420}
}


proc __entry-async_op-dircat-3 { t:466 t:468 } {
    # Var: $string v:t:468 VALUE_OF [string:__t:468]
    # Var: $string v:t:467 VALUE_OF [string:__t:467]
    # Var: $string v:t:466 VALUE_OF [string:__t:466]
    set v:t:468 [ turbine::retrieve_string ${t:468} CACHED 1 ]
    set v:t:467 "${v:t:468}/GenomeAnalysisTK.jar"
    set v:t:466 "${v:t:467}"
    turbine::store_string ${t:466} ${v:t:466}
}


proc __entry-optmerged-6 { t:426 t:428 t:430 t:471 t:474 t:506 t:509 } {
    # Var: $string v:t:428 VALUE_OF [string:__t:428]
    set v:t:428 [ turbine::retrieve_string ${t:428} CACHED 1 ]
    turbine::rule [ list ${t:430} ] [ list __entry-async_op-dircat-4 ${t:426} ${t:430} ${v:t:428} ]
    turbine::rule [ list ${t:474} ] [ list __entry-async_op-dircat-5 ${t:471} ${t:474} ${v:t:428} ]
    turbine::rule [ list ${t:509} ] [ list __entry-async_op-dircat-6 ${t:506} ${t:509} ${v:t:428} ]
}


proc __entry-async_op-dircat-4 { t:426 t:430 v:t:428 } {
    # Var: $string v:t:430 VALUE_OF [string:__t:430]
    # Var: $string v:t:427 VALUE_OF [string:__t:427]
    # Var: $string v:t:426 VALUE_OF [string:__t:426]
    set v:t:430 [ turbine::retrieve_string ${t:430} CACHED 1 ]
    set v:t:427 "${v:t:428}/${v:t:430}"
    set v:t:426 "${v:t:427}/"
    turbine::store_string ${t:426} ${v:t:426}
}


proc __entry-async_op-dircat-5 { t:471 t:474 v:t:428 } {
    # Var: $string v:t:474 VALUE_OF [string:__t:474]
    # Var: $string v:t:471 VALUE_OF [string:__t:471]
    set v:t:474 [ turbine::retrieve_string ${t:474} CACHED 1 ]
    set v:t:471 "${v:t:428}/${v:t:474}"
    turbine::store_string ${t:471} ${v:t:471}
}


proc __entry-async_op-dircat-6 { t:506 t:509 v:t:428 } {
    # Var: $string v:t:509 VALUE_OF [string:__t:509]
    # Var: $string v:t:506 VALUE_OF [string:__t:506]
    set v:t:509 [ turbine::retrieve_string ${t:509} CACHED 1 ]
    set v:t:506 "${v:t:428}/${v:t:509}"
    turbine::store_string ${t:506} ${v:t:506}
}


proc samtools_flagstat-app-leaf1 { t:248 v:t:26 v:t:58 u:dedupsortedbam u:flagstats u:stat } {
    # Var: $string v:samtoolsdir:1 RENAMED [$string:__v:samtoolsdir] ./pipelinefunctions/align_dedup.swift:samtools_flagstat():51:42
    # Var: $file v:inputFile:8 RENAMED [$file:__v:inputFile] ./pipelinefunctions/align_dedup.swift:samtools_flagstat():51:42
    # Var: $file v:output:3 RENAMED [$file:__v:output] ./pipelinefunctions/align_dedup.swift:samtools_flagstat():51:42
    # Var: $file v:flagstats VALUE_OF [file:flagstats]
    # Var: $string$[int] v:stat VALUE_OF [string[int]:stat]
    set v:samtoolsdir:1 [ turbine::retrieve_string ${t:248} CACHED 1 ]
    set v:inputFile:8 [ turbine::retrieve_file ${u:dedupsortedbam} CACHED 1 ]
    set tcltmp:init_rc 2
    set v:output:3 [ turbine::create_local_file_ref ${v:t:58} ${tcltmp:init_rc} 1 ]
    turbine::c::log [ list exec: __v:samtoolsdir:1 "flagstat" ${v:t:26} [ dict create "stdout" ${v:t:58} ] ]
    turbine::exec_external ${v:samtoolsdir:1} [ dict create "stdout" ${v:t:58} ] "flagstat" ${v:t:26}
    turbine::store_file ${u:flagstats} v:output:3 0
    set v:flagstats [ turbine::retrieve_file ${u:flagstats} CACHED 1 ]
    set v:stat [ turbine::file_lines_impl ${v:flagstats} ]
    turbine::build_rec ${u:stat} ${v:stat} [ list container integer string ] 0 1
    turbine::decr_local_file_refcount v:output:3
}


proc __entry-optmerged-7 { t:64 t:640 t:70 v:alias:sampleName u:alignedsam u:chr_bamListfile u:chr_vcfListfile } {
    # Var: $string v:t:640:1 VALUE_OF [string:__t:640]
    # Var: $string v:t:64 VALUE_OF [string:__t:64]
    # Var: $string v:t:70 VALUE_OF [string:__t:70]
    # Var: $string v:t:69 VALUE_OF [string:__t:69]
    # Var: $string v:t:74 VALUE_OF [string:__t:74]
    set v:t:640:1 [ turbine::retrieve_string ${t:640} CACHED 1 ]
    set v:t:64 "${v:t:640:1}/align/${v:alias:sampleName}.nodups.sam"
    turbine::store_string ${t:64} ${v:t:64}
    set v:t:70 "${v:t:640:1}/${v:alias:sampleName}"
    turbine::store_string ${t:70} ${v:t:70}
    turbine::set_filename_val ${u:alignedsam} ${v:t:64}
    set v:t:69 "${v:t:70}.chr_bamList.txt"
    turbine::set_filename_val ${u:chr_bamListfile} ${v:t:69}
    set v:t:74 "${v:t:70}.chr_vcfList.txt"
    turbine::set_filename_val ${u:chr_vcfListfile} ${v:t:74}
}


proc __entry-async_op-strcat-11 { t:640 u:variantFiles } {
    # Var: $string v:t:640 VALUE_OF [string:__t:640]
    # Var: $string v:t:639 VALUE_OF [string:__t:639]
    set v:t:640 [ turbine::retrieve_string ${t:640} CACHED 1 ]
    set v:t:639 "${v:t:640}/variantFiles.txt"
    turbine::set_filename_val ${u:variantFiles} ${v:t:639}
}


proc __entry-async_op-eq_string-2 { t:79 t:80 } {
    # Var: $string v:t:80 VALUE_OF [string:__t:80]
    # Var: $boolean v:t:79 VALUE_OF [boolean:__t:79]
    set v:t:80 [ turbine::retrieve_string ${t:80} CACHED 1 ]
    set v:t:79 [ string equal ${v:t:80} "SAMBLASTER" ]
    turbine::store_integer ${t:79} ${v:t:79}
}


proc __entry-async_op-parse_float-4 { t:240 t:268 } {
    # Var: $string v:t:240 VALUE_OF [string:__t:240]
    # Var: $float v:t:268 VALUE_OF [float:__t:268]
    set v:t:240 [ turbine::retrieve_string ${t:240} CACHED 1 ]
    set v:t:268 [ turbine::string2float_impl ${v:t:240} ]
    turbine::store_float ${t:268} ${v:t:268}
}


proc __entry-call_foreign-split-3 { t:369 u:indices } {
    # Var: $string v:t:369 VALUE_OF [string:__t:369]
    # Var: $string$[int] v:indices:1 VALUE_OF [string[int]:indices]
    set v:t:369 [ turbine::retrieve_string ${t:369} CACHED 1 ]
    set v:indices:1 [ turbine::split_impl ${v:t:369} ":" ]
    turbine::build_rec ${u:indices} ${v:indices:1} [ list container integer string ] 0 1
}


proc __entry-optmerged-8 { t:35 t:631 t:632 t:633 t:635 u:jointVCF } {
    # Var: $string v:t:633 VALUE_OF [string:__t:633]
    # Var: $string v:t:635 VALUE_OF [string:__t:635]
    # Var: $string v:t:632 VALUE_OF [string:__t:632]
    # Var: $string v:t:35 VALUE_OF [string:__t:35]
    # Var: $string v:t:644 VALUE_OF [string:__t:644]
    # Var: $string v:t:631 VALUE_OF [string:__t:631]
    set v:t:633 [ turbine::retrieve_string ${t:633} CACHED 1 ]
    set v:t:635 [ turbine::retrieve_string ${t:635} CACHED 1 ]
    set v:t:632 "${v:t:633}/${v:t:635}"
    turbine::store_string ${t:632} ${v:t:632}
    set v:t:35 "${v:t:633}/${v:t:635}/docs/QC_test_results.txt"
    turbine::store_string ${t:35} ${v:t:35}
    set v:t:644 "${v:t:632}/jointVCFs"
    set v:t:631 "${v:t:632}/jointVCFs/jointVCFcalled.vcf"
    turbine::store_string ${t:631} ${v:t:631}
    turbine::set_filename_val ${u:jointVCF} ${v:t:631}
    set tcltmp:prio [ turbine::get_priority ]
    turbine::set_priority ${tcltmp:prio}
    adlb::spawn 0 [ list mkdir-app-leaf1-1 ${v:t:644} ]
    turbine::reset_priority
}


proc mkdir-app-leaf1-1 { v:t:644 } {
    # Var: $void v:v:1 RENAMED [$void:__v:v] /usr/local/src/swift-t-0.9.1/turbine/export/unix.swift:mkdir():65:15
    turbine::c::log [ list exec: "mkdir" "-p" ${v:t:644} [ dict create ] ]
    turbine::exec_external "mkdir" [ dict create ] "-p" ${v:t:644}
}


proc f:cp { u:o u:i v:loc_rank v:loc_strictness v:loc_accuracy } {
    turbine::c::log "function: cp"
    # Var: $boolean v:mapped_o OPT_TEMPORARY
    turbine::file_read_refcount_incr ${u:o} 1
    turbine::file_read_refcount_incr ${u:i} 2
    set filename:i [ turbine::get_file_path ${u:i} ]
    set v:mapped_o [ turbine::is_file_mapped ${u:o} ]
    set filename:o [ turbine::get_file_path ${u:o} ]
    if { ${v:mapped_o} } {
    } else {
        # Var: $string optf:o FILENAME_OF [file:o]
        set optf:o [ turbine::mktemp ]
        turbine::set_filename_val ${u:o} ${optf:o}
    }
    turbine::rule [ list ${filename:i} ${filename:o} [ turbine::get_file_td ${u:i} ] ] "cp-app-leaf1 {${filename:i}} {${filename:o}} ${v:mapped_o} {${u:i}} {${u:o}}" target ${v:loc_rank} strictness ${v:loc_strictness} accuracy ${v:loc_accuracy}
}


proc cp-app-leaf1 { filename:i filename:o v:mapped_o u:i u:o } {
    # Var: $string v:__filename:i VALUE_OF [string:__filename:i] /usr/local/src/swift-t-0.9.1/turbine/export/unix.swift:cp():24:9
    # Var: $string v:__filename:o VALUE_OF [string:__filename:o] /usr/local/src/swift-t-0.9.1/turbine/export/unix.swift:cp():24:9
    # Var: $file v:i VALUE_OF [file:i] /usr/local/src/swift-t-0.9.1/turbine/export/unix.swift:cp():24:9
    # Var: $file v:o VALUE_OF [file:o] /usr/local/src/swift-t-0.9.1/turbine/export/unix.swift:cp():24:9
    # Var: $boolean v:3 EXPR_TEMPORARY /usr/local/src/swift-t-0.9.1/turbine/export/unix.swift:cp():24:9
    set v:__filename:i [ turbine::retrieve_string ${filename:i} ]
    set v:__filename:o [ turbine::retrieve_string ${filename:o} CACHED 1 ]
    set v:i [ turbine::retrieve_file ${u:i} CACHED 2 ]
    if { ${v:mapped_o} } {
        set tcltmp:init_rc 2
    } else {
        set tcltmp:init_rc 1
    }
    set v:o [ turbine::create_local_file_ref ${v:__filename:o} ${tcltmp:init_rc} ${v:mapped_o} ]
    turbine::c::log [ list exec: "cp" ${v:__filename:i} ${v:__filename:o} [ dict create ] ]
    turbine::exec_external "cp" [ dict create ] ${v:__filename:i} ${v:__filename:o}
    set v:3 [ expr { ! ${v:mapped_o} } ]
    turbine::store_file ${u:o} v:o ${v:3}
    turbine::decr_local_file_refcount v:o
}


proc f:sed { u:o u:i u:command v:loc_rank v:loc_strictness v:loc_accuracy } {
    turbine::c::log "function: sed"
    # Var: $boolean v:mapped_o OPT_TEMPORARY
    turbine::read_refcount_incr ${u:command} 1
    turbine::file_read_refcount_incr ${u:o} 1
    turbine::file_read_refcount_incr ${u:i} 2
    set filename:i [ turbine::get_file_path ${u:i} ]
    set v:mapped_o [ turbine::is_file_mapped ${u:o} ]
    set filename:o [ turbine::get_file_path ${u:o} ]
    if { ${v:mapped_o} } {
    } else {
        # Var: $string optf:o FILENAME_OF [file:o]
        set optf:o [ turbine::mktemp ]
        turbine::set_filename_val ${u:o} ${optf:o}
    }
    turbine::rule [ list ${filename:i} ${filename:o} ${u:command} [ turbine::get_file_td ${u:i} ] ] "sed-app-leaf1 {${filename:i}} {${filename:o}} ${v:mapped_o} {${u:command}} {${u:i}} {${u:o}}" target ${v:loc_rank} strictness ${v:loc_strictness} accuracy ${v:loc_accuracy}
}


proc sed-app-leaf1 { filename:i filename:o v:mapped_o u:command u:i u:o } {
    # Var: $string v:command VALUE_OF [string:command] /usr/local/src/swift-t-0.9.1/turbine/export/unix.swift:sed():40:26
    # Var: $string v:__filename:i VALUE_OF [string:__filename:i] /usr/local/src/swift-t-0.9.1/turbine/export/unix.swift:sed():40:26
    # Var: $string v:__filename:o VALUE_OF [string:__filename:o] /usr/local/src/swift-t-0.9.1/turbine/export/unix.swift:sed():40:26
    # Var: $file v:i VALUE_OF [file:i] /usr/local/src/swift-t-0.9.1/turbine/export/unix.swift:sed():40:26
    # Var: $file v:o VALUE_OF [file:o] /usr/local/src/swift-t-0.9.1/turbine/export/unix.swift:sed():40:26
    # Var: $boolean v:3 EXPR_TEMPORARY /usr/local/src/swift-t-0.9.1/turbine/export/unix.swift:sed():40:26
    set v:command [ turbine::retrieve_string ${u:command} CACHED 1 ]
    set v:__filename:i [ turbine::retrieve_string ${filename:i} ]
    set v:__filename:o [ turbine::retrieve_string ${filename:o} CACHED 1 ]
    set v:i [ turbine::retrieve_file ${u:i} CACHED 2 ]
    if { ${v:mapped_o} } {
        set tcltmp:init_rc 2
    } else {
        set tcltmp:init_rc 1
    }
    set v:o [ turbine::create_local_file_ref ${v:__filename:o} ${tcltmp:init_rc} ${v:mapped_o} ]
    turbine::c::log [ list exec: "sed" ${v:command} ${v:__filename:i} [ dict create "stdout" ${v:__filename:o} ] ]
    turbine::exec_external "sed" [ dict create "stdout" ${v:__filename:o} ] ${v:command} ${v:__filename:i}
    set v:3 [ expr { ! ${v:mapped_o} } ]
    turbine::store_file ${u:o} v:o ${v:3}
    turbine::decr_local_file_refcount v:o
}


proc f:echo { u:o u:s v:loc_rank v:loc_strictness v:loc_accuracy } {
    turbine::c::log "function: echo"
    # Var: $boolean v:mapped_o OPT_TEMPORARY
    turbine::file_read_refcount_incr ${u:o} 1
    turbine::read_refcount_incr ${u:s} 1
    set v:mapped_o [ turbine::is_file_mapped ${u:o} ]
    set filename:o [ turbine::get_file_path ${u:o} ]
    if { ${v:mapped_o} } {
    } else {
        # Var: $string optf:o FILENAME_OF [file:o]
        set optf:o [ turbine::mktemp ]
        turbine::set_filename_val ${u:o} ${optf:o}
    }
    turbine::rule [ list ${filename:o} ${u:s} ] "echo-app-leaf1 {${filename:o}} ${v:mapped_o} {${u:o}} {${u:s}}" target ${v:loc_rank} strictness ${v:loc_strictness} accuracy ${v:loc_accuracy}
}


proc echo-app-leaf1 { filename:o v:mapped_o u:o u:s } {
    # Var: $string v:s VALUE_OF [string:s] /usr/local/src/swift-t-0.9.1/turbine/export/unix.swift:echo():55:19
    # Var: $string v:__filename:o VALUE_OF [string:__filename:o] /usr/local/src/swift-t-0.9.1/turbine/export/unix.swift:echo():55:19
    # Var: $file v:o VALUE_OF [file:o] /usr/local/src/swift-t-0.9.1/turbine/export/unix.swift:echo():55:19
    # Var: $boolean v:3 EXPR_TEMPORARY /usr/local/src/swift-t-0.9.1/turbine/export/unix.swift:echo():55:19
    set v:s [ turbine::retrieve_string ${u:s} CACHED 1 ]
    set v:__filename:o [ turbine::retrieve_string ${filename:o} CACHED 1 ]
    if { ${v:mapped_o} } {
        set tcltmp:init_rc 2
    } else {
        set tcltmp:init_rc 1
    }
    set v:o [ turbine::create_local_file_ref ${v:__filename:o} ${tcltmp:init_rc} ${v:mapped_o} ]
    turbine::c::log [ list exec: "echo" ${v:s} [ dict create "stdout" ${v:__filename:o} ] ]
    turbine::exec_external "echo" [ dict create "stdout" ${v:__filename:o} ] ${v:s}
    set v:3 [ expr { ! ${v:mapped_o} } ]
    turbine::store_file ${u:o} v:o ${v:3}
    turbine::decr_local_file_refcount v:o
}


proc f:bwa_mem { u:output u:bwadir u:read1 u:read2 u:INDEX u:bwamemparams u:PBSCORES u:rgheader v:loc_rank v:loc_strictness v:loc_accuracy } {
    turbine::c::log "function: bwa_mem"
    # Var: $boolean v:mapped_output OPT_TEMPORARY
    turbine::read_refcount_incr ${u:read1} 1
    turbine::read_refcount_incr ${u:read2} 1
    turbine::read_refcount_incr ${u:bwamemparams} 1
    turbine::read_refcount_incr ${u:rgheader} 1
    turbine::read_refcount_incr ${u:INDEX} 1
    turbine::read_refcount_incr ${u:bwadir} 1
    turbine::read_refcount_incr ${u:PBSCORES} 1
    turbine::file_read_refcount_incr ${u:output} 1
    set v:mapped_output [ turbine::is_file_mapped ${u:output} ]
    set filename:output [ turbine::get_file_path ${u:output} ]
    if { ${v:mapped_output} } {
    } else {
        # Var: $string optf:output FILENAME_OF [file:output]
        set optf:output [ turbine::mktemp ]
        turbine::set_filename_val ${u:output} ${optf:output}
    }
    turbine::rule [ list ${u:INDEX} ${u:PBSCORES} ${filename:output} ${u:bwadir} ${u:bwamemparams} ${u:read1} ${u:read2} ${u:rgheader} ] "bwa_mem-app-leaf1 {${u:INDEX}} {${u:PBSCORES}} {${filename:output}} ${v:mapped_output} {${u:bwadir}} {${u:bwamemparams}} {${u:output}} {${u:read1}} {${u:read2}} {${u:rgheader}}" target ${v:loc_rank} strictness ${v:loc_strictness} accuracy ${v:loc_accuracy}
}


proc bwa_mem-app-leaf1 { u:INDEX u:PBSCORES filename:output v:mapped_output u:bwadir u:bwamemparams u:output u:read1 u:read2 u:rgheader } {
    # Var: $string v:bwadir VALUE_OF [string:bwadir] ./pipelinefunctions/align_dedup.swift:bwa_mem():4:86
    # Var: $string$[int] v:bwamemparams VALUE_OF [string[int]:bwamemparams] ./pipelinefunctions/align_dedup.swift:bwa_mem():4:86
    # Var: $int v:PBSCORES VALUE_OF [int:PBSCORES] ./pipelinefunctions/align_dedup.swift:bwa_mem():4:86
    # Var: $string v:rgheader VALUE_OF [string:rgheader] ./pipelinefunctions/align_dedup.swift:bwa_mem():4:86
    # Var: $string v:INDEX VALUE_OF [string:INDEX] ./pipelinefunctions/align_dedup.swift:bwa_mem():4:86
    # Var: $string v:read1 VALUE_OF [string:read1] ./pipelinefunctions/align_dedup.swift:bwa_mem():4:86
    # Var: $string v:read2 VALUE_OF [string:read2] ./pipelinefunctions/align_dedup.swift:bwa_mem():4:86
    # Var: $string v:__filename:output VALUE_OF [string:__filename:output] ./pipelinefunctions/align_dedup.swift:bwa_mem():4:86
    # Var: $file v:output VALUE_OF [file:output] ./pipelinefunctions/align_dedup.swift:bwa_mem():4:86
    # Var: $boolean v:3 EXPR_TEMPORARY ./pipelinefunctions/align_dedup.swift:bwa_mem():4:86
    set v:bwadir [ turbine::retrieve_string ${u:bwadir} CACHED 1 ]
    set v:bwamemparams [ turbine::unpack_args ${u:bwamemparams} 1 string ]
    set v:PBSCORES [ turbine::retrieve_integer ${u:PBSCORES} CACHED 1 ]
    set v:rgheader [ turbine::retrieve_string ${u:rgheader} CACHED 1 ]
    set v:INDEX [ turbine::retrieve_string ${u:INDEX} CACHED 1 ]
    set v:read1 [ turbine::retrieve_string ${u:read1} CACHED 1 ]
    set v:read2 [ turbine::retrieve_string ${u:read2} CACHED 1 ]
    set v:__filename:output [ turbine::retrieve_string ${filename:output} CACHED 1 ]
    if { ${v:mapped_output} } {
        set tcltmp:init_rc 2
    } else {
        set tcltmp:init_rc 1
    }
    set v:output [ turbine::create_local_file_ref ${v:__filename:output} ${tcltmp:init_rc} ${v:mapped_output} ]
    turbine::c::log [ list exec: __v:bwadir "mem" "-M" {*}${v:bwamemparams} "-t" ${v:PBSCORES} "-R" ${v:rgheader} ${v:INDEX} ${v:read1} ${v:read2} [ dict create "stdout" ${v:__filename:output} ] ]
    turbine::exec_external ${v:bwadir} [ dict create "stdout" ${v:__filename:output} ] "mem" "-M" {*}${v:bwamemparams} "-t" ${v:PBSCORES} "-R" ${v:rgheader} ${v:INDEX} ${v:read1} ${v:read2}
    set v:3 [ expr { ! ${v:mapped_output} } ]
    turbine::store_file ${u:output} v:output ${v:3}
    turbine::decr_local_file_refcount v:output
    turbine::read_refcount_decr ${u:bwamemparams} 1
}


proc f:samtools_view { u:output u:samtoolsdir u:inputFile u:thr u:u v:loc_rank v:loc_strictness v:loc_accuracy } {
    turbine::c::log "function: samtools_view"
    # Var: $boolean v:mapped_output OPT_TEMPORARY
    turbine::read_refcount_incr ${u:thr} 1
    turbine::read_refcount_incr ${u:u} 1
    turbine::file_read_refcount_incr ${u:inputFile} 2
    turbine::file_read_refcount_incr ${u:output} 1
    turbine::read_refcount_incr ${u:samtoolsdir} 1
    set filename:inputFile [ turbine::get_file_path ${u:inputFile} ]
    set v:mapped_output [ turbine::is_file_mapped ${u:output} ]
    set filename:output [ turbine::get_file_path ${u:output} ]
    if { ${v:mapped_output} } {
    } else {
        # Var: $string optf:output FILENAME_OF [file:output]
        set optf:output [ turbine::mktemp ]
        turbine::set_filename_val ${u:output} ${optf:output}
    }
    turbine::rule [ list ${filename:inputFile} ${filename:output} [ turbine::get_file_td ${u:inputFile} ] ${u:samtoolsdir} ${u:thr} ${u:u} ] "samtools_view-app-leaf1 {${filename:inputFile}} {${filename:output}} ${v:mapped_output} {${u:inputFile}} {${u:output}} {${u:samtoolsdir}} {${u:thr}} {${u:u}}" target ${v:loc_rank} strictness ${v:loc_strictness} accuracy ${v:loc_accuracy}
}


proc samtools_view-app-leaf1 { filename:inputFile filename:output v:mapped_output u:inputFile u:output u:samtoolsdir u:thr u:u } {
    # Var: $string v:samtoolsdir VALUE_OF [string:samtoolsdir] ./pipelinefunctions/align_dedup.swift:samtools_view():15:55
    # Var: $int v:thr VALUE_OF [int:thr] ./pipelinefunctions/align_dedup.swift:samtools_view():15:55
    # Var: $string v:__filename:inputFile VALUE_OF [string:__filename:inputFile] ./pipelinefunctions/align_dedup.swift:samtools_view():15:55
    # Var: $string v:u VALUE_OF [string:u] ./pipelinefunctions/align_dedup.swift:samtools_view():15:55
    # Var: $string v:__filename:output VALUE_OF [string:__filename:output] ./pipelinefunctions/align_dedup.swift:samtools_view():15:55
    # Var: $file v:inputFile VALUE_OF [file:inputFile] ./pipelinefunctions/align_dedup.swift:samtools_view():15:55
    # Var: $file v:output VALUE_OF [file:output] ./pipelinefunctions/align_dedup.swift:samtools_view():15:55
    # Var: $boolean v:3 EXPR_TEMPORARY ./pipelinefunctions/align_dedup.swift:samtools_view():15:55
    set v:samtoolsdir [ turbine::retrieve_string ${u:samtoolsdir} CACHED 1 ]
    set v:thr [ turbine::retrieve_integer ${u:thr} CACHED 1 ]
    set v:__filename:inputFile [ turbine::retrieve_string ${filename:inputFile} ]
    set v:u [ turbine::retrieve_string ${u:u} CACHED 1 ]
    set v:__filename:output [ turbine::retrieve_string ${filename:output} CACHED 1 ]
    set v:inputFile [ turbine::retrieve_file ${u:inputFile} CACHED 2 ]
    if { ${v:mapped_output} } {
        set tcltmp:init_rc 2
    } else {
        set tcltmp:init_rc 1
    }
    set v:output [ turbine::create_local_file_ref ${v:__filename:output} ${tcltmp:init_rc} ${v:mapped_output} ]
    turbine::c::log [ list exec: __v:samtoolsdir "view" "-@" ${v:thr} "-bS" ${v:__filename:inputFile} ${v:u} [ dict create "stdout" ${v:__filename:output} ] ]
    turbine::exec_external ${v:samtoolsdir} [ dict create "stdout" ${v:__filename:output} ] "view" "-@" ${v:thr} "-bS" ${v:__filename:inputFile} ${v:u}
    set v:3 [ expr { ! ${v:mapped_output} } ]
    turbine::store_file ${u:output} v:output ${v:3}
    turbine::decr_local_file_refcount v:output
}


proc f:novosort { u:output u:novosortdir u:inputFile u:tmpdir u:thr u:args v:loc_rank v:loc_strictness v:loc_accuracy } {
    turbine::c::log "function: novosort"
    # Var: $boolean v:mapped_output OPT_TEMPORARY
    turbine::read_refcount_incr ${u:thr} 1
    turbine::read_refcount_incr ${u:novosortdir} 1
    turbine::read_refcount_incr ${u:tmpdir} 1
    turbine::file_read_refcount_incr ${u:inputFile} 2
    turbine::file_read_refcount_incr ${u:output} 1
    turbine::read_refcount_incr ${u:args} 1
    set filename:inputFile [ turbine::get_file_path ${u:inputFile} ]
    set v:mapped_output [ turbine::is_file_mapped ${u:output} ]
    set filename:output [ turbine::get_file_path ${u:output} ]
    if { ${v:mapped_output} } {
    } else {
        # Var: $string optf:output FILENAME_OF [file:output]
        set optf:output [ turbine::mktemp ]
        turbine::set_filename_val ${u:output} ${optf:output}
    }
    turbine::rule [ list ${filename:inputFile} ${filename:output} ${u:args} [ turbine::get_file_td ${u:inputFile} ] ${u:novosortdir} ${u:thr} ${u:tmpdir} ] "novosort-app-leaf1 {${filename:inputFile}} {${filename:output}} ${v:mapped_output} {${u:args}} {${u:inputFile}} {${u:novosortdir}} {${u:output}} {${u:thr}} {${u:tmpdir}}" target ${v:loc_rank} strictness ${v:loc_strictness} accuracy ${v:loc_accuracy}
}


proc novosort-app-leaf1 { filename:inputFile filename:output v:mapped_output u:args u:inputFile u:novosortdir u:output u:thr u:tmpdir } {
    # Var: $string v:novosortdir VALUE_OF [string:novosortdir] ./pipelinefunctions/align_dedup.swift:novosort():33:79
    # Var: $string v:tmpdir VALUE_OF [string:tmpdir] ./pipelinefunctions/align_dedup.swift:novosort():33:79
    # Var: $int v:thr VALUE_OF [int:thr] ./pipelinefunctions/align_dedup.swift:novosort():33:79
    # Var: $string v:__filename:inputFile VALUE_OF [string:__filename:inputFile] ./pipelinefunctions/align_dedup.swift:novosort():33:79
    # Var: $string v:__filename:output VALUE_OF [string:__filename:output] ./pipelinefunctions/align_dedup.swift:novosort():33:79
    # Var: $string$[int] v:args VALUE_OF [string[int]:args] ./pipelinefunctions/align_dedup.swift:novosort():33:79
    # Var: $file v:inputFile VALUE_OF [file:inputFile] ./pipelinefunctions/align_dedup.swift:novosort():33:79
    # Var: $file v:output VALUE_OF [file:output] ./pipelinefunctions/align_dedup.swift:novosort():33:79
    # Var: $boolean v:3 EXPR_TEMPORARY ./pipelinefunctions/align_dedup.swift:novosort():33:79
    set v:novosortdir [ turbine::retrieve_string ${u:novosortdir} CACHED 1 ]
    set v:tmpdir [ turbine::retrieve_string ${u:tmpdir} CACHED 1 ]
    set v:thr [ turbine::retrieve_integer ${u:thr} CACHED 1 ]
    set v:__filename:inputFile [ turbine::retrieve_string ${filename:inputFile} ]
    set v:__filename:output [ turbine::retrieve_string ${filename:output} CACHED 1 ]
    set v:args [ turbine::unpack_args ${u:args} 1 string ]
    set v:inputFile [ turbine::retrieve_file ${u:inputFile} CACHED 2 ]
    if { ${v:mapped_output} } {
        set tcltmp:init_rc 2
    } else {
        set tcltmp:init_rc 1
    }
    set v:output [ turbine::create_local_file_ref ${v:__filename:output} ${tcltmp:init_rc} ${v:mapped_output} ]
    turbine::c::log [ list exec: __v:novosortdir "--index" "--tmpdir" ${v:tmpdir} "--threads" ${v:thr} ${v:__filename:inputFile} "-o" ${v:__filename:output} {*}${v:args} [ dict create ] ]
    turbine::exec_external ${v:novosortdir} [ dict create ] "--index" "--tmpdir" ${v:tmpdir} "--threads" ${v:thr} ${v:__filename:inputFile} "-o" ${v:__filename:output} {*}${v:args}
    set v:3 [ expr { ! ${v:mapped_output} } ]
    turbine::store_file ${u:output} v:output ${v:3}
    turbine::decr_local_file_refcount v:output
    turbine::read_refcount_decr ${u:args} 1
}


proc f:find_files { u:output u:dir u:pattern v:loc_rank v:loc_strictness v:loc_accuracy } {
    turbine::c::log "function: find_files"
    # Var: $boolean v:mapped_output OPT_TEMPORARY
    turbine::read_refcount_incr ${u:dir} 1
    turbine::read_refcount_incr ${u:pattern} 1
    turbine::file_read_refcount_incr ${u:output} 1
    set v:mapped_output [ turbine::is_file_mapped ${u:output} ]
    set filename:output [ turbine::get_file_path ${u:output} ]
    if { ${v:mapped_output} } {
    } else {
        # Var: $string optf:output FILENAME_OF [file:output]
        set optf:output [ turbine::mktemp ]
        turbine::set_filename_val ${u:output} ${optf:output}
    }
    turbine::rule [ list ${filename:output} ${u:dir} ${u:pattern} ] "find_files-app-leaf1 {${filename:output}} ${v:mapped_output} {${u:dir}} {${u:output}} {${u:pattern}}" target ${v:loc_rank} strictness ${v:loc_strictness} accuracy ${v:loc_accuracy}
}


proc find_files-app-leaf1 { filename:output v:mapped_output u:dir u:output u:pattern } {
    # Var: $string v:dir VALUE_OF [string:dir] ./pipelinefunctions/miscellaneous.swift:find_files():17:43
    # Var: $string v:pattern VALUE_OF [string:pattern] ./pipelinefunctions/miscellaneous.swift:find_files():17:43
    # Var: $string v:__filename:output VALUE_OF [string:__filename:output] ./pipelinefunctions/miscellaneous.swift:find_files():17:43
    # Var: $file v:output VALUE_OF [file:output] ./pipelinefunctions/miscellaneous.swift:find_files():17:43
    # Var: $boolean v:3 EXPR_TEMPORARY ./pipelinefunctions/miscellaneous.swift:find_files():17:43
    set v:dir [ turbine::retrieve_string ${u:dir} CACHED 1 ]
    set v:pattern [ turbine::retrieve_string ${u:pattern} CACHED 1 ]
    set v:__filename:output [ turbine::retrieve_string ${filename:output} CACHED 1 ]
    if { ${v:mapped_output} } {
        set tcltmp:init_rc 2
    } else {
        set tcltmp:init_rc 1
    }
    set v:output [ turbine::create_local_file_ref ${v:__filename:output} ${tcltmp:init_rc} ${v:mapped_output} ]
    turbine::c::log [ list exec: "find" ${v:dir} "-name" ${v:pattern} [ dict create "stdout" ${v:__filename:output} ] ]
    turbine::exec_external "find" [ dict create "stdout" ${v:__filename:output} ] ${v:dir} "-name" ${v:pattern}
    set v:3 [ expr { ! ${v:mapped_output} } ]
    turbine::store_file ${u:output} v:output ${v:3}
    turbine::decr_local_file_refcount v:output
}

turbine::defaults
turbine::declare_custom_work_types COASTER
turbine::init $servers "Swift"
turbine::enable_read_refcount
adlb::declare_struct_type 16 s:location [ list "rank" integer "strictness" string "accuracy" string ]
turbine::check_constants "WORKER\[WORKER\]" ${turbine::WORK_TASK} 0 "CONTROL" ${turbine::WORK_TASK} 0 "ADLB_RANK_ANY" ${adlb::RANK_ANY} -100
adlb::add_debug_symbol 1 "__c:s__GATKCombi-2" ""
adlb::add_debug_symbol 2 "__c:s_sknownSite" ""
adlb::add_debug_symbol 3 "__c:s_sknown_g" ""
adlb::add_debug_symbol 4 "__c:s_svariant_g" ""
adlb::add_debug_symbol 5 "__c:s_u" ""
adlb::add_debug_symbol 6 "__t:7" "VCcallingPipeline:27:33"
adlb::add_debug_symbol 7 "__t:631" "VCcallingPipeline:218:16"
adlb::add_debug_symbol 8 "__t:632" "VCcallingPipeline:218:40"
adlb::add_debug_symbol 9 "__t:633" "VCcallingPipeline:218:23"
adlb::add_debug_symbol 10 "__t:635" "VCcallingPipeline:218:41"
adlb::add_debug_symbol 11 "__t:640" "VCcallingPipeline:219:27"
adlb::add_debug_symbol 12 "samples_processing_done" "VCcallingPipeline:29:0"
adlb::add_debug_symbol 13 "jointVCF" "VCcallingPipeline:218:80"
adlb::add_debug_symbol 14 "configFile" "VCcallingPipeline:22:0"
adlb::add_debug_symbol 15 "sampleInfoFile" "VCcallingPipeline:27:0"
adlb::add_debug_symbol 16 "vars" "VCcallingPipeline:25:0"
adlb::add_debug_symbol 17 "variantFiles" "VCcallingPipeline:219:42"
adlb::add_debug_symbol 18 "__t:11" "VCcallingPipeline:__entry():39:88"
adlb::add_debug_symbol 19 "__t:13" "VCcallingPipeline:__entry():39:106"
adlb::add_debug_symbol 20 "__t:15" "VCcallingPipeline:__entry():39:148"
adlb::add_debug_symbol 21 "__t:35" "VCcallingPipeline:__entry():52:14"
adlb::add_debug_symbol 22 "__t:80" "VCcallingPipeline:__entry():64:5"
adlb::add_debug_symbol 23 "__t:240" "VCcallingPipeline:__entry():111:54"
adlb::add_debug_symbol 24 "__t:245" "VCcallingPipeline:__entry():112:55"
adlb::add_debug_symbol 25 "__t:248" "VCcallingPipeline:__entry():114:31"
adlb::add_debug_symbol 26 "__t:369" "VCcallingPipeline:__entry():146:17"
adlb::add_debug_symbol 27 "__t:79" "VCcallingPipeline:__entry():64:32"
adlb::add_debug_symbol 28 "__t:268" "VCcallingPipeline:__entry():124:17"
adlb::add_debug_symbol 29 "indices" "VCcallingPipeline:__entry():146:9"
adlb::add_debug_symbol 30 "keyValuePair" "pipelinefunctions.miscellaneous:getConfigVariables():8:16"
adlb::add_debug_symbol 31 "varlist" "VCcallingPipeline:__entry():223:1"
adlb::add_debug_symbol 32 "__t:661" "VCcallingPipeline:__entry():223:48"
adlb::add_debug_symbol 33 "__t:667" "VCcallingPipeline:__entry():224:27"
adlb::add_debug_symbol 34 "__t:671" "VCcallingPipeline:__entry():224:51"
adlb::add_debug_symbol 35 "__t:675" "VCcallingPipeline:__entry():224:92"
adlb::add_debug_symbol 36 "__t:677" "VCcallingPipeline:__entry():224:113"
adlb::add_debug_symbol 37 "sampleInfo" "VCcallingPipeline:__entry():34:1"
adlb::add_debug_symbol 38 "read1" "VCcallingPipeline:__entry():36:1"
adlb::add_debug_symbol 39 "read2" "VCcallingPipeline:__entry():37:1"
adlb::add_debug_symbol 40 "rgheader" "VCcallingPipeline:__entry():39:1"
adlb::add_debug_symbol 41 "VarcallDir" "VCcallingPipeline:__entry():43:1"
adlb::add_debug_symbol 42 "RealignDir" "VCcallingPipeline:__entry():44:1"
adlb::add_debug_symbol 43 "__t:26" "VCcallingPipeline:__entry():48:22"
adlb::add_debug_symbol 44 "dedupsortedbam" "VCcallingPipeline:__entry():48:71"
adlb::add_debug_symbol 45 "__t:31" "VCcallingPipeline:__entry():49:15"
adlb::add_debug_symbol 46 "outbam" "VCcallingPipeline:__entry():49:46"
adlb::add_debug_symbol 47 "__t:33" "VCcallingPipeline:__entry():50:19"
adlb::add_debug_symbol 48 "rawvariant" "VCcallingPipeline:__entry():50:50"
adlb::add_debug_symbol 49 "qcfile" "VCcallingPipeline:__entry():52:69"
adlb::add_debug_symbol 50 "mergedbam" "VCcallingPipeline:__entry():53:78"
adlb::add_debug_symbol 51 "mergedvariant" "VCcallingPipeline:__entry():54:82"
adlb::add_debug_symbol 52 "flagstats" "VCcallingPipeline:__entry():57:87"
adlb::add_debug_symbol 53 "__t:64" "VCcallingPipeline:__entry():60:18"
adlb::add_debug_symbol 54 "alignedsam" "VCcallingPipeline:__entry():60:63"
adlb::add_debug_symbol 55 "__t:70" "VCcallingPipeline:__entry():61:45"
adlb::add_debug_symbol 56 "chr_bamListfile" "VCcallingPipeline:__entry():61:57"
adlb::add_debug_symbol 57 "chr_vcfListfile" "VCcallingPipeline:__entry():62:57"
adlb::add_debug_symbol 58 "stat" "VCcallingPipeline:__entry():116:1"
adlb::add_debug_symbol 59 "__t:250" "VCcallingPipeline:__entry():117:14"
adlb::add_debug_symbol 60 "__t:253" "VCcallingPipeline:__entry():118:13"
adlb::add_debug_symbol 61 "__t:256" "VCcallingPipeline:__entry():119:12"
adlb::add_debug_symbol 62 "perc_mapped" "VCcallingPipeline:__entry():122:12"
adlb::add_debug_symbol 63 "__t:263" "VCcallingPipeline:__entry():122:38"
adlb::add_debug_symbol 64 "chromosomes_processing_done" "VCcallingPipeline:__entry():147:1"
adlb::add_debug_symbol 65 "chr_bamList" "VCcallingPipeline:__entry():201:1"
adlb::add_debug_symbol 66 "chr_vcfList" "VCcallingPipeline:__entry():208:1"
adlb::add_debug_symbol 67 "__t:595" "VCcallingPipeline:__entry():208:52"
adlb::add_debug_symbol 68 "__t:85" "VCcallingPipeline:__entry():66:17"
adlb::add_debug_symbol 69 "dedupsam" "VCcallingPipeline:__entry():66:63"
adlb::add_debug_symbol 70 "dedupbam" "VCcallingPipeline:__entry():67:66"
adlb::add_debug_symbol 71 "__t:95" "VCcallingPipeline:__entry():69:23"
adlb::add_debug_symbol 72 "__t:97" "VCcallingPipeline:__entry():69:53"
adlb::add_debug_symbol 73 "__t:99" "VCcallingPipeline:__entry():69:72"
adlb::add_debug_symbol 74 "__t:100" "VCcallingPipeline:__entry():69:72"
adlb::add_debug_symbol 75 "__t:102" "VCcallingPipeline:__entry():69:95"
adlb::add_debug_symbol 76 "__t:103" "VCcallingPipeline:__entry():69:106"
adlb::add_debug_symbol 77 "__t:105" "VCcallingPipeline:__entry():70:24"
adlb::add_debug_symbol 78 "__t:113" "VCcallingPipeline:__entry():76:28"
adlb::add_debug_symbol 79 "__t:114" "VCcallingPipeline:__entry():76:35"
adlb::add_debug_symbol 80 "__t:123" "VCcallingPipeline:__entry():76:129"
adlb::add_debug_symbol 81 "alignedbam" "VCcallingPipeline:__entry():80:67"
adlb::add_debug_symbol 82 "__t:136" "VCcallingPipeline:__entry():83:26"
adlb::add_debug_symbol 83 "alignedsortedbam" "VCcallingPipeline:__entry():83:75"
adlb::add_debug_symbol 84 "__t:141" "VCcallingPipeline:__entry():84:21"
adlb::add_debug_symbol 85 "metricsfile" "VCcallingPipeline:__entry():84:70"
adlb::add_debug_symbol 86 "__t:146" "VCcallingPipeline:__entry():85:24"
adlb::add_debug_symbol 87 "__t:148" "VCcallingPipeline:__entry():85:54"
adlb::add_debug_symbol 88 "__t:150" "VCcallingPipeline:__entry():85:73"
adlb::add_debug_symbol 89 "__t:151" "VCcallingPipeline:__entry():85:73"
adlb::add_debug_symbol 90 "__t:153" "VCcallingPipeline:__entry():85:96"
adlb::add_debug_symbol 91 "__t:154" "VCcallingPipeline:__entry():85:107"
adlb::add_debug_symbol 92 "__t:162" "VCcallingPipeline:__entry():88:31"
adlb::add_debug_symbol 93 "__t:163" "VCcallingPipeline:__entry():88:38"
adlb::add_debug_symbol 94 "__t:172" "VCcallingPipeline:__entry():88:135"
adlb::add_debug_symbol 95 "__t:174" "VCcallingPipeline:__entry():89:39"
adlb::add_debug_symbol 96 "__t:176" "VCcallingPipeline:__entry():89:56"
adlb::add_debug_symbol 97 "__t:183" "VCcallingPipeline:__entry():94:7"
adlb::add_debug_symbol 98 "__t:221" "VCcallingPipeline:__entry():103:30"
adlb::add_debug_symbol 99 "__t:222" "VCcallingPipeline:__entry():103:37"
adlb::add_debug_symbol 100 "__t:228" "VCcallingPipeline:__entry():103:102"
adlb::add_debug_symbol 101 "__t:229" "VCcallingPipeline:__entry():103:113"
adlb::add_debug_symbol 102 "__t:231" "VCcallingPipeline:__entry():103:133"
adlb::add_debug_symbol 103 "__t:186" "VCcallingPipeline:__entry():95:25"
adlb::add_debug_symbol 104 "__t:188" "VCcallingPipeline:__entry():95:55"
adlb::add_debug_symbol 105 "__t:190" "VCcallingPipeline:__entry():95:74"
adlb::add_debug_symbol 106 "__t:191" "VCcallingPipeline:__entry():95:74"
adlb::add_debug_symbol 107 "__t:193" "VCcallingPipeline:__entry():95:97"
adlb::add_debug_symbol 108 "__t:194" "VCcallingPipeline:__entry():95:108"
adlb::add_debug_symbol 109 "__t:203" "VCcallingPipeline:__entry():98:34"
adlb::add_debug_symbol 110 "__t:207" "VCcallingPipeline:__entry():98:87"
adlb::add_debug_symbol 111 "__t:212" "VCcallingPipeline:__entry():98:138"
adlb::add_debug_symbol 112 "__t:213" "VCcallingPipeline:__entry():98:149"
adlb::add_debug_symbol 113 "__t:560" "VCcallingPipeline:__entry():195:44"
adlb::add_debug_symbol 114 "__t:562" "VCcallingPipeline:__entry():196:44"
adlb::add_debug_symbol 115 "__t:577" "VCcallingPipeline:__entry():202:27"
adlb::add_debug_symbol 116 "__t:584" "VCcallingPipeline:__entry():202:105"
adlb::add_debug_symbol 117 "__t:297" "VCcallingPipeline:__entry():128:205"
adlb::add_debug_symbol 118 "__t:324" "VCcallingPipeline:__entry():131:209"
adlb::add_debug_symbol 119 "__t:351" "VCcallingPipeline:__entry():135:218"
adlb::add_debug_symbol 120 "__t:601" "VCcallingPipeline:__entry():209:28"
adlb::add_debug_symbol 121 "__t:605" "VCcallingPipeline:__entry():209:52"
adlb::add_debug_symbol 122 "__t:609" "VCcallingPipeline:__entry():209:93"
adlb::add_debug_symbol 123 "__t:611" "VCcallingPipeline:__entry():209:114"
adlb::add_debug_symbol 124 "__t:613" "VCcallingPipeline:__entry():209:153"
adlb::add_debug_symbol 125 "__t:616" "VCcallingPipeline:__entry():209:154"
adlb::add_debug_symbol 126 "__t:621" "VCcallingPipeline:__entry():211:32"
adlb::add_debug_symbol 127 "__t:622" "VCcallingPipeline:__entry():211:37"
adlb::add_debug_symbol 128 "__t:421" "VCcallingPipeline:__entry():166:85"
adlb::add_debug_symbol 129 "__t:428" "VCcallingPipeline:__entry():170:35"
adlb::add_debug_symbol 130 "__t:430" "VCcallingPipeline:__entry():170:56"
adlb::add_debug_symbol 131 "__t:464" "VCcallingPipeline:__entry():179:39"
adlb::add_debug_symbol 132 "__t:468" "VCcallingPipeline:__entry():179:63"
adlb::add_debug_symbol 133 "__t:474" "VCcallingPipeline:__entry():179:125"
adlb::add_debug_symbol 134 "__t:509" "VCcallingPipeline:__entry():182:223"
adlb::add_debug_symbol 135 "__t:420" "VCcallingPipeline:__entry():166:74"
adlb::add_debug_symbol 136 "__t:471" "VCcallingPipeline:__entry():179:124"
adlb::add_debug_symbol 137 "__t:506" "VCcallingPipeline:__entry():182:222"
adlb::add_debug_symbol 138 "__t:426" "VCcallingPipeline:__entry():170:28"
adlb::add_debug_symbol 139 "__t:466" "VCcallingPipeline:__entry():179:56"
adlb::add_debug_symbol 140 "chrdedupsortedbam" "VCcallingPipeline:__entry():153:68"
adlb::add_debug_symbol 141 "realignedbam" "VCcallingPipeline:__entry():154:63"
adlb::add_debug_symbol 142 "recalibratedbam" "VCcallingPipeline:__entry():155:66"
adlb::add_debug_symbol 143 "intervals" "VCcallingPipeline:__entry():156:61"
adlb::add_debug_symbol 144 "recalreport" "VCcallingPipeline:__entry():157:63"
adlb::add_debug_symbol 145 "gvcfvariant" "VCcallingPipeline:__entry():158:62"
adlb::add_debug_symbol 146 "recalfiles" "VCcallingPipeline:__entry():160:65"
adlb::add_debug_symbol 147 "realfiles" "VCcallingPipeline:__entry():161:64"
adlb::add_debug_symbol 148 "ploidy" "VCcallingPipeline:__entry():164:3"
adlb::add_debug_symbol 149 "__t:423" "VCcallingPipeline:__entry():166:104"
adlb::add_debug_symbol 150 "__t:433" "VCcallingPipeline:__entry():170:80"
adlb::add_debug_symbol 151 "recalparmsindels" "VCcallingPipeline:__entry():171:3"
adlb::add_debug_symbol 152 "__t:439" "VCcallingPipeline:__entry():171:59"
adlb::add_debug_symbol 153 "realparms" "VCcallingPipeline:__entry():174:3"
adlb::add_debug_symbol 154 "__t:458" "VCcallingPipeline:__entry():174:52"
adlb::add_debug_symbol 155 "__t:557" "VCcallingPipeline:__entry():188:30"
adlb::add_debug_symbol 156 "__t:558" "VCcallingPipeline:__entry():188:35"
turbine::start swift:main swift:constants
turbine::finalize
