
# Generated by stc version 0.6.0
# date                    : 2016/11/23 13:25:31
# Turbine version         : 0.6.0
# Input filename          : /home/azza/swift-project/Swift-Variant-Calling/test_empty_brackets.swift
# Output filename         : /home/azza/swift-project/Swift-Variant-Calling/./swift-t-test_empty_brackets.gK9.tic
# STC home                : /usr/local/src/swift-t-0.9.1/stc
# Turbine home            : /usr/local/src/swift-t-0.9.1/turbine
# Compiler settings:
# stc.auto-declare              : true
# stc.c_preprocess              : true
# stc.checkpointing             : true
# stc.compiler-debug            : true
# stc.debugging                 : COMMENTS
# stc.ic.output-file            : 
# stc.input_filename            : test_empty_brackets.swift
# stc.log.file                  : 
# stc.log.trace                 : false
# stc.must_pass_wait_vars       : true
# stc.opt.algebra               : true
# stc.opt.array-build           : true
# stc.opt.batch-refcounts       : true
# stc.opt.cancel-refcounts      : true
# stc.opt.constant-fold         : true
# stc.opt.controlflow-fusion    : true
# stc.opt.dataflow-op-inline    : true
# stc.opt.dead-code-elim        : true
# stc.opt.demote-globals        : true
# stc.opt.disable-asserts       : false
# stc.opt.expand-loop-threshold-insts: 256
# stc.opt.expand-loop-threshold-iters: 16
# stc.opt.expand-loops          : false
# stc.opt.finalized-var         : true
# stc.opt.flatten-nested        : true
# stc.opt.full-function-inline  : false
# stc.opt.full-unroll           : false
# stc.opt.function-always-inline-threshold: 5
# stc.opt.function-inline       : true
# stc.opt.function-inline-threshold: 50
# stc.opt.function-signature    : true
# stc.opt.hoist                 : true
# stc.opt.hoist-refcounts       : true
# stc.opt.loop-simplify         : true
# stc.opt.max-iterations        : 10
# stc.opt.merge-refcounts       : true
# stc.opt.piggyback-refcounts   : true
# stc.opt.pipeline              : false
# stc.opt.propagate-aliases     : true
# stc.opt.reorder-insts         : false
# stc.opt.shared-constants      : true
# stc.opt.unroll-loop-threshold-insts: 192
# stc.opt.unroll-loop-threshold-iters: 8
# stc.opt.unroll-loops          : true
# stc.opt.value-number          : true
# stc.opt.wait-coalesce         : true
# stc.output_filename           : ./swift-t-test_empty_brackets.gK9.tic
# stc.preproc.force-cpp         : false
# stc.preproc.force-gcc         : false
# stc.preprocess_only           : false
# stc.profile                   : false
# stc.refcounting               : true
# stc.rpath                     : 
# stc.stc_home                  : /usr/local/src/swift-t-0.9.1/stc
# stc.turbine.version           : 0.6.0
# stc.turbine_home              : /usr/local/src/swift-t-0.9.1/turbine
# stc.version                   : 0.6.0

# Metadata:

package require turbine 0.6.0
namespace import turbine::*


proc swift:constants {  } {
    turbine::c::log "function:swift:constants"
}


proc swift:main {  } {
    turbine::c::log "function: __entry"
    # Var: string t:7 EXPR_TEMPORARY test_empty_brackets.swift:27:33
    # Var: $string v:configFilename VALUE_OF [string:configFilename]
    # Var: file u:configFile test_empty_brackets.swift:22:0
    # Var: file u:sampleInfoFile test_empty_brackets.swift:27:0
    # Var: string[string] u:vars test_empty_brackets.swift:25:0
    # Var: string t:11 EXPR_TEMPORARY test_empty_brackets.swift:__entry():38:88
    # Var: string t:13 EXPR_TEMPORARY test_empty_brackets.swift:__entry():38:106
    # Var: string t:15 EXPR_TEMPORARY test_empty_brackets.swift:__entry():38:148
    # Var: string t:18 EXPR_TEMPORARY test_empty_brackets.swift:__entry():43:29
    # Var: string t:23 EXPR_TEMPORARY test_empty_brackets.swift:__entry():46:25
    # Var: string t:39 EXPR_TEMPORARY test_empty_brackets.swift:__entry():53:23
    # Var: string t:41 EXPR_TEMPORARY test_empty_brackets.swift:__entry():53:53
    # Var: string t:43 EXPR_TEMPORARY test_empty_brackets.swift:__entry():53:71
    # Var: string t:46 EXPR_TEMPORARY test_empty_brackets.swift:__entry():53:104
    # Var: $file v:configFile VALUE_OF [file:configFile]
    # Var: $file v:configFile:1 VALUE_OF [file:configFile]
    # Var: $string$[int] v:configFileData VALUE_OF [string[int]:configFileData]
    # Var: int t:45 EXPR_TEMPORARY test_empty_brackets.swift:__entry():53:93
    lassign [ adlb::multicreate [ list string 1 1 1 ] [ list container string string 11 1 4 ] [ list string 1 1 5 ] [ list string 1 1 6 ] [ list string 1 1 7 ] [ list string 1 1 8 ] [ list string 1 1 9 ] [ list string 1 1 10 ] [ list string 1 1 11 ] [ list string 1 1 12 ] [ list string 1 1 13 ] [ list integer 1 1 14 ] ] t:7 u:vars t:11 t:13 t:15 t:18 t:23 t:39 t:41 t:43 t:46 t:45
    turbine::c::log "allocated t:7=<${t:7}> u:vars=<${u:vars}> t:11=<${t:11}> t:13=<${t:13}> t:15=<${t:15}>"
    turbine::c::log "allocated t:18=<${t:18}> t:23=<${t:23}> t:39=<${t:39}> t:41=<${t:41}> t:43=<${t:43}>"
    turbine::c::log "allocated t:46=<${t:46}> t:45=<${t:45}>"
    lassign [ turbine::make_file_tds [ adlb::multicreate [ list file 1 1 2 ] [ list file 1 1 3 ] ] [ list 0 0 ] ] u:configFile u:sampleInfoFile
    turbine::argv_accept_impl [ list "runfile" ]
    set v:configFilename [ turbine::argv_get_impl "runfile" ]
    set tcltmp:init_rc 1
    set v:configFile [ turbine::create_local_file_ref "" ${tcltmp:init_rc} 0 ]
    turbine::input_file_local v:configFile ${v:configFilename}
    turbine::store_file ${u:configFile} v:configFile 1
    set v:configFile:1 [ turbine::retrieve_file ${u:configFile} CACHED 1 ]
    set v:configFileData [ turbine::file_lines_impl ${v:configFile:1} ]
    turbine::container_reference ${u:vars} "SAMPLEINFORMATION" ${t:7} string
    turbine::container_reference ${u:vars} "SAMPLELB" ${t:11} string
    turbine::container_reference ${u:vars} "SAMPLEPL" ${t:13} string
    turbine::container_reference ${u:vars} "SAMPLECN" ${t:15} string
    turbine::container_reference ${u:vars} "OUTPUTDIR" ${t:18} string
    turbine::container_reference ${u:vars} "TMPDIR" ${t:23} string
    turbine::container_reference ${u:vars} "BWADIR" ${t:39} string
    turbine::container_reference ${u:vars} "BWAINDEX" ${t:41} string
    turbine::container_reference ${u:vars} "BWAMEMPARAMS" ${t:43} string
    turbine::container_reference ${u:vars} "PBSCORES" ${t:46} string
    dict for {tcltmp:ignore v:line} ${v:configFileData} {
        # Var: string[int] u:keyValuePair RENAMED [string[int]:keyValuePair] ./pipelinefunctions/miscellaneous.swift:getConfigVariables():8:16
        # Var: $string$[int] v:keyValuePair VALUE_OF [string[int]:keyValuePair]
        # Var: $string v:alias:name VALUE_OF [string:__alias:name]
        # Var: $string v:alias:value VALUE_OF [string:__alias:value]
        lassign [ adlb::multicreate [ list container integer string 1 2 15 ] ] u:keyValuePair
        turbine::c::log "allocated u:keyValuePair=<${u:keyValuePair}>"
        set v:keyValuePair [ turbine::split_impl ${v:line} "=" ]
        turbine::build_rec ${u:keyValuePair} ${v:keyValuePair} [ list container integer string ] 0 1
        set a:name [ adlb::subscript_container ${u:keyValuePair} 0 ]
        set v:alias:name [ turbine::retrieve_string ${a:name} ]
        set a:value [ adlb::subscript_container ${u:keyValuePair} 1 ]
        set v:alias:value [ turbine::retrieve_string ${a:value} CACHED 1 ]
        turbine::container_insert ${u:vars} ${v:alias:name} ${v:alias:value} string 0
        adlb::write_refcount_decr ${u:keyValuePair} 1
    }
    turbine::rule [ list ${t:7} ] "__entry-call_foreign-input_file ${t:11} ${t:13} ${t:15} ${t:18} ${t:23} ${t:39} ${t:41} ${t:43} ${t:45} ${t:7} {${u:sampleInfoFile}} ${u:vars}"
    turbine::rule [ list ${t:46} ] "__entry-async_op-parse_int ${t:45} ${t:46}"
    turbine::decr_local_file_refcount v:configFile
    adlb::write_refcount_decr ${u:vars} 1
}


proc __entry-call_foreign-input_file { t:11 t:13 t:15 t:18 t:23 t:39 t:41 t:43 t:45 t:7 u:sampleInfoFile u:vars } {
    # Var: $string v:t:7 VALUE_OF [string:__t:7]
    # Var: $file v:sampleInfoFile VALUE_OF [file:sampleInfoFile]
    # Var: $file v:sampleInfoFile:1 VALUE_OF [file:sampleInfoFile]
    # Var: $string$[int] v:sampleLines VALUE_OF [string[int]:sampleLines]
    set v:t:7 [ turbine::retrieve_string ${t:7} CACHED 1 ]
    set tcltmp:init_rc 1
    set v:sampleInfoFile [ turbine::create_local_file_ref "" ${tcltmp:init_rc} 0 ]
    turbine::input_file_local v:sampleInfoFile ${v:t:7}
    turbine::store_file ${u:sampleInfoFile} v:sampleInfoFile 1
    set v:sampleInfoFile:1 [ turbine::retrieve_file ${u:sampleInfoFile} CACHED 1 ]
    set v:sampleLines [ turbine::file_lines_impl ${v:sampleInfoFile:1} ]
    set tcltmp:iters [ dict size ${v:sampleLines} ]
    turbine::read_refcount_incr ${t:39} [ expr { ${tcltmp:iters} } ]
    turbine::read_refcount_incr ${t:18} [ expr { ${tcltmp:iters} } ]
    turbine::read_refcount_incr ${t:13} [ expr { ${tcltmp:iters} } ]
    turbine::read_refcount_incr ${t:15} [ expr { ${tcltmp:iters} } ]
    turbine::read_refcount_incr ${t:43} [ expr { ${tcltmp:iters} } ]
    turbine::read_refcount_incr ${t:11} [ expr { ${tcltmp:iters} } ]
    turbine::read_refcount_incr ${u:vars} [ expr { 3 * ${tcltmp:iters} } ]
    turbine::read_refcount_incr ${t:45} [ expr { ${tcltmp:iters} } ]
    turbine::read_refcount_incr ${t:23} [ expr { ${tcltmp:iters} } ]
    turbine::read_refcount_incr ${t:41} [ expr { ${tcltmp:iters} } ]
    dict for {tcltmp:ignore v:sample} ${v:sampleLines} {
        # Var: string[int] u:sampleInfo test_empty_brackets.swift:__entry():33:1
        # Var: string t:17 EXPR_TEMPORARY test_empty_brackets.swift:__entry():43:22
        # Var: file u:dedupsortedbam test_empty_brackets.swift:__entry():43:71
        # Var: file u:alignedsam test_empty_brackets.swift:__entry():46:63
        # Var: file u:dedupsam test_empty_brackets.swift:__entry():50:63
        # Var: string t:34 EXPR_TEMPORARY test_empty_brackets.swift:__entry():51:17
        # Var: file u:dedupbam test_empty_brackets.swift:__entry():51:66
        # Var: $string$[int] v:sampleInfo VALUE_OF [string[int]:sampleInfo]
        # Var: $string v:alias:sampleName VALUE_OF [string:__alias:sampleName]
        # Var: $string v:alias:read1 VALUE_OF [string:__alias:read1]
        # Var: $string v:alias:read2 VALUE_OF [string:__alias:read2]
        # Var: $void v:t:27 VALUE_OF [void:__t:27]
        lassign [ adlb::multicreate [ list container integer string 1 2 16 ] [ list string 1 1 17 ] [ list string 1 1 21 ] ] u:sampleInfo t:17 t:34
        turbine::c::log "allocated u:sampleInfo=<${u:sampleInfo}> t:17=<${t:17}> t:34=<${t:34}>"
        lassign [ turbine::make_file_tds [ adlb::multicreate [ list file 0 1 18 ] [ list file 1 1 19 ] [ list file 1 1 20 ] [ list file 1 1 22 ] ] [ list 1 1 1 1 ] ] u:dedupsortedbam u:alignedsam u:dedupsam u:dedupbam
        set v:sampleInfo [ turbine::split_impl ${v:sample} " " ]
        turbine::build_rec ${u:sampleInfo} ${v:sampleInfo} [ list container integer string ] 0 1
        set a:sampleName [ adlb::subscript_container ${u:sampleInfo} 0 ]
        set v:alias:sampleName [ turbine::retrieve_string ${a:sampleName} ]
        set a:read1 [ adlb::subscript_container ${u:sampleInfo} 1 ]
        set v:alias:read1 [ turbine::retrieve_string ${a:read1} ]
        set a:read2 [ adlb::subscript_container ${u:sampleInfo} 2 ]
        set v:alias:read2 [ turbine::retrieve_string ${a:read2} CACHED 1 ]
        turbine::trace_impl "##CASE1: dedup tool is ## SAMBLASTER ##. We use a single command for align-deduplication ##"
        turbine::rule [ list ${t:18} ] [ list __entry-optmerged ${t:17} ${t:18} ${t:34} ${v:alias:sampleName} ${u:dedupbam} ${u:dedupsortedbam} ]
        turbine::rule [ list ${t:23} ] [ list __entry-optmerged-1 ${t:11} ${t:13} ${t:15} ${t:17} ${t:23} ${t:34} ${t:39} ${t:41} ${t:43} ${t:45} ${v:alias:read1} ${v:alias:read2} ${v:alias:sampleName} ${u:alignedsam} ${u:dedupbam} ${u:dedupsam} ${u:dedupsortedbam} ${u:vars} ]
        adlb::write_refcount_decr ${u:sampleInfo} 1
    }
    turbine::decr_local_file_refcount v:sampleInfoFile
    turbine::read_refcount_decr ${t:18} 1
    turbine::read_refcount_decr ${t:15} 1
    turbine::read_refcount_decr ${t:39} 1
    turbine::read_refcount_decr ${t:43} 1
    turbine::read_refcount_decr ${t:11} 1
    turbine::read_refcount_decr ${t:23} 1
    turbine::read_refcount_decr ${t:45} 1
    turbine::read_refcount_decr ${t:13} 1
    turbine::read_refcount_decr ${u:vars} 1
    turbine::read_refcount_decr ${t:41} 1
}


proc __entry-optmerged { t:17 t:18 t:34 v:alias:sampleName u:dedupbam u:dedupsortedbam } {
    # Var: $string v:t:18 VALUE_OF [string:__t:18]
    # Var: $string v:t:17 VALUE_OF [string:__t:17]
    # Var: $string v:t:34 VALUE_OF [string:__t:34]
    set v:t:18 [ turbine::retrieve_string ${t:18} CACHED 1 ]
    set v:t:17 "${v:t:18}/align/${v:alias:sampleName}.wdups.sorted.bam"
    turbine::store_string ${t:17} ${v:t:17}
    set v:t:34 "${v:t:18}/align/${v:alias:sampleName}.wdups.bam"
    turbine::store_string ${t:34} ${v:t:34}
    turbine::set_filename_val ${u:dedupsortedbam} ${v:t:17}
    turbine::set_filename_val ${u:dedupbam} ${v:t:34}
}


proc __entry-optmerged-1 { t:11 t:13 t:15 t:17 t:23 t:34 t:39 t:41 t:43 t:45 v:alias:read1 v:alias:read2 v:alias:sampleName u:alignedsam u:dedupbam u:dedupsam u:dedupsortedbam u:vars } {
    # Var: $string v:t:23 VALUE_OF [string:__t:23]
    # Var: $string v:t:22 VALUE_OF [string:__t:22]
    # Var: $string v:t:29 VALUE_OF [string:__t:29]
    set v:t:23 [ turbine::retrieve_string ${t:23} CACHED 1 ]
    set v:t:22 "${v:t:23}/align/${v:alias:sampleName}.nodups.sam"
    set v:t:29 "${v:t:23}/align/${v:alias:sampleName}.wdups.sam"
    turbine::set_filename_val ${u:alignedsam} ${v:t:22}
    turbine::set_filename_val ${u:dedupsam} ${v:t:29}
    turbine::rule [ list ${t:11} ${t:13} ${t:15} ${t:39} ${t:41} ${t:43} ${t:45} ] [ list __entry-async_op-sprintf ${t:11} ${t:13} ${t:15} ${t:17} ${t:34} ${t:39} ${t:41} ${t:43} ${t:45} ${v:alias:read1} ${v:alias:read2} ${v:alias:sampleName} ${v:t:22} ${v:t:23} ${v:t:29} ${u:alignedsam} ${u:dedupbam} ${u:dedupsam} ${u:dedupsortedbam} ${u:vars} ]
}


proc __entry-async_op-sprintf { t:11 t:13 t:15 t:17 t:34 t:39 t:41 t:43 t:45 v:alias:read1 v:alias:read2 v:alias:sampleName v:t:22 v:t:23 v:t:29 u:alignedsam u:dedupbam u:dedupsam u:dedupsortedbam u:vars } {
    # Var: $string v:t:11 VALUE_OF [string:__t:11]
    # Var: $string v:t:13 VALUE_OF [string:__t:13]
    # Var: $string v:t:15 VALUE_OF [string:__t:15]
    # Var: $string v:rgheader:1 VALUE_OF [string:rgheader]
    # Var: $string v:bwadir RENAMED [$string:__v:bwadir] ./pipelinefunctions/align_dedup.swift:bwa_mem():4:86
    # Var: $string v:bwamemparams RENAMED [$string:__v:bwamemparams] ./pipelinefunctions/align_dedup.swift:bwa_mem():4:86
    # Var: $int v:PBSCORES RENAMED [$int:__v:PBSCORES] ./pipelinefunctions/align_dedup.swift:bwa_mem():4:86
    # Var: $string v:INDEX RENAMED [$string:__v:INDEX] ./pipelinefunctions/align_dedup.swift:bwa_mem():4:86
    # Var: $file v:output:3 RENAMED [$file:__v:output] ./pipelinefunctions/align_dedup.swift:bwa_mem():4:86
    # Var: string t:48 EXPR_TEMPORARY test_empty_brackets.swift:__entry():54:24
    lassign [ adlb::multicreate [ list string 1 1 23 ] ] t:48
    turbine::c::log "allocated t:48=<${t:48}>"
    set v:t:11 [ turbine::retrieve_string ${t:11} CACHED 1 ]
    set v:t:13 [ turbine::retrieve_string ${t:13} CACHED 1 ]
    set v:t:15 [ turbine::retrieve_string ${t:15} CACHED 1 ]
    set v:rgheader:1 [ eval format [ list "@RG\tID:%s\tLB:%s\tPL:%s\tPU:%s\tSM:%s\tCN:%s" ${v:alias:sampleName} ${v:t:11} ${v:t:13} ${v:alias:sampleName} ${v:alias:sampleName} ${v:t:15} ] ]
    set v:bwadir [ turbine::retrieve_string ${t:39} CACHED 1 ]
    set v:bwamemparams [ turbine::retrieve_string ${t:43} CACHED 1 ]
    set v:PBSCORES [ turbine::retrieve_integer ${t:45} CACHED 1 ]
    set v:INDEX [ turbine::retrieve_string ${t:41} CACHED 1 ]
    set tcltmp:init_rc 2
    set v:output:3 [ turbine::create_local_file_ref ${v:t:22} ${tcltmp:init_rc} 1 ]
    turbine::c::log [ list exec: __v:bwadir "mem" "-M" ${v:bwamemparams} "-t" ${v:PBSCORES} "-R" ${v:rgheader:1} ${v:INDEX} ${v:alias:read1} ${v:alias:read2} [ dict create "stdout" ${v:t:22} ] ]
    turbine::exec_external ${v:bwadir} [ dict create "stdout" ${v:t:22} ] "mem" "-M" ${v:bwamemparams} "-t" ${v:PBSCORES} "-R" ${v:rgheader:1} ${v:INDEX} ${v:alias:read1} ${v:alias:read2}
    turbine::store_file ${u:alignedsam} v:output:3 0
    turbine::container_reference ${u:vars} "SAMBLASTERDIR" ${t:48} string
    turbine::rule [ list ${t:48} ] [ list samblaster-app-leaf1 ${t:17} ${t:34} ${t:48} ${v:PBSCORES} ${v:t:22} ${v:t:23} ${v:t:29} ${u:alignedsam} ${u:dedupbam} ${u:dedupsam} ${u:dedupsortedbam} ${u:vars} ]
    turbine::decr_local_file_refcount v:output:3
}


proc samblaster-app-leaf1 { t:17 t:34 t:48 v:PBSCORES v:t:22 v:t:23 v:t:29 u:alignedsam u:dedupbam u:dedupsam u:dedupsortedbam u:vars } {
    # Var: $string v:samblasterdir RENAMED [$string:__v:samblasterdir] ./pipelinefunctions/align_dedup.swift:samblaster():27:43
    # Var: $file v:inputFile:2 RENAMED [$file:__v:inputFile] ./pipelinefunctions/align_dedup.swift:samblaster():27:43
    # Var: $file v:output:2 RENAMED [$file:__v:output] ./pipelinefunctions/align_dedup.swift:samblaster():27:43
    # Var: string t:50 EXPR_TEMPORARY test_empty_brackets.swift:__entry():55:27
    lassign [ adlb::multicreate [ list string 1 1 24 ] ] t:50
    turbine::c::log "allocated t:50=<${t:50}>"
    set v:samblasterdir [ turbine::retrieve_string ${t:48} CACHED 1 ]
    set v:inputFile:2 [ turbine::retrieve_file ${u:alignedsam} CACHED 1 ]
    set tcltmp:init_rc 2
    set v:output:2 [ turbine::create_local_file_ref ${v:t:29} ${tcltmp:init_rc} 1 ]
    turbine::c::log [ list exec: __v:samblasterdir "-M" "-i" ${v:t:22} [ dict create "stdout" ${v:t:29} ] ]
    turbine::exec_external ${v:samblasterdir} [ dict create "stdout" ${v:t:29} ] "-M" "-i" ${v:t:22}
    turbine::store_file ${u:dedupsam} v:output:2 0
    turbine::container_reference ${u:vars} "SAMTOOLSDIR" ${t:50} string
    turbine::rule [ list ${t:34} ${t:50} ] [ list samtools_view-app-leaf1 ${t:17} ${t:34} ${t:50} ${v:PBSCORES} ${v:t:23} ${v:t:29} ${u:dedupbam} ${u:dedupsam} ${u:dedupsortedbam} ${u:vars} ]
    turbine::decr_local_file_refcount v:output:2
}


proc samtools_view-app-leaf1 { t:17 t:34 t:50 v:PBSCORES v:t:23 v:t:29 u:dedupbam u:dedupsam u:dedupsortedbam u:vars } {
    # Var: $string v:samtoolsdir RENAMED [$string:__v:samtoolsdir] ./pipelinefunctions/align_dedup.swift:samtools_view():15:55
    # Var: $string v:__filename:output:1 RENAMED [$string:__v:__filename:output] ./pipelinefunctions/align_dedup.swift:samtools_view():15:55
    # Var: $file v:inputFile:1 RENAMED [$file:__v:inputFile] ./pipelinefunctions/align_dedup.swift:samtools_view():15:55
    # Var: $file v:output:1 RENAMED [$file:__v:output] ./pipelinefunctions/align_dedup.swift:samtools_view():15:55
    # Var: string t:57 EXPR_TEMPORARY test_empty_brackets.swift:__entry():60:35
    lassign [ adlb::multicreate [ list string 1 1 25 ] ] t:57
    turbine::c::log "allocated t:57=<${t:57}>"
    set v:samtoolsdir [ turbine::retrieve_string ${t:50} CACHED 1 ]
    set v:__filename:output:1 [ turbine::retrieve_string ${t:34} CACHED 1 ]
    set v:inputFile:1 [ turbine::retrieve_file ${u:dedupsam} CACHED 1 ]
    set tcltmp:init_rc 2
    set v:output:1 [ turbine::create_local_file_ref ${v:__filename:output:1} ${tcltmp:init_rc} 1 ]
    turbine::c::log [ list exec: __v:samtoolsdir "view" "-@" ${v:PBSCORES} "-bS" ${v:t:29} "-u" [ dict create "stdout" ${v:__filename:output:1} ] ]
    turbine::exec_external ${v:samtoolsdir} [ dict create "stdout" ${v:__filename:output:1} ] "view" "-@" ${v:PBSCORES} "-bS" ${v:t:29} "-u"
    turbine::store_file ${u:dedupbam} v:output:1 0
    turbine::container_reference ${u:vars} "NOVOCRAFTDIR" ${t:57} string
    turbine::rule [ list ${t:17} ${t:57} ] [ list __entry-async_op-strcat ${t:17} ${t:57} ${v:PBSCORES} ${v:__filename:output:1} ${v:t:23} ${u:dedupbam} ${u:dedupsortedbam} ]
    turbine::decr_local_file_refcount v:output:1
}


proc __entry-async_op-strcat { t:17 t:57 v:PBSCORES v:__filename:output:1 v:t:23 u:dedupbam u:dedupsortedbam } {
    # Var: $string v:t:57 VALUE_OF [string:__t:57]
    # Var: $string v:t:56 VALUE_OF [string:__t:56]
    # Var: $string v:__filename:output RENAMED [$string:__v:__filename:output] ./pipelinefunctions/align_dedup.swift:novosort():33:79
    # Var: $file v:inputFile RENAMED [$file:__v:inputFile] ./pipelinefunctions/align_dedup.swift:novosort():33:79
    # Var: $file v:output RENAMED [$file:__v:output] ./pipelinefunctions/align_dedup.swift:novosort():33:79
    set v:t:57 [ turbine::retrieve_string ${t:57} CACHED 1 ]
    set v:t:56 "${v:t:57}/novosort"
    set v:__filename:output [ turbine::retrieve_string ${t:17} CACHED 1 ]
    set v:inputFile [ turbine::retrieve_file ${u:dedupbam} CACHED 1 ]
    set tcltmp:init_rc 2
    set v:output [ turbine::create_local_file_ref ${v:__filename:output} ${tcltmp:init_rc} 1 ]
    turbine::c::log [ list exec: __v:t:56 "--index" "--tmpdir" ${v:t:23} "--threads" ${v:PBSCORES} ${v:__filename:output:1} "-o" ${v:__filename:output} "" [ dict create ] ]
    turbine::exec_external ${v:t:56} [ dict create ] "--index" "--tmpdir" ${v:t:23} "--threads" ${v:PBSCORES} ${v:__filename:output:1} "-o" ${v:__filename:output} ""
    turbine::store_file ${u:dedupsortedbam} v:output 0
    turbine::decr_local_file_refcount v:output
}


proc __entry-async_op-parse_int { t:45 t:46 } {
    # Var: $string v:t:46 VALUE_OF [string:__t:46]
    # Var: $int v:t:45 VALUE_OF [int:__t:45]
    set v:t:46 [ turbine::retrieve_string ${t:46} CACHED 1 ]
    set v:t:45 [ turbine::parse_int_impl ${v:t:46} 10 ]
    turbine::store_integer ${t:45} ${v:t:45}
}

turbine::defaults
turbine::declare_custom_work_types COASTER
turbine::init $servers "Swift"
turbine::enable_read_refcount
adlb::declare_struct_type 16 s:location [ list "rank" integer "strictness" string "accuracy" string ]
turbine::check_constants "WORKER\[WORKER\]" ${turbine::WORK_TASK} 0 "CONTROL" ${turbine::WORK_TASK} 0 "ADLB_RANK_ANY" ${adlb::RANK_ANY} -100
adlb::add_debug_symbol 1 "__t:7" "test_empty_brackets:27:33"
adlb::add_debug_symbol 2 "configFile" "test_empty_brackets:22:0"
adlb::add_debug_symbol 3 "sampleInfoFile" "test_empty_brackets:27:0"
adlb::add_debug_symbol 4 "vars" "test_empty_brackets:25:0"
adlb::add_debug_symbol 5 "__t:11" "test_empty_brackets:__entry():38:88"
adlb::add_debug_symbol 6 "__t:13" "test_empty_brackets:__entry():38:106"
adlb::add_debug_symbol 7 "__t:15" "test_empty_brackets:__entry():38:148"
adlb::add_debug_symbol 8 "__t:18" "test_empty_brackets:__entry():43:29"
adlb::add_debug_symbol 9 "__t:23" "test_empty_brackets:__entry():46:25"
adlb::add_debug_symbol 10 "__t:39" "test_empty_brackets:__entry():53:23"
adlb::add_debug_symbol 11 "__t:41" "test_empty_brackets:__entry():53:53"
adlb::add_debug_symbol 12 "__t:43" "test_empty_brackets:__entry():53:71"
adlb::add_debug_symbol 13 "__t:46" "test_empty_brackets:__entry():53:104"
adlb::add_debug_symbol 14 "__t:45" "test_empty_brackets:__entry():53:93"
adlb::add_debug_symbol 15 "keyValuePair" "pipelinefunctions.miscellaneous:getConfigVariables():8:16"
adlb::add_debug_symbol 16 "sampleInfo" "test_empty_brackets:__entry():33:1"
adlb::add_debug_symbol 17 "__t:17" "test_empty_brackets:__entry():43:22"
adlb::add_debug_symbol 18 "dedupsortedbam" "test_empty_brackets:__entry():43:71"
adlb::add_debug_symbol 19 "alignedsam" "test_empty_brackets:__entry():46:63"
adlb::add_debug_symbol 20 "dedupsam" "test_empty_brackets:__entry():50:63"
adlb::add_debug_symbol 21 "__t:34" "test_empty_brackets:__entry():51:17"
adlb::add_debug_symbol 22 "dedupbam" "test_empty_brackets:__entry():51:66"
adlb::add_debug_symbol 23 "__t:48" "test_empty_brackets:__entry():54:24"
adlb::add_debug_symbol 24 "__t:50" "test_empty_brackets:__entry():55:27"
adlb::add_debug_symbol 25 "__t:57" "test_empty_brackets:__entry():60:35"
turbine::start swift:main swift:constants
turbine::finalize
